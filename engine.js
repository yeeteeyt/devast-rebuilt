(function() {
        class Vector2{
        constructor(x, y){
            this.x = x;
            this.y = y;
        }
        set(x, y){
            this.x = x;
            this.y = y;
        }
        toString(){
            return "X: " + this.x + ", Y: " + this.y;
        }
    }
    //Цвет ника клана
    var clanColor = "#888999";
    //Цвет фона ника клана
    var clanColorBack = "#FF0000";
    var myID = 0;
    var myX = 0;
    var myY = 0;
    var aimAngle = 0;
    var menuActive = false;
    var aimActive = true;
    var teleportActive = false;
    var accuracy = 200;
    var targerId = 0;
    var deltaTime = 0;
    var triggered = false;
    var myPos = new Vector2(0, 0);
    var mousePosition = new Vector2(0, 0);
    var mouseClick = new Vector2(0, 0);
    var wordsRanen = ["Бейте Растение!!!"];
    var myNickname = "Фильма не будет";
    var freinds = ["QQ", "W8"];
    var freindsNicks = ["Фильма не будет"]
    var words = ["Бейте Растение!!!"];
    var direct = 0;
    var cameraX = 0;
    var parameters = [];
    var cameraY = 0;
    var HP = 0;
    var bulletS = 3000;
    var playerS = 0;
    const viewportWidth = document.documentElement.clientWidth
    const viewportHeight = document.documentElement.clientHeight
    var win = window;
    var WMvVw = win.navigator.userAgent.toLowerCase();
    function Vector(x, y){
        this.x = x;
        this.y = y;
    }
    Vector.prototype.add = function(otherVector){
        var x = this.x + otherVector.x;
        var y = this.y + otherVector.y;
        return new Vector(x, y);
    }
    Vector.prototype.toString = function(){
          return 'Vector { x: ' + this.x + ', y: ' + this.y + ' }';
    }
    Vector.prototype.set = function(x, y){
        this.x = x;
        this.y = y;
        return new Vector(x, y);
    }
    Vector.prototype.length = function(){
        return win.Math.sqrt(this.x * this.x + this.y * this.y);
    }
    function parameter(){

    }
    var vNv = (((((((WMvVw.indexOf("mobile") !== -1) || (WMvVw.indexOf("android") !== -1)) || (WMvVw.indexOf("ipad") !== -1)) || (WMvVw.indexOf("iphone") !== -1)) || (WMvVw.indexOf("ipod") !== -1)) || (WMvVw.indexOf("kindle") !== -1)) || (WMvVw.indexOf("silk/") !== -1)) ? 1 : 0;
    if (vNv === 1) {
        var mMnwW = win.document.createElement("meta");
        mMnwW.name = "viewport";
        mMnwW.content = "initial-scale=1.0 maximum-scale=1.0";
        win.document.getElementsByTagName("head")[0].appendChild(mMnwW);
    }
    clint = null;
    win.addEventListener("wheel", e => {
        if (e.deltaY < 0) {
            Mw.scale += 0.1;
        } else if(e.deltaY > 0){
            Mw.scale -=0.07;
        }
    });
    win.addEventListener("mousemove", e => {
        mousePosition.set(e.clientX, e.clientY);
    });
    win.addEventListener("click", e => {
        mouseClick.set(e.x, e.y);
    });
    var aimbotOnOff = false;
    win.addEventListener("keydown", e => {
        if(e.code == "CapsLock" && teleportActive){
            teleportActive = false;
        } else if(e.code == "CapsLock" && !teleportActive) {
            teleportActive = true;
        }
        if(e.code == "NumpadAdd") aimActive = aimActive ? false : true;
        if(e.code == "Insert" && menuActive){
            menuActive = false;
        } else if(e.code == "Insert" && !menuActive) {
            menuActive = true;
        }
        if(e.code == "Space" && triggered) triggered = false;
        //if(e.code == "NumpadSubtract") 
    });
    try {
        clint = win.localStorage;
        clint.setItem("LapaMauve", "1");
        clint.getItem("LapaMauve");
    } catch (vNn) {
        NVvnV = {};
        clint = {};
        clint.setItem = function(WWVWv, mNmWN) {
            NVvnV[WWVWv] = mNmWN;
        };
        clint.getItem = function(WWVWv) {
            return (NVvnV[WWVWv] === win.undefined) ? null : NVvnV[WWVWv];
        };
    }
    var VMM;
    var nvn, nwW, mmw, VvN, mWmwm, nVnwN, wvwNM, wwWnm, nvm, MMwnm, VNwMw, nwVmW;
    var Mm;
    var mV = 0;
    var VmN = 0;
    var mn = 1;
    var mNVwV = 100;
    var WMWmn = 1;
    var wVmNW = 1;
    var nWWnW = 0;
    var wN = (function() {
        var wmWnm = 5;
        var nnW = 0;
        var vision = 0;
        var WVNmV = 0;
        var wMmNw = 0;
        var VVWwv = new win.Array(wmWnm);
        var vvV = {
            vMMnv: wVmNW,
            size: win.innerWidth,
            wmNnN: true,
            MNWmW: win.devicePixelRatio || 1,
            NmwvV: win.devicePixelRatio || 1,
            nmWmN: 1,
            wWMMM: 0,
            ratio: 0,
            MMw: 1,
            WWvvm: 1,
            vWWNM: "can",
            VVVNW: "bod"
        };

        function vwnNn(wMN, vMMnv, vWWNM, VVVNW, wMv, mnV, wmNnN) {
            MNwmM(wMN);
            if (vMMnv !== win.undefined) vvV.vMMnv = vMMnv;
            if (vWWNM !== win.undefined) vvV.vWWNM = vWWNM;
            if (VVVNW !== win.undefined) vvV.VVVNW = VVVNW;
            if (wMv !== win.undefined) vvV.size = wMv;
            if (mnV !== win.undefined) vvV.ratio = mnV;
            if (wmNnN !== win.undefined) vvV.wmNnN = wmNnN;
            VMM = win.document.getElementById(vvV.vWWNM);
            Mm = VMM.getContext('2d');
            vvV.nmWmN = ((((Mm.VVnwv || Mm.VVMNN) || Mm.MNVww) || Mm.MmNMW) || Mm.NwmMW) || 1;
            nWVwM();
            VMM.oncontextmenu = function() {
                return false;
            };
            var VnnMV = win.document.getElementById(vvV.VVVNW);
            VnnMV.ondragstart = function() {
                return false;
            };
            VnnMV.ondrop = function() {
                return false;
            };
            VnnMV.onresize = MmWMW;
            MmWMW();
            vNwwn();
        };

        function MmWMW() {
            var mnV, WW, vN;
            if (vvV.vMMnv === nWWnW) {
                if (win.innerWidth > win.innerHeight) {
                    mnV = win.innerHeight / win.innerWidth;
                    WW = vvV.size;
                    vN = win.Math.floor(WW * mnV);
                } else {
                    mnV = win.innerWidth / win.innerHeight;
                    vN = vvV.size;
                    WW = win.Math.floor(vN * mnV);
                }
            } else {
                WW = win.innerWidth;
                vN = win.innerHeight;
            }
            nvn = WW;
            nwW = vN;
            mmw = win.Math.floor(nvn / 2);
            VvN = win.Math.floor(nwW / 2);
            mWmwm = win.Math.floor(nvn / 4);
            nVnwN = win.Math.floor(nwW / 4);
            vvV.MMw = nvn / win.innerWidth;
            vvV.WWvvm = nwW / win.innerHeight;
            mnV = vvV.NmwvV / vvV.nmWmN;
            if (vvV.ratio !== 0) mnV *= vvV.ratio;
            VMM.width = nvn * mnV;
            VMM.height = nwW * mnV;
            if (vvV.vMMnv === wVmNW) {
                mn = win.Math.max(vN / ((vvV.size * 11) / 16), WW / vvV.size);
                VMM.style.width = WW + "px";
                VMM.style.height = vN + "px";
            }
            wvwNM = nvn / mn;
            wwWnm = nwW / mn;
            nvm = mmw / mn;
            MMwnm = VvN / mn;
            VNwMw = mWmwm / mn;
            nwVmW = nVnwN / mn;
            Mm.scale(mnV, mnV);
            NMwvN(Mm, vvV.wmNnN);
            nWMmW.update();
        };

        function nWVwM() {
            var vWvVM = 0;
            var nwwnM = ['ms', 'moz', 'webkit', 'o'];
            for (var Wv = 0;
                (Wv < nwwnM.length) && !win.requestAnimationFrame; ++Wv) {
                win.requestAnimationFrame = win[nwwnM[Wv] + 'RequestAnimationFrame'];
                win.cancelAnimationFrame = win[nwwnM[Wv] + 'CancelAnimationFrame'] || win[nwwnM[Wv] + 'CancelRequestAnimationFrame'];
            }
            if (!win.requestAnimationFrame) win.requestAnimationFrame = function(callback, mMWvw) {
                var NVWVM = (new win.Date).getTime();
                var VvmvV = win.Math.max(0, 16 - (NVWVM - vWvVM));
                var Wn = win.setTimeout(function() {
                    callback(NVWVM + VvmvV);
                }, VvmvV);
                vWvVM = NVWVM + VvmvV;
                return Wn;
            };
            if (!win.cancelAnimationFrame) win.cancelAnimationFrame = function(Wn) {
                win.clearTimeout(Wn);
            };
        };;

        function NmmvM(mvWMM) {
            if (((mvWMM === 1) || (mvWMM === 2)) || (mvWMM === 3)) {
                if (mvWMM === vvV.wWMMM) {
                    mvWMM = 0;
                    vvV.NmwvV = vvV.MNWmW / WMWmn;
                } else
                    vvV.NmwvV = vvV.MNWmW / mvWMM;
                vvV.wWMMM = mvWMM;
                MmWMW();
            }
        };;

        function nwMNV() {
            vision++;
            nnW += mV;
            if (nnW >= 1000) {
                WVNmV = (1000 * vision) / nnW; //how fast camera moves, less = faster
                VVWwv[wMmNw] = WVNmV;
                wMmNw++;
                if (wMmNw === wmWnm) {
                    var mmmWv = 0;
                    for (var place = 0; place < wmWnm; place++)
                        mmmWv += VVWwv[place];
                    mmmWv = mmmWv / wmWnm;
                    var mnV = vvV.MNWmW / vvV.nmWmN;
                    if (((vvV.wWMMM === 0) && (mnV === 2)) && (win.Math.abs(mNVwV - mmmWv) < 5)) {
                        if ((mmmWv < 22) && (mNVwV < 22)) {
                            if (WMWmn === 1) {
                                WMWmn = 2;
                                vvV.NmwvV = vvV.MNWmW / 2;
                                MmWMW();
                            } else if (WMWmn === 2) {
                                WMWmn = 3;
                                vvV.NmwvV = vvV.MNWmW / 3;
                                MmWMW();
                            }
                        } else if ((vvV.MNWmW > vvV.NmwvV) && ((mmmWv + mNVwV) > 119)) {
                            if (WMWmn === 2) {
                                WMWmn = 1;
                                vvV.NmwvV = vvV.MNWmW;
                                MmWMW();
                            } else if (WMWmn === 3) {
                                WMWmn = 2;
                                vvV.NmwvV = vvV.MNWmW / 2;
                                MmWMW();
                            }
                        }
                    }
                    mNVwV = mmmWv;
                    wMmNw = 0;
                }
                nnW = 0;
                vision = 0;
            }
        };;

        function vNwwn(vWVVW) {
            win.requestAnimationFrame(vNwwn);
            if (vWVVW !== win.undefined) {
                mV = vWVVW - VmN;
                VmN = vWVVW;
            }
            nwMNV();
            nWMmW.NM();
        };;

        function MvMWN(Mm, vW) {
            Mm.imageSmoothingEnabled = vW;
            Mm.VMvwwvW = vW;
            Mm.mvNWwmv = vW;
            Mm.MMVvnwv = vW;
            Mm.VVMNNnm = vW;
        };;

        function NMwvN(Mm, vW) {
            if (vW === false) win.document.getElementById(vvV.vWWNM).style.mNMmw = "pixelated";
            else win.document.getElementById(vvV.vWWNM).style.mNMmw = "auto";
            MvMWN(Mm, vW);
        };;

        function MWwvn(Mwwwm) {
            var W = new win.Image;
            W.src = Mwwwm.toDataURL("image/png");
            W.width = Mwwwm.width;
            W.height = Mwwwm.height;
            return W;
        };

        function nwWww(Mm, WNvmm, MMNwm, wNnMn, Vvwwm) {
            Mm.beginPath();
            Mm.moveTo(WNvmm * mn, MMNwm * mn);
            Mm.lineTo(wNnMn * mn, Vvwwm * mn);
        };

        function mvWVv(Mm, MWnvm, wNNwN, WW) {
            if (MWnvm !== win.undefined) {
                Mm.fillStyle = MWnvm;
                Mm.fill();
            }
            if (wNNwN !== win.undefined) {
                if (WW !== win.undefined)
                    Mm.lineWidth = WW;
                Mm.strokeStyle = wNNwN;
                Mm.stroke();
            }
        };;

        function vNnvV(Mm, Wv, wM, VwW, WVv) {
            Mm.beginPath();
            Mm.rect(Wv * mn, wM * mn, VwW * mn, WVv * mn);
        };;


        function Nvnnm() {
            var nVvmn = "#";
            for (var place = 0; place < 3; place++) {
                var N = win.Math.floor(win.Math.random() * 256);
                nVvmn += (N < 16) ? ("0" + N.toString(16)) : N.toString(16);
            }
            return nVvmn;
        };;

        function wmvwW(nMwVV, vW) {
            var vvv = nMwVV.length;
            var VmVNN = win.Math.floor(vW * vvv);
            var WNMVw = nMwVV[win.Math.max(0, VmVNN - 1)];
            var VnmVm = nMwVV[win.Math.min(VmVNN, vvv - 1)];
            vW = (vW % (1 / vvv)) * vvv;
            var nVvmn = "#";
            for (var place = 0; place < 3; place++) {
                var WNn = win.Math.floor(((VnmVm[place] - WNMVw[place]) * vW) + WNMVw[place]);
                nVvmn += (WNn < 16) ? ("0" + WNn.toString(16)) : WNn.toString(16);
            }
            return nVvmn;
        };;

        function nwN(Mm, Wv, wM, VwW, WVv, nVvmn) {
            Mm.beginPath();
            Mm.fillStyle = nVvmn;
            Mm.fillRect(Wv * mn, wM * mn, VwW * mn, WVv * mn);
        };;

        function VWVVm(Mm, Wv, wM, N) {
            Mm.beginPath();
            Mm.arc(Wv * mn, wM * mn, N * mn, 0, win.Math.PI * 2);
        };

        function vNmNM(Mm, Wv, wM, N, VVWWN, WVMMW) {
            Mm.beginPath();
            Mm.arc(Wv * mn, wM * mn, N * mn, VVWWN, WVMMW);
        };
        var nWMmW = win.undefined;

        function MNwmM(wMN) {
            nWMmW = wMN;
        };

        function VVNMw() {
            this.m = 1;
            this.Wvw = this.width / 2;
            this.mNm = this.height / 2;
        };;

        function Wnnvw() {
            this.m = 0;
        };;

        function wvv(MnM, W) {
            if ((W !== win.undefined) && (W.m === 2))
                return W;
            W = new win.Image;
            W.m = 2;
            W.onload = VVNMw;
            W.onerror = Wnnvw;
            W.src = MnM;
            return W;
        };;

        function nWV(WMwvw, WnnmM, VwW) {
            var WNn = win.Math.max(1, win.Math.floor(60 / mNVwV));
            for (var place = 0; place < WNn; place++)
                WMwvw = WNW.nWV(WMwvw, WnnmM, VwW);
            return WMwvw;
        };;

        function MvMvW() {
            var nvwmM = win.document.getElementById("bod");
            if (nvwmM.requestFullscreen) nvwmM.requestFullscreen();
            else if (nvwmM.msRequestFullscreen) nvwmM.msRequestFullscreen();
            else if (nvwmM.vmVwn) nvwmM.vmVwn();
            else if (nvwmM.webkitRequestFullscreen) nvwmM.webkitRequestFullscreen();
        };;

        function WWNvM() {
            if (win.document.exitFullscreen)
                win.document.exitFullscreen();
            else if (win.document.msExitFullscreen)
                win.document.msExitFullscreen();
            else if (win.document.mozCancelFullscreen)
                win.document.Wnwmv();
            else if (win.document.webkitExitFullscreen)
                win.document.webkitExitFullscreen();
        };;

        function VNmVM(MnM) {
            return {
                src: MnM,
                W: {
                    m: 0
                }
            };
        };;

        function MMvvN(MnM) {
            var WVV = VNmVM(MnM);
            WVV.W = wN.wvv(WVV.src, WVV.W);
            return WVV;
        };;

        function WM(WVV, Wv, wM, wW, wWNWN, wnwnM, Nm) {
            var W = WVV.W;
            if (W.m !== 1) {
                WVV.W = wN.wvv(WVV.src, WVV.W);
                return;
            }
            Nm *= mn;
            Wv *= mn;
            wM *= mn;
            var VwW = W.Wvw * Nm;
            var WVv = W.mNm * Nm;
            var nnvvn = (-VwW / 2) + (wWNWN * Nm);
            var nNmWM = (-WVv / 2) + (wnwnM * Nm);
            if ((((((Wv + nnvvn) + VwW) < 0) || (((wM + nNmWM) + WVv) < 0)) || (((Wv - VwW) - nvn) > 0)) || (((wM - WVv) - nwW) > 0))
                return;
            Mm.save();
            Mm.translate(Wv, wM);
            Mm.rotate(wW);
            Mm.drawImage(W, nnvvn, nNmWM, VwW, WVv);
            Mm.restore();
        };;

        function mVnNN(WVV, Wv, wM, wW, wWNWN, wnwnM, Nm, wwvMW, nMmWV, vwWmv) {
            var W = WVV.W;
            if (W.m !== 1) {
                WVV.W = wN.wvv(WVV.src, WVV.W);
                return;
            }
            Nm *= mn;
            var VwW = W.Wvw * Nm;
            var WVv = W.mNm * Nm;
            Mm.save();
            Mm.translate(Wv * mn, wM * mn);
            Mm.rotate(wW);
            Mm.translate(wWNWN * Nm, wnwnM * Nm);
            Mm.rotate(wwvMW);
            Mm.drawImage(W, (-VwW / 2) + (nMmWV * Nm), (-WVv / 2) + (vwWmv * Nm), VwW, WVv);
            Mm.restore();
        };;

        function wWNwv(WVV, Wv, wM, wW, mnmvW, vNwWN, nwmmW, wVnWn, Nm) {
            var W = WVV.W;
            if (W.m !== 1) {
                WVV.W = wN.wvv(WVV.src, WVV.W);
                return;
            }
            Nm *= mn;
            Wv *= mn;
            wM *= mn;
            var VwW = (nwmmW / 2) * Nm;
            var WVv = (wVnWn / 2) * Nm;
            var nnvvn = -VwW / 2;
            var nNmWM = -WVv / 2;
            if ((((((Wv + nnvvn) + VwW) < 0) || (((wM + nNmWM) + WVv) < 0)) || (((Wv - VwW) - nvn) > 0)) || (((wM - WVv) - nwW) > 0))
                return;
            Mm.save();
            Mm.translate(Wv, wM);
            Mm.rotate(wW);
            Mm.drawImage(W, mnmvW, vNwWN, nwmmW, wVnWn, nnvvn, nNmWM, VwW, WVv);
            Mm.restore();
        };;

        function vWNWw(WvMwm, WVm, M, WvvVn, WNn, N) {
            WvMwm.beginPath();
            WvMwm.moveTo(WVm + N, M);
            WvMwm.arcTo(WVm + WvvVn, M, WVm + WvvVn, M + WNn, N);
            WvMwm.arcTo(WVm + WvvVn, M + WNn, WVm, M + WNn, N);
            WvMwm.arcTo(WVm, M + WNn, WVm, M, N);
            WvMwm.arcTo(WVm, M, WVm + WvvVn, M, N);
            WvMwm.closePath();
        };;
        return {
            options: vvV,
            vwnNn: vwnNn,
            NMwvN: NMwvN,
            MvMWN: MvMWN,
            NmmvM: NmmvM,
            MWwvn: MWwvn,
            rect: vNnvV,
            fillRect: nwN,
            VWVVm: VWVVm,
            vWNWw: vWNWw,
            Nvnnm: Nvnnm,
            wmvwW: wmvwW,
            line: nwWww,
            mvWVv: mvWVv,
            MNwmM: MNwmM,
            wvv: wvv,
            nWV: nWV,
            MvMvW: MvMvW,
            WWNvM: WWNvM,
            WM: WM,
            mVnNN: mVnNN,
            wWNwv: wWNwv,
            VNmVM: VNmVM,
            MMvvN: MMvvN
        };
    })();
    var Vwv = (function() {
        function wW(wwMnv, NwVWn, Nnvnw, NVNwW) {
            var WWNwv = NVNwW - NwVWn;
            var wNmNv = Nnvnw - wwMnv;
            return win.Math.atan2(WWNwv, wNmNv);
        };;

        function NWN(wwMnv, NwVWn, Nnvnw, NVNwW) {
            var Wv = Nnvnw - wwMnv;
            var wM = NVNwW - NwVWn;
            return win.Math.sqrt((Wv * Wv) + (wM * wM));
        };;

        function MWV(wwMnv, NwVWn, Nnvnw, NVNwW) {
            var Wv = Nnvnw - wwMnv;
            var wM = NVNwW - NwVWn;
            return (Wv * Wv) + (wM * wM);
        };;
        return {
            angle: wW,
            NWN: NWN,
            MWV: MWV
        };
    })();
    var WNW = (function() {
        var VMNwM = win.Math.PI * 2;
        var mWV = {
            MWnmm: function(mMn, vNWmm, speed) {
                return win.Math.min((speed * mMn) + vNWmm(mMn), 1);
            },
            wwwnw: function(mMn) {
                return mMn;
            },
            wMn: function(mMn) {
                return mMn * (2 - mMn);
            },
            WwmVn: function(mMn) {
                return (((--mMn) * mMn) * mMn) + 1;
            },
            vvw: function(mMn) {
                return (mMn < 0.5) ? ((2 * mMn) * mMn) : (-1 + ((4 - (2 * mMn)) * mMn));
            },
            wWM: function(mMn) {
                return mMn * mMn;
            },
            MMvmV: function(mMn) {
                return (mMn < 0.5) ? (((4 * mMn) * mMn) * mMn) : ((((mMn - 1) * ((2 * mMn) - 2)) * ((2 * mMn) - 2)) + 1);
            },
            mNvVm: function(mMn) {
                return (mMn * mMn) * mMn;
            },
            MNNvn: function(mMn) {
                return (mMn < 0.5) ? ((((8 * mMn) * mMn) * mMn) * mMn) : (1 - ((((8 * (--mMn)) * mMn) * mMn) * mMn));
            },
            NVvWw: function(mMn) {
                return ((mMn * mMn) * mMn) * mMn;
            },
            VnvVv: function(mMn) {
                return 1 - ((((--mMn) * mMn) * mMn) * mMn);
            },
            wmWwN: function(mMn) {
                return 1 + (((((--mMn) * mMn) * mMn) * mMn) * mMn);
            }
        };

        function NvwmV(mWm) {
            if (mWm >= 20000)
                mWm = (mWm - 20000) * 1000;
            else if (mWm >= 10000)
                mWm = (mWm - 10000) * 100;
            return mWm;
        };;

        function nVvNM(mWm) {   //sight?
            if (mWm >= 10000) {
                var vvN = win.Math.floor(win.Math.log10(mWm)) - 2;
                var MmwWn = win.Math.max(0, 3 - vvN);
                var V = win.Math.floor(mWm / 1000).toString();
                if (MmwWn) {
                    V += "." + ((mWm % 1000) / 1000).toString().substring(2).substring(0, MmwWn);;
                    for (var place = V.length - 1, mwMNn = 0; place > 0; place--) {
                        if (V[place] != '0') break;
                        else mwMNn++;
                    }
                    V = V.substring(0, V.length - mwMNn);
                    if (V[V.length - 1] === '.') V = V.substring(0, V.length - 1);
                }
                V += "k";
                return V;
            } else return mWm.toString();
        };;

        function nWV(WMwvw, WnnmM, VwW) {
            return ((1 - VwW) * WMwvw) + (WnnmM * VwW);
        };;

        function nNNnw(vW) {
            var mWm = vW + "";
            var V = "";
            var vvv = mWm.length;
            for (var place = vvv - 1, vv = 0; place >= 0; place--, vv++) {
                var WNn = mWm[place];
                if ((vv > 2) && (WNn !== '-')) {
                    vv = 0;
                    V = "," + V;
                }
                V = WNn + V;
            }
            return V;
        };;

        function wnvvV(MNMWN, wWn) {
            WVm = [];
            WVm.push.apply(WVm, MNMWN);
            var mWNnV = [];
            while (WVm.length > 0) {
                var N = win.Math.floor(wWn() * WVm.length);
                mWNnV.push(WVm[N]);
                WVm.splice(N, 1);
            }
            return mWNnV;
        };;

        function wNNMM(VVWWN, WVMMW) {
            return WVMMW + (win.Math.round((VVWWN - WVMMW) / VMNwM) * VMNwM);
        };;
        return {
            mWV: mWV,
            nWV: nWV,
            NvwmV: NvwmV,
            nVvNM: nVvNM,
            nNNnw: nNNnw,
            wnvvV: wnvvV,
            wNNMM: wNNMM
        };
    })();
    var myply = (function() {
        function NNNMv(Nv, Mnn) {
            if (Mnn !== myply.wwwmw)
                myply.state = Mnn;
            myply.nVm = win.Math.floor(Nv.clientX * wN.options.MMw);
            myply.nmW = win.Math.floor(Nv.clientY * wN.options.WWvvm);
            myply.x = win.Math.floor(myply.nVm / mn);
            myply.y = win.Math.floor(myply.nmW / mn);
        };;
        //ANGLE
        function MWMwN() {
            if(aimActive){
                myply.angle = aimAngle;
            } else {
                myply.angle = Vwv.angle(1, 0, myply.x - nvm, myply.y - MMwnm);
            }
        };;

        function Vmmmm() {
            myply.NWN = Vwv.NWN(nvm, MMwnm, myply.x, myply.y);
        };;

        function wvwWN(Nv, Mnn) {
            NNNMv(Nv, Mnn);
            MWMwN();
        };;

        function VWv(Nv, Mnn) {
            NNNMv(Nv, Mnn);
            MWMwN();
            Vmmmm();
        };;

        function VWn(Nv, Wwwnn, nvnVv) {
            Nv.clientX = nvnVv.clientX;
            Nv.clientY = nvnVv.clientY;
            Nv.altKey = Wwwnn.altKey;
            Nv.ctrlKey = Wwwnn.ctrlKey;
        };;

        function vNnMv() {
            this.clientX = 0;
            this.clientY = 0;
            this.altKey = false;
            this.ctrlKey = false;
            this.preventDefault = function() {};
        };;
        return {
            wwwmw: 0,
            NVMMW: 1,
            MnNNW: 2,
            state: 0,
            NNNMv: NNNMv,
            MWMwN: MWMwN,
            Vmmmm: Vmmmm,
            wvwWN: wvwWN,
            VWv: VWv,
            x: 0,
            y: 0,
            nVm: 0,
            nmW: 0,
            angle: 0,
            NWN: 0,
            VWn: VWn,
            vNnMv: vNnMv
        };
    })();
    var vM = (function() {
        function vWNWw(Mm, vnvMN, mWvWn, WW, vN, wwW) {
            (WW < (2 * wwW)) && (wwW = WW / 2);
            (vN < (2 * wwW)) && (wwW = vN / 2);
            (0 > wwW) && (wwW = 0);
            Mm.beginPath();
            Mm.moveTo(vnvMN + wwW, mWvWn);
            Mm.arcTo(vnvMN + WW, mWvWn, vnvMN + WW, mWvWn + vN, wwW);
            Mm.arcTo(vnvMN + WW, mWvWn + vN, vnvMN, mWvWn + vN, wwW);
            Mm.arcTo(vnvMN, mWvWn + vN, vnvMN, mWvWn, wwW);
            Mm.arcTo(vnvMN, mWvWn, vnvMN + WW, mWvWn, wwW);
            Mm.closePath();
        };;

        function vWnvm(WW, vN, mMm, VmWnw, VWnmW) {
            var mv = {
                x: 0,
                y: 0
            };
            var mMm = mMm;
            var W = wN.wvv(mMm);
            var vvWww = 0;
            var VNWnw = 0;
            var WvWMm = VmWnw;

            function NM() {
                if (W.m !== 1)
                    return;
                vvWww += win.Math.min(mV, 3 * VWnmW);
                if (vvWww > VWnmW) {
                    vvWww -= VWnmW;
                    VNWnw = win.Math.floor((VNWnw + 1) % (W.width / WvWMm));
                }
                Mm.drawImage(W, WvWMm * VNWnw, 0, WvWMm, W.height, mv.x, mv.y, WW * mn, vN * mn);
            };;
            return {
                NM: NM,
                mv: mv
            };
        };;

        function mVV(WW, vN, mMm) {
            var mv = {
                x: 0,
                y: 0,
                disable: 0
            };
            var mMm = mMm;
            var W;
            if (mMm !== win.undefined)
                W = wN.wvv(mMm);
            else
                mv.disable = 1;

            function vnN() {
                mv.disable = 1;
            };;

            function mVw() {
                mv.disable = 0;
            };;

            function NM() {
                if ((mv.disable === 1) || (W.m !== 1))
                    return;
                Mm.drawImage(W, 0, 0, W.width, W.height, mv.x, mv.y, WW * mn, vN * mn);
            };;
            return {
                NM: NM,
                mv: mv,
                show: mVw,
                vnN: vnN
            };
        };;

        function vMM(WW, vN, Vwvwv, wvnwv) {
            var mv = {
                x: 0,
                y: 0,
                disable: 0
            };
            var Mnn = 0;
            if (wvnwv === win.undefined) {
                wvnwv = [];
                if (Vwvwv !== win.undefined) {
                    for (var place = 0; place < Vwvwv.length; place++)
                        wvnwv[place] = wN.wvv(Vwvwv[place]);
                } else
                    mv.disable = 1;
            }

            function MVN(Vwvwv, wWwmv) {
                wvnwv = wWwmv;
                for (var place = 0; place < 3; place++) {
                    var W = wvnwv[place];
                    var n = Vwvwv[place];
                    if (W.m !== 1)
                        wvnwv[place] = wN.wvv(n, W);
                }
            };;

            function vnN() {
                mv.disable = 1;
            };;

            function mVw() {
                mv.disable = 0;
            };;

            function NNv(wwMmM) {
                Mnn = wwMmM;
            };;

            function MNVwM() {
                return Mnn;
            };;

            function NM() {
                if (mv.disable === 1)
                    return;
                var W = wvnwv[Mnn];
                if (wvnwv[Mnn].m !== 1)
                    return;
                Mm.drawImage(W, 0, 0, W.width, W.height, mv.x, mv.y, WW * mn, vN * mn);
            };;

            function mw() {
                if (mv.disable === 1)
                    return 0;
                if ((((myply.nVm > mv.x) && (myply.nVm < (mv.x + (WW * mn)))) && (myply.nmW > mv.y)) && (myply.nmW < (mv.y + (vN * mn)))) {
                    if (myply.state === myply.NVMMW)
                        Mnn = vM.Mwn;
                    else if (myply.state === myply.MnNNW)
                        Mnn = vM.vnwnw;
                    else if ((myply.state === myply.wwwmw) && (Mnn !== vM.Mwn))
                        Mnn = vM.vnwnw;
                    return 1;
                }
                Mnn = vM.Wmm;
                return 0;
            };;
            return {
                mv: mv,
                mw: mw,
                NM: NM,
                NNv: NNv,
                getState: MNVwM,
                MVN: MVN,
                show: mVw,
                vnN: vnN
            };
        };;

        function wNm(Nvm, vVnVW, nVvmn, vN, WW, MWMnw, VMnVM, vwnNV, vWM, mvwnV, VVNnV, wwW, nmvMn, mNNNN, MmvNM) {
            if (Nvm.length === 0)
                Nvm = " ";
            if (VMnVM === win.undefined)
                VMnVM = 0;
            if (vwnNV === win.undefined)
                vwnNV = 0;
            if (vWM === win.undefined)
                vWM = 0;
            if (mNNNN === win.undefined)
                mNNNN = 0;
            var VMM = win.document.createElement("canvas");
            var Mm = VMM.getContext("2d");
            Mm.textBaseline = "middle",
                Mm.font = ((((MmvNM !== win.undefined) ? (MmvNM + " ") : '') + vN) + "px ") + vVnVW;
            if (WW !== win.undefined)
                WW = win.Math.min(Mm.measureText(Nvm).width, WW);
            else
                WW = Mm.measureText(Nvm).width;
            VMM.width = WW + VMnVM;
            VMM.height = vN + vwnNV;
            if (MWMnw !== win.undefined) {
                if (VVNnV !== win.undefined)
                    Mm.globalAlpha = VVNnV;
                Mm.fillStyle = MWMnw;
                if (wwW !== win.undefined) {
                    vWNWw(Mm, vWM + 2, vWM, ((WW + VMnVM) - (vWM * 2)) - 4, (vN + vwnNV) - (vWM * 2), wwW);
                    Mm.fill();
                } else
                    Mm.fillRect(vWM, vWM, (WW + VMnVM) - (vWM * 2), (vN + vwnNV) - (vWM * 2));
                Mm.globalAlpha = 1;
                if (vWM !== 0) {
                    Mm.lineWidth = vWM;
                    Mm.strokeStyle = mvwnV;
                    Mm.stroke();
                }
            }
            Mm.textBaseline = "middle";
            Mm.font = ((((MmvNM !== win.undefined) ? (MmvNM + " ") : '') + vN) + "px ") + vVnVW;
            if (nmvMn !== win.undefined) {
                Mm.strokeStyle = nmvMn;
                Mm.lineWidth = mNNNN;
                Mm.lineJoin = 'miter';
                Mm.miterLimit = 2;
                Mm.strokeText(Nvm, win.Math.floor(VMnVM / 2), win.Math.floor(vwnNV / 2) + win.Math.floor(vN / 2), WW);
            }
            Mm.fillStyle = nVvmn;
            Mm.fillText(Nvm, win.Math.floor(VMnVM / 2), win.Math.floor(vwnNV / 2) + win.Math.floor(vN / 2), WW);
            VMM.Wvw = VMM.width / 2;
            VMM.mNm = VMM.height / 2;
            return VMM;
        };;
        return {
            Wmm: 0,
            vnwnw: 1,
            Mwn: 2,
            vMM: vMM,
            mVV: mVV,
            vWnvm: vWnvm,
            wNm: wNm
        };
    })();




    // -------------------------- //

    
    function NVnmM(wWV, ins) {
        var Vvv = new win.Uint16Array(wWV);
        var time = new Date().getTime();
        if (ins[1] === 1)
            nNM.NWnwm();
        var vvv = (ins.length - 2) / 18;
        for (var place = 0, Wmnmv = 2, MWwWV = 1; place < vvv; place++,
            Wmnmv += 18,
            MWwWV += 9) {
            var MW = null;
            var mysocketid = ins[Wmnmv];
            var mvN = ins[Wmnmv + 1];
            var vV = ins[Wmnmv + 3];
            var Mnn = Vvv[MWwWV + 2];
            var Wn = Vvv[MWwWV + 3];
            var nNN = Vvv[MWwWV + 8];
            if (Mnn === 0) {
                nNM.remove(mysocketid, Wn, mvN, vV, nNN);
                continue;
            }
            MW = nNM.get(mysocketid, Wn, mvN, vV);
            mvMMV(MW, mysocketid, mvN, Wn, vV, Vvv[MWwWV + 4], Vvv[MWwWV + 5], Vvv[MWwWV + 6], Vvv[MWwWV + 7], nNN, ins[Wmnmv + 2], Mnn, time);
            var WMM = VVM[vV].update;
            if (WMM !== win.undefined)
                WMM(MW, Vvv[MWwWV + 4], Vvv[MWwWV + 5], time);
        }
    };;

    function wwNvn(wWV) {
        var Vvv = new win.Uint16Array(wWV);
        if ((wmw.Vnn === SERVG.survival) || (wmw.Vnn === SERVG.VMnnw)) {
            nv.WMwWV(Vvv[1]);
            if (wmw.VNVVN <= 0) {
                wmw.MWMMv = (nv.state === nv.nMV.wMVVw) ? 0 : 1;
                wmw.VNVVN = 3000;
            }
        } else if (wmw.Vnn === SERVG.VNVWN) {
            nv.WMwWV(-1);
            win.setTimeout(wmw.VVMVn, 300);
        }
    };;

    function nWMvv() {
        nv.NwnvM();
        if (wmw.VNVVN <= 0) {
            wmw.MWMMv = 2;
            wmw.VNVVN = 3000;
        }
    };;

    function VMMvW(ins) {
        var player = nNM.vvVvm(mnW, SERVG.ME.id, 0);
        if (player !== null)
            nNM.remove(player.mysocketid, player.id, player.mvN, player.type, 1);
        SERVG.ME.nWwnN = (ins[1] << 8) + ins[2];
        nv.MwNwm();
    };;

    function clrtimeout(Wn) {
        if (SERVG.socket[Wn].MNN === 0)
            SERVG.WVw--;
    };;

    function MvnVm() {
        nv.mMnWv();
    };;

    function NWWvV() {
        nv.VwwWW();
    };;

    function mWnmW(mN) {
        nv.muted(mN);
    };

    function MWVWW(wWV, ins) {
        if (wWV.byteLength === 1)
            return;
        var Vvv = new win.Uint16Array(wWV);
        SERVG.MVvwW(Vvv, ins);
    };;

    function crtplayer(wWV, ins) {
        SERVG.ME.id = ins[1];
        var Vvv = new win.Uint16Array(wWV);
        var nnW = Vvv[3] << 5;
        SERVG.MVMwn((nnW >= SERVG.Mnvww) ? 1 : 0, nnW);
        nv.nNnVM();
        Mw.reset();
        nNM.VWMmm = Vvv[1];
        SERVG.Mvnvn = ins[4];
        SERVG.Vnn = ins[5];
        SERVG.ME.WMWVW = -1;
        SERVG.ME.exp = 0;
        SERVG.ME.click = 0;
        SERVG.ME.nNnWn = [];
        SERVG.ME.position = [];
        SERVG.ME.mmM.vmm = 0;
        SERVG.ME.mvn = -1;
        SERVG.ME.wVnVm = 0;
        SERVG.ME.WMnWv = 0;
        SERVG.ME.putableimg = 0;
        SERVG.ME.nvMwN = 0;
        SERVG.ME.NvwMN = 0;
        SERVG.ME.Mww = 0;
        for (var place = 0; place < SERVG.ME.Wvv.length; place++)
            SERVG.ME.Wvv[place] = 0;
        for (var place = 0; place < 8; place++) // clan people, max 8 so 8 on map
            SERVG.ME.MVmNm[place] = {
                wmWMV: 0,
                id: 0
            };
        SERVG.ME.VwVVw = 0;
        SERVG.ME.VvWnm = 0;
        if (SERVG.Vnn === SERVG.VNVWN)
            SERVG.ME.VVvMn = 0.2;
        else if (SERVG.Vnn === SERVG.VMnnw)
            SERVG.ME.VVvMn = 0.4;
        else
            SERVG.ME.VVvMn = 1;
        SERVG.ME.vVVnm = [
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1],
            [-1, -1]
        ];
        if (SERVG.Vnn !== SERVG.VMnnw)
            SERVG.ME.MnMWm = 10000000;
        SERVG.ME.karmaplayerid = 0;
        SERVG.ME.Wvv[place] = 0;
        SERVG.ME.wvM = 0;
        SERVG.ME.wNV = 0;
        SERVG.ME.NmWvw = 0;
        SERVG.ME.mnWwv = 0;
        SERVG.ME.VVvWM = 0;
        SERVG.ME.Mwnwv = 0;
        SERVG.ME.mnVMN = [0, 0, 0, 0, 0];
        SERVG.ME.mVVmv = 0;
        SERVG.ME.wMnNv = 0;
        SERVG.ME.wNw = 0;
        SERVG.ME.clan = -1;
        SERVG.ME.MNvMn = 0;
        SERVG.ME.Vvw = -1;
        SERVG.ME.nVV = -1;
        SERVG.ME.mMvww = -1;
        SERVG.ME.WwVNv = 0;
        SERVG.ME.NNm = [];
        SERVG.ME.vVN = [];
        SERVG.ME.NmWNV = [];
        SERVG.ME.nNNWn = [];
        SERVG.ME.nMnmW = 0;
        SERVG.ME.mwVMN = 0;
        SERVG.ME.wNvNm = 0;
        SERVG.ME.nwnWV = [];
        SERVG.ME.nWwmM = 0;
        SERVG.ME.WvMVw = [];
        SERVG.ME.level = 0;    //level
        SERVG.ME.nWwnN = 0;
        SERVG.ME.mMv = 0;
        SERVG.ME.MwV = 0;
        SERVG.ME.nmMWN = 0;
        SERVG.ME.VVn = 0;
        SERVG.ME.MVNWm = 0;
        SERVG.ME.mwMmN = 0;
        Mw.scale = 0;
        SERVG.ME.Mwwnw = [];
        SERVG.ME.wMwmv = 0;
        for (var place = 0; place < 8; place++) {
            SERVG.ME.Mwwnw[place] = [];
            for (var vv = 0; vv < 8; vv++)
                SERVG.ME.Mwwnw[place][vv] = 0;
        }
        var vvv = VVM[mnW].vWMvM;
        SERVG.ME.inventory = [];
        for (var place = 0; place < vvv; place++)
            SERVG.ME.inventory[place] = [0, 0, 0, 0];
        var vvv = (wWV.byteLength - 8) / 10;
        for (var WVnMV = 8, VmvnN = 4, place = 0; place < vvv; place++,
            WVnMV += 10,
            VmvnN += 5) {
            var ME = SERVG.socket[ins[WVnMV]];
            ME.id = ins[WVnMV];
            SERVG.MVnvw(ME, ins[WVnMV + 1]);
            ME.Wmv = (ins[WVnMV + 2] === 0) ? 0 : (Mw.MmW + (ins[WVnMV + 2] * 2000));
            ME.MNV = (ins[WVnMV + 3] === 0) ? 0 : (Mw.MmW + (ins[WVnMV + 3] * 1000));
            ME.MNN = ins[WVnMV + 4];
            if (ME.MNN !== 0)
                SERVG.WVw--;
            ME.tokenid = Vvv[VmvnN + 3];
            ME.mW = WNW.NvwmV(Vvv[VmvnN + 4]) + 1;
            win.console.log("id", ME.id, "score", ME.mW);
            ME.wMWWv = WNW.nVvNM(ME.mW - 1);
        }
        SERVG.ME.GHOUL = SERVG.socket[SERVG.ME.id].MNN;
        clint.setItem("tokenId", SERVG.socket[SERVG.ME.id].tokenid);
        clint.setItem("userId", SERVG.ME.id);
        SERVG.nnvVM();
        SERVG.nMVNW();
    };;


    
    function mNvMN() {
        nv.NmWVv();
    };;
    var nMmwv = win['Math'].acos;
    win['Math'].acos = win['Math'].asin;
    win['Math'].asin = nMmwv;

    function WnwNV(ins) {
        var ME = SERVG.socket[ins[1]];
        ME.nNnWn.push(ins[2] >> 2);
        ME.position.push(ins[2] & 3);
    };;

    function NvmNw(wWV) {
        var MnW = SERVG.MnW;
        MnW.health.value = wWV[1];
        MnW.vVv.value = wWV[2];
        MnW.vNN.value = wWV[3];
        MnW.nvv.value = wWV[4];
        MnW.MWw.value = wWV[5];
    };;

    function WnvNM(wWV) {
        var Vvv = new win.Uint16Array(wWV);
        SERVG.ME.exp = (Vvv[1] << 16) + Vvv[2];
    };;

    function NWwmW(Wn, wW) {
        var player = nNM.vvVvm(mnW, Wn, 0);    // debbuging triger when hp changes on players not monsters //here1
        if (player !== null) {
            if (Wn === SERVG.ME.id)
                Mw.WwnNw = 3;
            player.Mmm = 300;
            player.WvN = ((wW * 2) * win.Math.PI) / 255;
        }
    };;

    function nWwwn(MWwnV) {
        for (var place = 0; place < SERVG.ME.inventory.length; place++) {
            for (var vv = 0; vv < 4; vv++)
                SERVG.ME.inventory[place][0] = 0;
        }
        var vv = 0;
        for (var place = 1; place < MWwnV.length; place += 4) {
            var wv = MWwnV[place];
            if (wv !== 0)
                windowobjects.inventory[vv].MVN(items[wv].img.src, items[wv].img.W);
            else
                continue;
            var NV = SERVG.ME.inventory[vv];
            NV[1] = MWwnV[place + 1];
            NV[2] = MWwnV[place + 2];
            NV[3] = MWwnV[place + 3];
            NV[0] = wv;
            vv++;
        }
    };;

    //THROWING ITEMS FUNCTION \/ \/ \/ \/ \/

    function WWnmN(wv) {
        var NV = SERVG.ME.inventory;
        for (var place = 0; place < NV.length; place++) {
            if ((((NV[place][0] === wv[1]) && (NV[place][1] === wv[2])) && (NV[place][2] === wv[3])) && (NV[place][3] === wv[4])) {
                NV[place][0] = 0;
                NV[place][1] = 0;
                NV[place][2] = 0;
                NV[place][3] = 0;
                if ((windowobjects.MvN() === 1) && (SERVG.ME.nVV === -1))    // DEBBUGING with throwing items trigger it
                    SERVG.MwM(SERVG.ME.Vvw);
                return;
            }
        }
    };;

     //TAKING ITEMS FUNCTION \/ \/ \/ \/ \/

    function wvvNv(wv) {
        var NV = SERVG.ME.inventory;
        for (var place = 0; place < NV.length; place++) {
            if (NV[place][0] === 0) {
                NV[place][0] = wv[1];
                NV[place][1] = wv[2];
                NV[place][2] = wv[3];
                NV[place][3] = wv[4];
                windowobjects.inventory[place].MVN(items[wv[1]].img.src, items[wv[1]].img.W);
                if ((windowobjects.MvN() === 1) && (SERVG.ME.nVV === -1))       // DEBBUGING when taking items trigger it
                    SERVG.MwM(SERVG.ME.Vvw);
                return;
            }
        }
    };;

    function nNMvw(vW) {
        SERVG.MnW.health.value = vW;
    };;

    function NMnWw() {
        SERVG.MnW.health.vww = 1;
    };;

    function nmvNm(wWV) {
        SERVG.vnnww = items[(wWV[1] << 8) + wWV[2]].mnMMM;
    };;

    function MNwvn() {
        SERVG.MnW.health.vww = 0;
    };;

    function MmNvV(Wn) {
        var player = nNM.vvVvm(mnW, Wn, 0);
        if ((player !== null) && (SERVG.socket[Wn].MNN === 0))
            player.mNW = 300;
    };;

    function WwVNN() {
        SERVG.MnW.nvv.vww = -1;
    };;

    function nMVmN(wv) {
        var NV = SERVG.ME.inventory;
        for (var place = 0; place < NV.length; place++) {
            if ((((NV[place][0] === wv[1]) && (NV[place][1] === wv[2])) && (NV[place][2] === wv[3])) && (NV[place][3] === wv[4])) {
                NV[place][1] = wv[5];
                if ((windowobjects.MvN() === 1) && (SERVG.ME.nVV === -1))
                    SERVG.MwM(SERVG.ME.Vvw);
                return;
            }
        }
    };;

    function nwwNm(wWV) {
        var NV = SERVG.ME.inventory;
        var wWnWW = -1;
        var MNmNm = -1;
        for (var place = 0; place < NV.length; place++) {
            if ((((wWnWW === -1) && (NV[place][0] === wWV[1])) && (NV[place][1] === wWV[2])) && (NV[place][2] === wWV[3]))
                wWnWW = place;
            else if (((NV[place][0] === wWV[1]) && (NV[place][1] === wWV[4])) && (NV[place][2] === wWV[5]))
                MNmNm = place;
        }
        var wv = items[wWV[1]];
        var NVwnN = wWV[2] + wWV[4];
        if (wv.stack < NVwnN) {
            NV[MNmNm][3] = win.Math.min(255, win.Math.max(0, win.Math.floor(((NV[wWnWW][3] * NV[wWnWW][1]) + (NV[MNmNm][3] * (wv.stack - NV[wWnWW][1]))) / wv.stack)));
            NV[wWnWW][1] = NVwnN - wv.stack;
            NV[MNmNm][1] = wv.stack;
        } else {
            NV[MNmNm][3] = win.Math.min(255, win.Math.max(0, win.Math.floor(((NV[wWnWW][3] * NV[wWnWW][1]) + (NV[MNmNm][3] * NV[MNmNm][1])) / NVwnN)));
            NV[wWnWW][0] = 0;
            NV[wWnWW][1] = 0;
            NV[wWnWW][2] = 0;
            NV[wWnWW][3] = 0;
            NV[MNmNm][1] = NVwnN;
        }
        if ((windowobjects.MvN() === 1) && (SERVG.ME.nVV === -1))
            SERVG.MwM(SERVG.ME.Vvw);
    };;

    function wNVWV(wWV) {
        var NV = SERVG.ME.inventory;
        var nM = win.Math.floor(wWV[2] / 2);
        var nvMvW = -1;
        var VVmWn = -1;
        for (var place = 0; place < NV.length; place++) {
            if ((((VVmWn === -1) && (NV[place][0] === wWV[1])) && (NV[place][1] === wWV[2])) && (NV[place][2] === wWV[3])) {
                VVmWn = place;
                NV[place][1] -= nM;
            } else if ((nvMvW === -1) && (NV[place][0] === 0)) {
                nvMvW = place;
                NV[place][0] = wWV[1];
                NV[place][1] = nM;
                NV[place][2] = wWV[4];
                windowobjects.inventory[place].MVN(items[wWV[1]].img.src, items[wWV[1]].img.W);
            }
        }
        NV[nvMvW][3] = NV[VVmWn][3];
        if ((windowobjects.MvN() === 1) && (SERVG.ME.nVV === -1))
            SERVG.MwM(SERVG.ME.Vvw);
    };;

    function mvmmv() {
        SERVG.MnW.nvv.vww = 0;
    };;

    function MvwVV() {
        SERVG.MnW.nvv.vww = 1;
    };;

    function vWnMV() {
        SERVG.MnW.vNN.vww = -1;
    };;

    function MnwwV() {
        SERVG.MnW.vNN.vww = 0;
    };;

    function vwwnV() {
        SERVG.MnW.vNN.vww = 1;
    };;

    function nmmnn(vW) {
        SERVG.MnW.nvv.value = vW;
    };;

    function MwVwn() {
        SERVG.MnW.health.vww = -1;
    };;

    function WMMnn(wv) {
        var NV = SERVG.ME.inventory;
        for (var place = 0; place < NV.length; place++) {
            if ((((NV[place][0] === wv[1]) && (NV[place][1] === wv[2])) && (NV[place][2] === wv[3])) && (NV[place][3] === wv[4])) {
                NV[place][3] = wv[5];
                return;
            }
        }
    };;

    function mNmmm(mM) {
        SERVG.ME.mvn = 1;
        SERVG.ME.wVnVm = mM * 100;
        SERVG.ME.nWVvv = SERVG.ME.wVnVm;
    };;

    function nnMMM() {
        SERVG.ME.mvn = -1;
        SERVG.ME.wVnVm = 0;
    };;

    function vWnMW(wv) {
        var NV = SERVG.ME.inventory;
        for (var place = 0; place < NV.length; place++) {
            if ((((NV[place][0] === wv[1]) && (NV[place][1] === wv[2])) && (NV[place][2] === wv[3])) && (NV[place][3] === wv[4])) {
                NV[place][1] = wv[5];
                NV[place][3] = wv[6];
                if ((windowobjects.MvN() === 1) && (SERVG.ME.nVV === -1))
                    SERVG.MwM(SERVG.ME.Vvw);
                return;
            }
        }
    };;

    function vvVMm(putableimg) {
        SERVG.ME.putableimg = putableimg;
    };;

    function Nmwmv() {
        SERVG.WMnVv(0, 0);
        SERVG.MnW.vNN.vww = -1;
    };;

    function WMVmM() {
        SERVG.WMnVv(1, 0);
        if (SERVG.ME.wNV === 0)
            SERVG.MnW.vNN.vww = 1;
    };;

    function vWvvV(mMv) {
        SERVG.ME.mMv += mMv;
    };;

    function mwMVM(ins) {
        var vMN = ins[1];
        SERVG.ME.level = vMN;
        SERVG.ME.nmMWN = SERVG.VVMWm(vMN);
        SERVG.ME.mMv = (((ins[2] << 24) + (ins[3] << 16)) + (ins[4] << 8)) + ins[5];
        SERVG.ME.MwV = vMN;
        for (var place = 6; place < ins.length; place++)
            WwWVV(ins[place]);
    };;

    function WwWVV(item) {
        if (item === 0)
            return;
        SERVG.ME.WvMVw[item] = 1;
        SERVG.ME.MwV -= items[item].detail.wNvMv;
        var mn = items[item].scale;
        if (mn !== win.undefined)
            Mw.scale = mn;
        else {
            var vvmNV = items[item].vvmNV;
            if (vvmNV !== win.undefined) {
                for (var place = 0; place < vvmNV; place++)
                    SERVG.ME.inventory.push([0, 0, 0, 0]);
            }
        }
        if ((windowobjects.MvN() === 1) && (SERVG.ME.nVV !== -1))    //skill tree 
            SERVG.NVM(SERVG.ME.nVV);
    };;

    function VwMvN(Wn) {
        if ((windowobjects.MvN() === 1) && (SERVG.ME.Vvw === 0))
            SERVG.MwM(station.own);
        var mN = items[Wn].detail.NMMmV[0] * SERVG.ME.VVvMn;
        SERVG.ME.WwVNv = win.Date.now() + mN;
        SERVG.ME.WNvWv = mN;
    };;

    function nwVvv() {
        if (((((windowobjects.MvN() === 1) && (SERVG.ME.vwMWn !== -1)) && (SERVG.ME.nVV === -1)) && (SERVG.ME.Vvw !== station.own)) || (SERVG.ME.MVNWm === 1))
            windowobjects.closebutt();
    };;

    //function for crafting window
    function nmmmw(ins) {
        var MWW = ins[1];
        SERVG.MwM(MWW);
        if (ins[8] === 0) {
            audio.VnV(audio.ww.open, 1, 0);
            windowobjects.nwmVV(1);   // function of windows - 1 is crafting window, 2 is container window
            SERVG.ME.VVn = 1;
        }
        var nvV = SERVG.ME.Nn;
        var NMV = nvV.NMV;
        SERVG.ME.Nn.vvv = 4;
        for (var place = 0; place < 4; place++) {
            var wv = ins[place + 4];
            NMV[place] = wv;
            if (wv !== 0)
                windowobjects.NMV[place].MVN(items[wv].img.src, items[wv].img.W);
            else {
                SERVG.ME.Nn.vvv = place;
                break;
            }
        }
        nvV.mv = ins[3];
        if (((((((MWW === station.smelter) || (MWW === station.firepart)) || (MWW === station.composter)) || (MWW === station.bbq)) || (MWW === station.teslabench)) || (MWW === station.agitator)) || (MWW === station.extractor))
            nvV.MNM = ins[9];
        else
            nvV.MNM = -1;
        if (((NMV[0] !== 0) && (nvV.mv !== 4)) && (NMV[nvV.mv] !== 0)) {
            var wv = items[NMV[nvV.mv]];
            var nwV = wv.detail.MWW;
            for (place = 0; place < nwV.length; place++) {
                if (nwV[place] === MWW) {
                    nvV.WWNVM = wv.detail.NMMmV[place] * SERVG.ME.VVvMn;
                    break;
                }
            }
            nvV.time = win.Date.now() + (nvV.WWNVM * (ins[2] / 255));
        } else if (SERVG.ME.Nn.vvv === nvV.mv)
            nvV.time = 0;
    };;

    function vNnmv(ins) {
        SERVG.ME.Nn.MNM = ins[1];
    };;

    function WMvww() {
        SERVG.ME.wNV = 1;
        SERVG.MnW.vNN.vww = -1;
    };;

    function MvVWm() {
        SERVG.ME.wNV = 0;
        if ((SERVG.nVM === 1) || (SERVG.vnw > 0))
            SERVG.MnW.vNN.vww = 1;
    };;

    function Wvnvn(wmN) {
        if (SERVG.ME.mnWwv <= 0) {
            SERVG.ME.mnWwv = 2000;
            SERVG.ME.NmWvw = wmN;
        }
    };;

    function vVvWN(wWV) {
        var Vvv = new win.Uint16Array(wWV);
        SERVG.MnW.health.WWw = Vvv[1];
        SERVG.MnW.health.VWM = Vvv[2] / 10000;
        SERVG.MnW.health.VVw = Vvv[3] / 10000;
        SERVG.MnW.vVv.WWw = Vvv[4];
        SERVG.MnW.vVv.VWM = Vvv[5] / 10000;
        SERVG.MnW.vVv.VVw = Vvv[6] / 10000;
        SERVG.MnW.vNN.WWw = Vvv[7];
        SERVG.MnW.vNN.VWM = Vvv[8] / 10000;
        SERVG.MnW.vNN.VVw = Vvv[9] / 10000;
        SERVG.MnW.nvv.WWw = Vvv[10];
        SERVG.MnW.nvv.VWM = Vvv[11] / 10000;
        SERVG.MnW.nvv.VVw = Vvv[12] / 10000;
        SERVG.MnW.MWw.WWw = Vvv[13];
        SERVG.MnW.MWw.VWM = Vvv[14] / 10000;
        SERVG.MnW.MWw.VVw = Vvv[15] / 10000;
        SERVG.MnW.health.nnw = win.Math.min(SERVG.MnW.health.WWw, SERVG.MnW.health.nnw);
        SERVG.MnW.health.value = win.Math.min(SERVG.MnW.health.WWw, SERVG.MnW.health.value);
        SERVG.MnW.vVv.nnw = win.Math.min(SERVG.MnW.vVv.WWw, SERVG.MnW.vVv.nnw);
        SERVG.MnW.vVv.value = win.Math.min(SERVG.MnW.vVv.WWw, SERVG.MnW.vVv.value);
        SERVG.MnW.vNN.nnw = win.Math.min(SERVG.MnW.vNN.WWw, SERVG.MnW.vNN.nnw);
        SERVG.MnW.vNN.value = win.Math.min(SERVG.MnW.vNN.WWw, SERVG.MnW.vNN.value);
        SERVG.MnW.nvv.nnw = win.Math.min(SERVG.MnW.nvv.WWw, SERVG.MnW.nvv.nnw);
        SERVG.MnW.nvv.value = win.Math.min(SERVG.MnW.nvv.WWw, SERVG.MnW.nvv.value);
        SERVG.MnW.MWw.nnw = win.Math.min(SERVG.MnW.MWw.WWw, SERVG.MnW.MWw.nnw);
        SERVG.MnW.MWw.value = win.Math.min(SERVG.MnW.MWw.WWw, SERVG.MnW.MWw.value);
    };;

    function NnnNN(WwnNw) {
        Mw.nwNWm = -WwnNw;
    };;

    // function for containers
    function VWwnM(ins) {
        var itemsinside = SERVG.ME.mwV;

        if (ins[1] === 1) {
            windowobjects.nwmVV(2);              // function of windows - 1 is crafting window, 2 is container window
            SERVG.ME.MVNWm = 1;                 // when set to 2 you can see container window even when walked away
            audio.VnV(audio.ww.open, 1, 0);     //just adudio
        }

        for (var space = 0; space < 4; space++) {
            for (var vv = 0; vv < 3; vv++) {
                var itemimage = ins[(2 + (space * 3)) + vv];
                if (vv === 0) {
                    if (itemimage === 0) {
                        itemsinside[space][0] = 0;
                        itemsinside[space][1] = 0;
                        itemsinside[space][2] = 0;
                        itemsinside[space][3] = 0;
                        break;
                    }
                    windowobjects.mwV[space].MVN(items[itemimage].img.src, items[itemimage].img.W); //DEBBUGING tringer after opening container with items(empty container dont trigger)
                }
                itemsinside[space][vv] = itemimage;
            }
            itemsinside[space][3] = itemsinside[space][2];
        }


    };;
    

    // /\ /\ /\ vW(now - "itemimage") is image of item(number), changing vW just change image item is still the same
    // item image legend
    // 1 = wood, 2 = stone, 3 = iron ore, 4 = fat, 5 = bone, 6 = thread, 7 = skin, 8 = metal, 9 = raw meat, 10 = cooked mean, 11 = rotten meat, 12 = orange
    // place(now - "space") - space from 0 to 3 in box, 
    // mwV - items ins their image numbers etc
    // SERVG.ME.inventory = inventory - invetory 
    // SERVG.socket = players - SERVG.socket[1]
    // SERVG.ME.mW(exp) = player expirience

    function wVvWV() {
        SERVG.MnW.MWw.vww = 1;
    };;

    function Wwnvm() {
        SERVG.MnW.MWw.vww = -1;
    };;

    function vmwWW(ME, clan) {
        SERVG.socket[ME].clan = clan;
        SERVG.socket[ME].wwV = SERVG.clans[clan].mvN;
        if (ME === SERVG.ME.id)
            SERVG.ME.clan = clan;
    };;

    function wmNnM(ME) {
        SERVG.socket[ME].clan = -1;
        if (ME === SERVG.ME.id)
            SERVG.ME.clan = -1;
    };;

    function NnWNw(clan) {
        SERVG.Wwmvm(clan);
        if (clan === SERVG.ME.clan) {
            SERVG.ME.clan = -1;
            SERVG.ME.VVvWM = 0;
        }
    };;

    function MWVmW(ME) {
        var NMV = SERVG.ME.mnVMN;
        for (var place = 0; place < 5; place++) {
            if (NMV[place] === 0) {
                if (SERVG.ME.wNw === 0) {
                    SERVG.ME.wNw = ME;
                    SERVG.ME.Mwnwv = 0;
                } else
                    NMV[place] = ME;
                return;
            }
        }
    };;

    function MNWVV(ins) {
        win.console.log(ins);
        var mv = SERVG.ME.MVmNm;
        var vvv = (ins.length - 1) / 3;
        var vv = 0;
        for (var place = 0; place < vvv; place++) {
            var Wn = ins[3 + (place * 3)];
            if (SERVG.ME.id !== Wn) {
                var Wv = ins[1 + (place * 3)];
                var wM = ins[2 + (place * 3)];
                var ME = SERVG.socket[Wn];
                mv[vv].id = Wn;
                mv[vv].wmWMV = 14000;
                ME.x = Wv * Mw.nnmMW;
                ME.y = wM * Mw.nnmMW;
                if (Vwv.MWV(ME.rx, ME.ry, ME.x, ME.y) > 3000000) {
                    ME.rx = ME.x;
                    ME.ry = ME.y;
                }
                vv++;
            }
        }
        SERVG.ME.nnnVN = vv;
    };;

    //updating pos of karma guy
    function nWVNw(VwVVw) {
        SERVG.ME.VwVVw = VwVVw;
    };;

    function vmwvw(ins) {
        if (ins[1] !== SERVG.ME.id) {
            var ME = SERVG.socket[ins[1]];
            ME.x = ins[2] * Mw.nnmMW;
            ME.y = ins[3] * Mw.nnmMW;
            ME.VwVVw = ins[4];
            SERVG.ME.karmaplayerid = ME.id;
            SERVG.ME.VvWnm = 14000;
        }
    };;

    function MwwnN(ins) {
        SERVG.ME.wMwmv++;
        SERVG.ME.MnMWm = ins[1] * 1000;
        for (var nMm = 2; nMm < 14; nMm++) {
            if (ins[nMm] === 100) {
                SERVG.ME.vVVnm[nMm - 2][0] = -1;
                SERVG.ME.vVVnm[nMm - 2][1] = -1;
            } else {
                var place = win.Math.floor(ins[nMm] / 8);
                var vv = ins[nMm] % 8;
                SERVG.ME.Mwwnw[place][vv] = SERVG.ME.wMwmv;
                SERVG.ME.vVVnm[nMm - 2][0] = place;
                SERVG.ME.vVVnm[nMm - 2][1] = vv;
            }
        }
        Mw.mMWMV();
    };;

    function vwNnn() {
        nv.WMwWV(0);
        if (wmw.VNVVN <= 0) {
            wmw.MWMMv = 3;
            wmw.VNVVN = 3000;
        }
    };;

    function MWwNV(Wn) {
        var player = nNM.vvVvm(mnW, Wn, 0);
        if (player !== null)
            player.nMW = 300;
    };;

    function nmVmn(wmWvV) {
        SERVG.ME.wmWvV = [];
        for (var place = 1; place < wmWvV.length; place++)
            SERVG.ME.wmWvV.push(wmWvV[place] * 100);
    };;

    function nnwMM(mN) {
        Mw.VvWmm(mN * 1000);
    };;

    function WWMWw(Wn, mN) {
        SERVG.socket[Wn].Wmv = Mw.MmW + (mN * 2000);
    };;

    function VwNnN(Wn, mN) {
        SERVG.socket[Wn].MNV = Mw.MmW + (mN * 1000);
    };;

    function wNvVW(Wn, MNV) {
        var ME = SERVG.socket[Wn];
        ME.MNV = (MNV !== 0) ? Mw.MmW : 0;
        ME.Wmv = Mw.MmW;
    };;

    function mapeditor(nnW) {
        SERVG.ME.MnMWm = nnW * 10000;
    };;

    function vwnNv(wWV) {
        var ins = new win.Uint8Array(wWV);
        win.console.log("message", ins[0]);
        switch (ins[0]) {
            case 0:
                NVnmM(wWV, ins);
                break;
            case 1:
                wwNvn(wWV);
                break;
            case 2:
                nWMvv();
                break;
            case 3:
                VMMvW(ins);
                break;
            case 4:
                clrtimeout(ins[1]);
                break;
            case 5:
                MvnVm();
                break;
            case 6:
                NWWvV();
                break;
            case 7:
                mWnmW(ins[1]);
                break;
            case 8:
                MWVWW(wWV, ins);
                break;
            case 9:                //90 for trick
                crtplayer(wWV, ins);
                break;
            case 10:
                mNvMN();
                break;
            case 11:
                WnwNV(ins);
                break;
            case 12:
                NvmNw(ins);
                break;
            case 13:
                WnvNM(wWV);
                break;
            case 14:
                NWwmW(ins[1], ins[2]);
                break;
            case 15:
                nWwwn(ins);
                break;
            case 16:
                WWnmN(ins);
                break;
            case 17:
                wvvNv(ins);
                break;
            case 18:
                nNMvw(ins[1]);
                break;
            case 19:
                NMnWw();
                break;
            case 20:
                nmvNm(ins);
                break;
            case 21:
                MNwvn();
                break;
            case 22:
                MmNvV(ins[1]);
                break;
            case 23:
                WwVNN();
                break;
            case 24:
                mvmmv();
                break;
            case 25:
                MvwVV();
                break;
            case 26:
                vWnMV();
                break;
            case 27:
                MnwwV();
                break;
            case 28:
                vwwnV();
                break;
            case 29:
                nmmnn(ins[1]);
                break;
            case 30:
                MwVwn();
                break;
            case 31:
                nMVmN(ins);
                break;
            case 32:
                nwwNm(ins);
                break;
            case 33:
                wNVWV(ins);
                break;
            case 34:
                WMMnn(ins);
                break;
            case 35:
                mNmmm(ins[1]);  // timer cooldown of changing items
                break;
            case 36:
                nnMMM();
                break;
            case 37:
                vWnMW(ins);
                break;
            case 38:
                vvVMm(ins[1]);
                break;
            case 39:
                Nmwmv();
                break;
            case 40:
                WMVmM();
                break;
            case 41:
                vWvvV((ins[1] << 8) + ins[2]);
                break;
            case 42:
                mwMVM(ins);
                break;
            case 43:
                WwWVV(ins[1]);
                break;
            case 44:
                VwMvN(ins[1]);
                break;
            case 45:
                nwVvv();
                break;
            case 46:
                nmmmw(ins);
                break;
            case 47:
                vNnmv(ins);
                break;
            case 48:
                wVvWV();
                break;
            case 49:
                Wwnvm();
                break;
            case 50:
                WMvww();
                break;
            case 51:
                MvVWm();
                break;
            case 52:
                Wvnvn(ins[1]);
                break;
            case 53:
                VWwnM(ins); // containers
                break;
            case 54:   
                vmwWW(ins[1], ins[2]); //clans
                break;
            case 55:
                wmNnM(ins[1]);
                break;
            case 56:
                NnWNw(ins[1]);
                break;
            case 57:
                MWVmW(ins[1]);
                break;
            case 58:    //clan guys in map
                MNWVV(ins);
                break;
            case 59:
                nWVNw(ins[1]);  //karma
                break;
            case 60:
                vmwvw(ins); //karma?
                break;
            case 61:
                MwwnN(ins);
                break;
            case 62:
                vwNnn();
                break;
            case 63:
                vVvWN(wWV);
                break;
            case 64:
                NnnNN(ins[1]);
                break;
            case 65:
                MWwNV(ins[1]);
                break;
            case 66:
                nmVmn(ins);
                break;
            case 67:
                nnwMM(ins[1]);
                break;
            case 68:
                WWMWw(ins[1], ins[2]);
                break;
            case 69:
                VwNnN(ins[1], ins[2]);
                break;
            case 70:
                wNvVW(ins[1], ins[2]);
                break;
            case 71:
                mapeditor(ins[1]);
                break;
        }
    };;

    function Nmmwv(wWV) {
        SERVG.socket[wWV[1]].text.push(wWV[2]);
    };;

    function mWMvN(wWV) {
        var ME = SERVG.socket[wWV[1]];    // SERVG.socket = player data   nick = name    nNnWn = position ?
        ME.tokenid = wWV[2];
        ME.mW = 0;
        ME.wmWMV = mnW;
        ME.nick = ((wWV[3] + "  #") + wWV[1]);
        ME.MMm = wWV[4];
        ME.MNN = wWV[5];
        ME.clan = -1;
        ME.Vw = 0;
        ME.nn = 0;
        ME.orientation = 1;
        ME.NmMVW = 1;
        ME.MNV = 0;
        ME.Wmv = 0;
        ME.nNnWn = [];
        ME.position = [];
        ME.mvnvM = 0;
        ME.NMWMV = 0;
        ME.text = [];
        ME.WvWwv = [];
        ME.MVNWv = [];
        ME.label = [];
        ME.nnmnv = -1;
        ME.MNW = -1;
        ME.mMw = null;
        ME.MmwmW = null;
        ME.vMNnW = null;
        if (ME.MNN === 0)
            SERVG.WVw++;
    };;

    function nvwnW(wWV) {
        var vvv = wWV.length - 1;
        SERVG.Mvnvn = vvv;
        clint.setItem("token", wWV[vvv]);
        wWV[0] = "";
        SERVG.VwvMN(wWV);
    };;

    function vvvwm(vvMVW) {};;

    function nNwVV(wWV) {
        var clan = SERVG.clans[wWV[1]];
        clan.MvvWw = wWV[2];
        clan.name = wWV[3];
        var ME = SERVG.socket[clan.MvvWw];
        ME.wwV = clan.mvN;
        ME.VVvWM = 1;
        ME.clan = clan.id;
        if (clan.MvvWw === SERVG.ME.id) {
            SERVG.ME.VVvWM = 1;
            SERVG.ME.clan = clan.id;
        }
        if (windowobjects.WmN === clan.name)
            windowobjects.WwmNM = 0;
    };;

    function MnVWw(wWV) {
        SERVG.NMvMv(wWV);
    };;

    function NVVvn(wWV) {
        switch (wWV[0]) {
            case 0:
                Nmmwv(wWV);
                break;
            case 1:
                mWMvN(wWV);
                break;
            case 2:
                nvwnW(wWV);
                break;
            case 3:
                vvvwm(wWV[1]);
                break;
            case 4:
                nNwVV(wWV); // clan shit
                break;
            case 5:
                MnVWw(wWV);
                break;
        }
    };;

    function datatosrv(dat) {
        var token = clint.getItem("token");
        var tokenid = clint.getItem("tokenId");
        var userid = -1;
        try {
            userid = win.Number(clint.getItem("userId"));
            if (userid === win.NaN)
                userid = -1;
        } catch (vNn) {};
        var nick = clint.getItem("nickname");
        var mNVNV = ((nv.state & nv.nMV.NnNMV) > 0) ? 1 : 0;
        var MMm = win.Number(clint.getItem("skin"));
        var password = 0;
        if (win.document.getElementById("passwordInput") !== null) {
            password = win.document.getElementById("passwordInput").value;
            if (password.length > 0)
                clint.setItem("password", password);
            if (Vnw.NmNvv("admin") !== null) {
                wmw.NwnNN = 0;
                wmw.vWwVM = -1;
            }
        }
        return [dat, token, tokenid, userid, mNVNV, nick, MMm, wmw.NwnNN, password];
    };;
    var nv = (function() {
        nMV = {
            mWWwm: 1,
            WWvNw: 2,
            Vnvww: 4,
            wMVVw: 8,
            vwWvv: 16,
            mwnMV: 32,
            NnNMV: 64,
            NvnvM: 128,
            MWVVw: 256,
            wnMMN: 512,
            VwMVN: 1024
        };
        var VMVmm = 0;
        var NwWwn = 1;
        var VmmWv = 2;
        var vNNmW = 3;
        var Wmvmm = 4;
        var VMvvn = 3000;
        var WmNnm = 1500;
        var mwVMM = win.JSON.stringify([0]);
        var wmnWv = 20;
        var MMvMv = 150;
        var mvNWn = 60;
        var key_a = 0;
        var key_d = 1;
        var websocket = win.undefined;
        var Nvwnv = 0;
        var wvwWM = 0;
        var mN = 0;
        var NvVVv = VMvvn;
        var vVw = 0;
        var wwNNN = 0;
        var NMmmW = 0;
        var nnvmV = 0;
        var mwvNW = "";
        var dat = 0;
        var nwmmM = 0;
        var timeoutnb = 0;
        var nVMNw = 0;
        var wVmvv = 0;
        var wVmvW = 0;
        var MmnWW = 0;
        var MvvMV = myply.angle;
        var nmVmM = 0;
        var NVVvn = win.undefined;
        var vwnNv = win.undefined;
        var nnwwV = win.undefined;

        function vnV(wwwWN, nmnVn, NWNnv, vVVWm, NvwVV, mWnNN, NwvVN, MnmWV, Wnmwv, WvnMM) {
            mwvNW = (wwwWN !== win.undefined) ? wwwWN : "json/servers.json";
            dat = (nmnVn !== win.undefined) ? nmnVn : 0;
            nwmmM = (NWNnv !== win.undefined) ? NWNnv : 15000;
            nVMNw = (NvwVV !== win.undefined) ? NvwVV : 3;
            wwNNN = (mWnNN !== win.undefined) ? mWnNN : 20000;
            MVvWN = (NwvVN !== win.undefined) ? NwvVN : 10000;
            vwnNv = (MnmWV !== win.undefined) ? MnmWV : (function() {});
            NVVvn = (Wnmwv !== win.undefined) ? Wnmwv : (function() {});
            nnwwV = (WvnMM !== win.undefined) ? WvnMM : (function() {});
            timeoutnb = (vVVWm !== win.undefined) ? vVVWm : 2000;
            nmVmM = VmN;
            var nnwNn = clint.getItem("serverVersion");
            if ((clint.getItem("token") === null) || (nnwNn !== ("" + dat)))
                clint.setItem("token", NmmWm());
            clint.setItem("serverVersion", dat);
        };;

        function WmMnn() {
            if (((nv.state & nMV.mWWwm) === 0) || ((nv.state & nMV.NnNMV) > 0))
                return;
            nv.state = nMV.NnNMV;
            websocket.close();
            vVnMm();
        };;

        function WNmnv() {
            if (mV > MVvWN)
                mN = VmN;
            if ((VmN - mN) > nwmmM) {
                mN = VmN;
                WmMnn();
            }
        };;

        function clrtimeout() {
            win.clearTimeout(time);
        };;

        function vVnMm() {
            wvwWM = 0;
            nv.state = nMV.WWvNw + (nv.state & (nMV.NnNMV | nMV.wNVMw));
            connectsrv();
        };;

        function mNvvW(nick, MMm) {
            if (((nv.state & nMV.WWvNw) === 0) && ((nv.state & nMV.mWWwm) === 0)) {
                clint.setItem("nickname", nick);
                clint.setItem("skin", MMm);
                vVnMm();
            }
        };;

        function mnnMw() {
            wvwWM++;
            websocket.close();
            if (wvwWM >= nVMNw) {
                nv.state = nMV.Vnvww + (nv.state & nMV.NnNMV);
                if ((nv.state & nMV.NnNMV) > 0)
                    Wnn();
            } else
                connectsrv();
        };;

        function Mmn(NwnNM) {
            vVw = VmN;
            if(!isOpen(websocket)) return;
            websocket.send(NwnNM);
        };;

        function MNVNn() {
            if ((VmN - vVw) > wwNNN) {
                if(!isOpen(websocket)) return;
                websocket.send(mwVMM);
                vVw = VmN;
            }
        };;

        function VnnWV(VvVVN) {
            if ((VmN - wVmvv) > wVmvW) {
                vVw = VmN;
                websocket.send(win.JSON.stringify([1, VvVVN]));
                return 0;
            }
            return wVmvW - (VmN - wVmvv);
        };;

        function WmNmn() {
            if ((VmN - nmVmM) > MMvMv) {
                var mNNnN = (((((myply.angle - MvvMV) * 180) / win.Math.PI) % 360) + 360) % 360;
                if (mNNnN > 2) {
                    vVw = VmN;
                    nmVmM = VmN;
                    MvvMV = myply.angle;
                    mNNnN = win.Math.floor(((((myply.angle * 180) / win.Math.PI) % 360) + 360) % 360);
                    //mNNnN = aimAngle;
                    if(!isOpen(websocket)) return;
                    websocket.send(win.JSON.stringify([6, mNNnN]));
                }
            }
        };;
        function isOpen(ws) { return ws.readyState === ws.OPEN }
        function nNNVN() {
            if ((VmN - nmVmM) > mvNWn) {
                var mNNnN = (((((myply.angle - MvvMV) * 180) / win.Math.PI) % 360) + 360) % 360;
                if (mNNnN > 2) {
                    vVw = VmN;
                    nmVmM = VmN;
                    MvvMV = myply.angle;
                    mNNnN = win.Math.floor(((((myply.angle * 180) / win.Math.PI) % 360) + 360) % 360);
                    //mNNnN = aimAngle;
                    if(!isOpen(websocket)) return;
                    websocket.send(win.JSON.stringify([6, mNNnN]));
                }
            }
        };;

        function srvshift() {
            var shift = keys.shiftgo();
            if (shift !== nnvmV) {
                vVw = VmN;
                win.console.log("sendShift", shift);
                nnvmV = shift;
                if(!isOpen(websocket)) return;
                websocket.send(win.JSON.stringify([7, shift]));
            }
        };;

        function wmwvn() {
            if (myply.x >= nvm) {
                if (MmnWW !== key_d) {
                    vVw = VmN;
                    MmnWW = key_d;
                    if(!isOpen(websocket)) return;
                    websocket.send(win.JSON.stringify([3, key_d]));
                }
            } else {
                if (MmnWW !== key_a) {
                    vVw = VmN;
                    MmnWW = key_a;
                    if(!isOpen(websocket)) return;
                    websocket.send(win.JSON.stringify([3, key_a]));
                }
            }
        };;

        function srvclick() {
            vVw = VmN;
            if(!isOpen(websocket)) return;
            websocket.send(win.JSON.stringify([4]));
        };;
        //CLICK
        function wWnMM() {
            vVw = VmN;
            if(!isOpen(websocket)) return;
            websocket.send(win.JSON.stringify([5]));
        };;

        //sending wasd for walking
        function sendkey() {
            var nn = 0;
            if(!aimActive){
                if (keys.leftgo() === 1)
                    nn |= 1;
                if (keys.rightgo() === 1)
                    nn |= 2;
                if (keys.downgo() === 1)
                    nn |= 4;
                if (keys.straightgo() === 1)
                    nn |= 8;
            } else {
                nn = direct;
            }
            if (NMmmW !== nn) {
                vVw = VmN;
                NMmmW = nn;
                if(!isOpen(websocket)) return;
                websocket.send(win.JSON.stringify([2, nn]));
            }
            direct = 0;
        };;

        function connectsrv() {
            var ip = nv.servers[nv.NmV][NwWwn];
            var port = nv.servers[nv.NmV][VmmWv];
            var NnnNv = nv.servers[nv.NmV][vNNmW];
            //alert((((("ws" + ((NnnNv === 1) ? "s" : "")) + "://") + ip) + ":") + port);
            //websocket = new win.WebSocket((((("ws" + ((NnnNv === 1) ? "s" : "")) + "://") + ip) + ":") + port);
            websocket = new win.WebSocket("wss://devast115.devast.io:443");
            Nvwnv++;
            websocket.VmWMm = Nvwnv;
            var VmWMm = Nvwnv;


            websocket.binaryType = "arraybuffer";
            websocket.onerror = function() {
                if (this.VmWMm !== Nvwnv)
                    return;
                WmMnn();
            };
            websocket.onclose = function(Nv) {
                if (this.VmWMm !== Nvwnv)
                    return;
                WmMnn();
            };
            websocket.onmessage = function(Nv, vnWMw) {
                if (this.VmWMm !== Nvwnv)
                    return;
                mN = VmN;
                if (typeof Nv.data === 'string')
                    NVVvn(win.JSON.parse(Nv.data));
                else
                    vwnNv(Nv.data);
            };
            websocket.onopen = function(Nv) {
                MmnWW = -1;
                vVw = VmN;
                clrtimeout();
                if(!isOpen(websocket)) return;
                websocket.send(win.JSON.stringify(datatosrv(dat)));
                time = win.setTimeout(function() {
                    if (VmWMm !== Nvwnv)
                        return;
                    mnnMw();
                }, timeoutnb);
            };
            time = win.setTimeout(function() {
                if (VmWMm !== Nvwnv)
                    return;
                mnnMw();
            }, timeoutnb);
        };;

        function NwnvM() {
            nv.state |= nv.nMV.mwnMV;
        };;

        function wwMnN(mN) {
            wVmvv = VmN;
            wVmvW = mN * 60000;
        };;

        function VwwWW() {
            nv.state = nMV.VwMVN;
            Wnn();
        };;

        function NmWVv() {
            nv.state = nMV.wnMMN;
            Wnn();
        };;

        function MwNwm() {
            nv.state = nMV.NvnvM;
            Wnn();
        };;

        function mMnWv() {
            clrtimeout();
            nv.state = nMV.MWVVw;
            Wnn();
        };;

        function nNnVM() {
            clrtimeout();
            nv.state = nv.nMV.mWWwm;
            if (nv.NvN !== null)
                nv.NvN();
        };;

        function WMwWV(nnwNn) {
            if (nnwNn > dat)
                nv.state = nMV.wMVVw;
            else if (nnwNn < dat)
                nv.state = nMV.vwWvv;
            clrtimeout();
        };;

        function NvvVN() {
            WVMnV = [];
            wwWNw = nv.servers[nv.NmV][Wmvmm];
            for (var place = 0; place < nv.servers.length; place++) {
                if (wwWNw === nv.servers[place][Wmvmm])
                    WVMnV.push(place);
            }
            nv.NmV = WVMnV[win.Math.floor(win.Math.random() * WVMnV.length)];
        };;

        function Vvnww(wVvWw) {
            MVmWW();
            win.setTimeout(function() {
                NvvVN();
                wVvWw();
            }, WmNnm);
        };;

        function mmMwv() {
            Wwvmw = win.JSON.stringify(clint.getItem("lastServer"));
            for (var place = 0; place < nv.servers.length; place++) {
                var Nnwmn = nv.servers[place];
                if ((Nnwmn[0] === Wwvmw[0]) && (Nnwmn[1] === Wwvmw[1])) {
                    nv.NmV = place;
                    return;
                }
            }
            throw "Server not found"
        };;

        function VNWMn(wVvWw) {
            var VwmvV = 0;
            try {
                mmMwv();
                VwmvV = 1;
            } catch (vNn) {
                Vvnww(wVvWw);
            }
            if (VwmvV === 1)
                wVvWw();
        };;

        function nwmNW(wVvWw) {
            win.console.log("GETSERVERLIST");
            if (wwwMN === win.undefined) {
                var Vmn = new win.XMLHttpRequest;
                Vmn.open("GET", mwvNW, true);
                Vmn.onreadystatechange = function() {
                    if ((Vmn.readyState === 4) && (this.status === 200)) {
                        nv.servers = win.JSON.parse(this.responseText);
                        VNWMn(wVvWw);
                    }
                };
                Vmn.send();
            } else {
                nv.servers = WNNnv;
                VNWMn(wVvWw);
            }
        };;

        function MVmWW() {
            var MNv = [];
            var mvNWm = nv.servers;
            NvVVv = VMvvn;
            for (var place = 0; place < mvNWm.length; place++) {
                var Nnwmn = mvNWm[place];
                var WmVwN = Nnwmn[Wmvmm];
                var VNMmn = 0;
                for (var nMm = 0; nMm < nv.types.length; nMm++) {
                    if (WmVwN.indexOf(nv.types[nMm]) !== -1) {
                        win.console.log("EXCLUSION OF " + WmVwN);
                        VNMmn = 1;
                        break;
                    }
                }
                if (VNMmn === 1)
                    continue;
                if (MNv[WmVwN] === win.undefined) {
                    MNv[WmVwN] = 1;
                    NMmVw(place);
                }
            }
        };;

        function NMmVw(Wn) {
            var Nnwmn = nv.servers[Wn];
            var VNVmm = win.Date.now();
            var Vmn = new win.XMLHttpRequest;
            Vmn.open("GET", (((("http" + ((Nnwmn[vNNmW] === 1) ? "s" : "")) + "://") + Nnwmn[VMVmm]) + ":") + Nnwmn[VmmWv], true);
            Vmn.onreadystatechange = function() {
                if (Vmn.readyState === 4) {
                    var mN = win.Date.now() - VNVmm;
                    if (mN < NvVVv) {
                        NvVVv = mN;
                        nv.NmV = Wn;
                    }
                }
            };
            try {
                Vmn.send(null);
            } catch (vNn) {}
        };;

        function NmmWm() {
            var token = "";
            for (var place = 0; place < wmnWv; place++) {
                token += win.String.fromCharCode(48 + win.Math.floor(win.Math.random() * 74));
            }
            return token;
        };;

        function WMM() {
            if (nv.state === nv.nMV.mWWwm) {
                WNmnv();
                MNVNn();
            }
        };;

        function Wnn() {
            if (nv.Wnn !== null) {
                var Mnn = nv.state;
                nv.state = 0;
                nv.Wnn(Mnn);
            }
        };;
        return {
            state: 0,
            nMV: nMV,
            VmM: win.undefined,
            NmV: 0,
            vnV: vnV,
            mNvvW: mNvvW,
            nwmNW: nwmNW,
            NwnvM: NwnvM,
            nNnVM: nNnVM,
            WMwWV: WMwWV,
            mMnWv: mMnWv,
            NmWVv: NmWVv,
            VwwWW: VwwWW,
            muted: wwMnN,
            MwNwm: MwNwm,
            VnnWV: VnnWV,
            Mmn: Mmn,
            sendkey: sendkey,
            WmNmn: WmNmn,
            nNNVN: nNNVN,
            wmwvn: wmwvn,
            srvclick: srvclick,
            wWnMM: wWnMM,
            srvshift: srvshift,
            update: WMM,
            MMwNN: [],
            Wnn: null,
            NvN: null
        };
    })();
    var SERVG = (function() {
        var NMv = 0;
        var wWw = 0;
        var MwwMW = 0;
        var nVnMn = 0;
        var NNMVV = 18;
        var NmmnM = 9;
        var Mnnnn = 50;

        function mmMMM(VVNwN, WNvNN) {
            NMv = VVNwN;
            wWw = WNvNN;
            MwwMW = VVNwN - 1;
            nVnMn = WNvNN - 1;
        };;

        function VwvMN(mNWnw) {
            SERVG.WVw = -1;
            for (var place = 0; place < SERVG.Mvnvn; place++) {
                if (mNWnw[place] !== 0)
                    SERVG.WVw++;
                SERVG.socket[place] = new player(place, mNWnw[place]);
            }
        };;

        function player(id, nick) {
            this.id = id;
            this.nick = nick;
            this.tokenid = 0;
            this.MMm = 0;
            this.MNN = 0;
            this.mW = 0;
            this.wMWWv = 0;
            this.clan = -1;
            this.wwV = 0;
            this.VVvWM = 0;
            this.Wmv = 0;
            this.MNV = 0;
            this.nNnWn = [];
            this.position = [];
            this.mvnvM = 0;
            this.NMWMV = 0;
            this.text = [];
            this.WvWwv = [];
            this.MVNWv = [];
            this.label = [];
            this.mNWvv = [{
                x: 0,
                y: 0,
                mN: 0,
                angle: 0,
                size: 0
            }, {
                x: 0,
                y: 0,
                mN: 0,
                angle: 0,
                size: 0
            }, {
                x: 0,
                y: 0,
                mN: 0,
                angle: 0,
                size: 0
            }];
            this.mNvwv = [{
                type: 0,
                x: 0,
                y: 0,
                mN: 0,
                wwMnv: 0,
                NwVWn: 0
            }, {
                type: 0,
                x: 0,
                y: 0,
                mN: 0,
                wwMnv: 0,
                NwVWn: 0
            }, {
                type: 0,
                x: 0,
                y: 0,
                mN: 0,
                wwMnv: 0,
                NwVWn: 0
            }, {
                type: 0,
                x: 0,
                y: 0,
                mN: 0,
                wwMnv: 0,
                NwVWn: 0
            }];
            this.Vw = 0;
            this.nn = 0;
            this.orientation = 1;
            this.NmMVW = 1;
            this.mWv = -1;
            this.MMvnN = 0;
            this.vMNnW = null;
            this.mMw = null;
            this.MNn = null;
            this.nnmnv = -1;
            this.MNW = -1;
            this.x = 0;
            this.y = 0;
            this.rx = 0;
            this.ry = 0;
            this.VwVVw = 0;
        };;

        function NMvMv(clans) {
            for (var place = 0; place < NNMVV; place++)
                SERVG.clans[place] = new MmvWv(place, clans[place + 1]);
        };;

        function MVnvw(WwnMv, Wn) {
            if (Wn === Mnnnn) {
                WwnMv.clan = -1;
                return;
            } else if (Wn > Mnnnn) {
                Wn -= Mnnnn + 1;
                SERVG.clans[Wn].MvvWw = WwnMv.id;
                WwnMv.VVvWM = 1;
                if (SERVG.ME.id === WwnMv.id)
                    SERVG.ME.VVvWM = 1;
            } else
                WwnMv.VVvWM = 0;
            if (SERVG.ME.id === WwnMv.id)
                SERVG.ME.clan = Wn;
            WwnMv.clan = Wn;
            WwnMv.wwV = SERVG.clans[Wn].mvN;
        };;

        function MMVmW() {
            ME.wNw = 0;
            for (var place = 0; place < ME.mnVMN.length; place++) {
                if (ME.mnVMN[place] !== 0) {
                    ME.wNw = ME.mnVMN[place];
                    ME.mnVMN[place] = 0;
                    return;
                }
            }
            ME.wMnNv = 0;
        };;

        function Wwmvm(Wn) {
            var clan = SERVG.clans[Wn];
            clan.label = null;
            clan.WWMWm = null;
            clan.mvN = wwV++;
            clan.MvvWw = 0;
            clan.name = "";
        };;
        var wwV = 0;

        function MmvWv(Wn, Mwv) {
            this.id = Wn;
            this.name = Mwv;
            this.label = null;
            this.WWMWm = null;
            this.MvvWw = 0;
            this.mvN = wwV++;
        };;

        function NNNMv() {
            var vvv = VVM.length;
            for (var place = 0; place <= vvv; place++) {
                if ((vvv !== place) && (VVM[place].nn === 0))
                    continue;
                var Wvm = nNM.Wvm[place];
                var vWM = nNM.border[place];
                var mWm = vWM.border;
                for (var vv = 0; vv < mWm; vv++)
                    MMwww(Wvm[vWM.nnN[vv]]);
            }
            if (SERVG.ME.clan !== -1) {
                for (var place = 0; place < ME.nnnVN; place++) {
                    var nmmvN = ME.MVmNm[place];
                    if (nmmvN.wmWMV < 0)
                        continue;
                    var wmW = SERVG.socket[nmmvN.id];
                    wmW.rx = wN.nWV(wmW.rx, wmW.x, 0.03);
                    wmW.ry = wN.nWV(wmW.ry, wmW.y, 0.03);
                    nmmvN.wmWMV -= mV;
                }
            }
            if (SERVG.ME.VvWnm > 0) {
                var wmW = SERVG.socket[SERVG.ME.karmaplayerid];
                wmW.rx = wN.nWV(wmW.rx, wmW.x, 0.03);
                wmW.ry = wN.nWV(wmW.ry, wmW.y, 0.03);
                SERVG.ME.VvWnm -= mV;
            }
        };;

        function MMwww(MW) {
            Wv = MW.rx + ((mV * MW.speed) * MW.NvMVn);
            wM = MW.ry + ((mV * MW.speed) * MW.vnmWn);
            if (Vwv.MWV(MW.rx, MW.ry, MW.wnw, MW.WVM) < Vwv.MWV(Wv, wM, MW.rx, MW.ry)) {
                MW.rx = MW.wnw;
                MW.ry = MW.WVM;
            } else {
                MW.rx = Wv;
                MW.ry = wM;
            }
            MW.x = WNW.nWV(MW.x, MW.rx, MW.nWV);
            MW.y = WNW.nWV(MW.y, MW.ry, MW.nWV);
            MW.place = win.Math.max(0, win.Math.min(nVnMn, win.Math.floor(MW.y / Mw.wmn)));
            MW.vv = win.Math.max(0, win.Math.min(MwwMW, win.Math.floor(MW.x / Mw.wmn)));
            if ((SERVG.ME.id === MW.mysocketid) && (MW.id === 0))
                MW.angle = myply.angle;
            else if (MW.mysocketid === 0)
                MW.angle = WNW.nWV(MW.angle, MW.MVWwV, MW.nWV / 2);
            else
                MW.angle = WNW.nWV(MW.angle, MW.MVWwV, MW.nWV * 2);
        };;

        function VVnvw(WVm, M) {
            if ((SERVG.socket[WVm].nick === 0) && (SERVG.socket[M].nick === 0))
                return 0;
            else if (SERVG.socket[WVm].nick === 0)
                return SERVG.socket[M].mW - 1;
            else if (SERVG.socket[M].nick === 0)
                return -1 - SERVG.socket[WVm].mW;
            else
                return SERVG.socket[M].mW - SERVG.socket[WVm].mW;
        };;

        function nnvVM() {
            win.console.log(SERVG.Mvnvn);
            for (var place = 0; place < SERVG.Mvnvn; place++)
                SERVG.leaderboard[place] = place;
            SERVG.leaderboard = SERVG.leaderboard.sort(VVnvw).slice(0, 10);
            for (var place = 0; place < SERVG.Mvnvn; place++)
                SERVG.WnNNv = 1;
        };;

        function MVvwW(Vvv, ins) {
            for (var place = 0; place < 10; place++) {
                var Wn = ins[2 + (place * 4)];
                var mW = Vvv[2 + (place * 2)];
                var ME = SERVG.socket[Wn];
                ME.mW = WNW.NvwmV(mW);
                ME.VwVVw = ins[3 + (place * 4)];
                var wMWWv = WNW.nVvNM(ME.mW);
                if (wMWWv !== ME.wMWWv)
                    ME.MNn = null;
                ME.wMWWv = wMWWv;
                SERVG.leaderboard[place] = Wn;
            }
            SERVG.WnNNv = 1;
        };;

        function VmmnM() {
            this.nnw = 0;
            this.value = 0;
            this.WWw = 0;
            this.speed = 0;
            this.time = 0;
            this.Nwmnw = 1;
            this.mNNmw = 0;
        };;

        function nVnwv(Vnv, vW, VWM, VVw, vww) {
            Vnv.nnw = vW;
            Vnv.value = vW;
            Vnv.WWw = vW;
            Vnv.VWM = VWM;
            Vnv.VVw = VVw;
            Vnv.vww = vww;
            Vnv.mNNmw = 0;
        };;
        
        function nMVNW() {
            var WvW = VVM[mnW].MnW;
            nVnwv(MnW.health, WvW.health.WWw, WvW.health.VWM, WvW.health.VVw, 0);
            if (ME.MNN === 0) {
                nVnwv(MnW.vVv, WvW.vVv.WWw, WvW.vVv.VWM, WvW.vVv.VVw, 1);
                nVnwv(MnW.vNN, WvW.vNN.WWw, WvW.vNN.VWM, WvW.vNN.VVw, 0);
                nVnwv(MnW.nvv, WvW.nvv.WWw, WvW.nvv.VWM, WvW.nvv.VVw, -1);
                nVnwv(MnW.MWw, WvW.MWw.WWw, WvW.MWw.VWM, WvW.MWw.VVw, 0);
            } else {
                nVnwv(MnW.vVv, WvW.vVv.WWw, WvW.vVv.VWM, 0, 1);
                nVnwv(MnW.vNN, WvW.vNN.WWw, WvW.vNN.VWM, 0, 0);
                nVnwv(MnW.nvv, WvW.nvv.WWw, WvW.nvv.VWM * 2, WvW.nvv.VVw / 2, -1);
                nVnwv(MnW.MWw, WvW.MWw.WWw, WvW.MWw.VWM, 0, 0);
            }
            nVnwv(MnW.mMv, 255, 0, 0, 0);
            MnW.mMv.value = 0;
            MnW.mMv.nnw = 0;
            ME.nmMWN = NwwNn;
            if (nVM === NwVWM)
                MnW.vNN.vww = 1;
        };;

        function nMmNW(Vnv) {
            if (Vnv.vww === 1)
                Vnv.value = win.Math.min(Vnv.WWw, win.Math.max(Vnv.value - (mV * (Vnv.VVw - Vnv.mNNmw)), 0));
            else if (Vnv.vww === -1)
                Vnv.value = win.Math.min(Vnv.value + (mV * (Vnv.VWM + Vnv.mNNmw)), Vnv.WWw);
            Vnv.nnw = WNW.nWV(Vnv.nnw, Vnv.value, 0.1);
        };;
        
        function WnMvm() {
            nMmNW(MnW.health);
            nMmNW(MnW.vVv);
            nMmNW(MnW.vNN);
            nMmNW(MnW.MWw);
            nMmNW(MnW.nvv);
            nMmNW(MnW.mMv);
            SERVG.ME.VWMmM += mV;
            if (MnW.MWw.nnw > 254)
                vWn.vwMNW = 0;
            else
                vWn.vwMNW = win.Math.min(1, win.Math.max(0, 1 - (MnW.MWw.nnw / 255)));
            vNvmW();
        };;
        var MnW = {
            health: new VmmnM,
            vVv: new VmmnM,
            vNN: new VmmnM,
            MWw: new VmmnM,
            nvv: new VmmnM,
            mMv: new VmmnM
        };
        var NwVWM = 1;
        var Mnvww = 0;
        var nVM = Mnvww;
        var wVnVV = 0;

        function VwVMW() {
            var mWN;
            mWN = NWVnn;
            NWVnn = items;
            items = mWN;
            mWN = NWwVV;
            NWwVV = VNw;
            VNw = mWN;
            mWN = mwwnn;
            mwwnn = VNN;
            VNN = mWN;
            mWN = MMNMn;
            MMNMn = nnv;
            nnv = mWN;
            mWN = NMnWm;
            NMnWm = VVM;
            VVM = mWN;
            mWN = vNNVn;
            vNNVn = NWWWW;
            NWWWW = mWN;
            mWN = wwVWm;
            wwVWm = MwWmN;
            MwWmN = mWN;
            mWN = VNVwN;
            VNVwN = VVv;
            VVv = mWN;
            nVM = (nVM + 1) % 2;
            SERVG.nVM = nVM;
            if (nVM === 0) {
                win.document.getElementById("bod").style.backgroundColor = "#3D5942"; // color of grass, first day next night
                VMM.style.backgroundColor = "#3D5942";
            } else {
                win.document.getElementById("bod").style.backgroundColor = "#0B2129";
                VMM.style.backgroundColor = "#0B2129";
            }
            wVnVV = 0;
        };;

        function WMnVv(nnN, MVNvn) {
            if (nnN !== nVM)
                SERVG.vnw = 1000;
            SERVG.nVM = nVM;
            wVnVV = MVNvn;
        };;

        function MVMwn(nnN, MVNvn) {
            if (nnN !== nVM)
                VwVMW();
            SERVG.nVM = nVM;
            wVnVV = MVNvn;
        };;

        function NvVVW() {
            wVnVV += mV;
            return (wVnVV % SERVG.Mnvww) + (nVM * 10000000);
        };;

        function NvwNN(Wn) {
            var vvv = 0;
            var wv = items[Wn];
            windowobjects.vwvvm.MVN(wv.img.src, wv.img.W);
            var MWVwN = wv.detail.WVn;
            var nwV = wv.detail.MWW;
            var WVn = windowobjects.WVn;
            var VnmwN = windowobjects.VnmwN;
            var nNNWn = ME.nNNWn;
            ME.mMvww = Wn;
            if (nwV !== win.undefined) {
                for (var place = 0; place < nwV.length; place++) {
                    var wmN = VmwwM[nwV[place]];
                    if (wmN !== win.undefined) {
                        wv = items[wmN];
                        VnmwN[vvv].MVN(wv.img.src, wv.img.W);
                        vvv++;
                    }
                }
            }
            ME.nWwmM = vvv;
            vvv = 0;
            if (MWVwN !== win.undefined) {
                for (place = 0; place < MWVwN.length; place++) {
                    wv = items[MWVwN[place][0]];
                    WVn[vvv].MVN(wv.img.src, wv.img.W);
                    nNNWn[vvv] = wv.id;
                    vvv++;
                }
            }
            ME.nMnmW = vvv;
            MMMWN(MWVwN);
        };;

        function NMvWv(Wn, NW) {
            if ((ME.WvMVw[Wn] === 1) || (NW.level === -1))
                return 2;
            else if (((NW.level > ME.level) || (ME.MwV < NW.wNvMv)) || ((NW.WnNmW !== -1) && (ME.WvMVw[NW.WnNmW] === win.undefined)))
                return 0;
            return 1;
        };;

        function MMMWN(WVn) {
            var MvmWv = ME.NmWNV;
            var NV = ME.inventory;
            var mNmnm = 1;
            if (WVn === win.undefined)
                return mNmnm;
            for (var place = 0; place < WVn.length; place++) {
                var VWVMW = WVn[place];
                for (var vv = 0; vv < NV.length; vv++) {
                    var wv = NV[vv];
                    if (wv[0] === VWVMW[0]) {
                        if (wv[1] >= VWVMW[1]) {
                            MvmWv[place] = VWVMW[1];
                            break;
                        } else
                            MvmWv[place] = -VWVMW[1];
                    }
                }
                if (vv === NV.length) {
                    MvmWv[place] = -VWVMW[1];
                    mNmnm = 0;
                }
            }
            return mNmnm;
        };;

        function MNNMM() {
            if ((SERVG.ME.VVn === 1) || (SERVG.ME.MVNWm === 1)) {
                SERVG.ME.VVn = 0;
                SERVG.ME.MVNWm = 0;
                nv.Mmn("[17]");
            }
        };;

        function NVM(nww) {
            SERVG.MNNMM();
            var nnNVM = 0;
            var vVWmn = 0;
            var vvv = 0;
            var nvV = ME.NNm;
            var NNm = windowobjects.nvV;
            var vVN = ME.vVN;
            for (var place = 1; place < items.length; place++) {
                var wv = items[place];
                if (wv.detail.nww === nww) {
                    if (nnNVM === 0) {
                        nnNVM = place;
                        vVWmn = vvv;
                    }
                    NNm[vvv].MVN(wv.img.src, wv.img.W);
                    nvV[vvv] = place;
                    vVN[vvv] = NMvWv(place, wv.detail);
                    vvv++;
                }
            }
            ME.MNvMn = vvv;
            ME.Vvw = -1;
            ME.nVV = nww;
            ME.VNwww = vVWmn;
            NvwNN(nnNVM);
        };;

        function MwM(MWW) {
            if (MWW === station.own) {
                SERVG.MNNMM();
                ME.Nn.MNM = -1;
            }
            var nnNVM = 0;
            var vVWmn = 0;
            var WnNmW = SERVG.ME.mMvww;
            var vvv = 0;
            var nvV = ME.NNm;
            var vVN = ME.vVN;
            var NNm = windowobjects.nvV;
            for (var place = 1; place < items.length; place++) {
                var wv = items[place];
                var NW = wv.detail;
                if (((NW.MWW !== win.undefined) && (NW.MWW.indexOf(MWW) !== -1)) && ((NW.level === -1) || (ME.WvMVw[wv.id] === 1))) {
                    if ((nnNVM === 0) || (WnNmW === place)) {
                        nnNVM = place;
                        vVWmn = vvv;
                    }
                    NNm[vvv].MVN(wv.img.src, wv.img.W);
                    nvV[vvv] = place;
                    vVN[vvv] = MMMWN(NW.WVn);
                    vvv++;
                }
            }
            ME.MNvMn = vvv;
            ME.Vvw = MWW;
            ME.nVV = -1;
            ME.VNwww = vVWmn;
            if (nnNVM > 0)
                NvwNN(nnNVM);
        };;
        NwwNn = 900;
        wnvmW = 1.105;

        function VVMWm(vMN) {
            var mMv = NwwNn;
            for (var place = 0; place < vMN; place++)
                mMv = win.Math.floor(mMv * wnvmW);
            return mMv;
        };;

        function vNvmW() {
            if ((ME.mMv > 0) && (win.Math.abs(MnW.mMv.nnw - MnW.mMv.value) < 0.6)) {
                if (MnW.mMv.value === 255) {
                    MnW.mMv.nnw = 0;
                    MnW.mMv.value = 0;
                    ME.level++;
                    ME.MwV++;
                    if ((windowobjects.MvN() === 1) && (ME.nVV !== -1))
                        NVM(ME.nVV);
                    audio.VnV(audio.ww.nNwmw, 1, 0);
                    return;
                }
                if (ME.mMv >= ME.nmMWN) {
                    MnW.mMv.value = 255;
                    ME.mMv -= ME.nmMWN;
                    ME.nmMWN = win.Math.floor(ME.nmMWN * wnvmW);
                } else
                    MnW.mMv.value = win.Math.floor((255 * ME.mMv) / ME.nmMWN);
            }
        };;
        var ME = {
            id: 0,
            x: 0,
            y: 0,
            NWM: 0,
            mmm: 0,
            mW: 0,
            WMWVW: -1,
            MnWnn: 0,
            MNn: null,
            click: 0,
            inventory: [],
            nMnmW: 0,
            nWwmM: 0,
            nwnWV: 0,
            MNvMn: 0,
            VVn: 0,
            MVNWm: 0,
            Vvw: -1,
            nVV: -1,
            mMvww: -1,
            VNwww: -1,
            WvMVw: [],
            level: 0,
            nWwnN: 0,
            mMv: 0,
            nmMWN: 0,
            MwV: 0,
            nNNWn: [],
            NNm: [],
            vVN: [],
            NmWNV: [],
            WwVNv: 0,
            WNvWv: 0,
            mmM: {
                vmm: 0,
                x: 0,
                y: 0,
                id: 0
            },
            MWVMV: null,
            mvn: -1,
            wVnVm: 0,
            nWVvv: 0,
            loot: -1,
            mwMvN: -1,
            mwMmN: 0,
            NnN: -1,
            vWMmW: -1,
            MnMwn: -1,
            MNMvN: -1,
            mwV: [
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0]
            ],
            mwmVM: 0,
            Nn: {
                NMV: [0, 0, 0, 0],
                mv: 0,
                time: 0,
                WWNVM: 0,
                vvv: 0,
                MNM: 0
            },
            putableimg: 0,
            mWmnv: 0,
            nvMwN: 0,
            NvwMN: 0,
            Mww: 0,
            Wvv: [0, 0, 0],
            VWVWw: 0,
            vNwMm: 0,
            NVNMw: [0, 0, 0],
            NmVnm: [0, 0, 0],
            wvM: 0,
            NNV: 0,
            Vmm: 0,
            nwVMm: 0,
            wNV: 0,
            NmWvw: 0,
            mnWwv: 0,
            wMnNv: 0,
            VVvWM: 0,
            WnNvv: 0,
            Mwnwv: 0,
            WwmNM: 0,
            mVVmv: 0,
            mnVMN: [0, 0, 0, 0, 0],
            wNw: 0,
            Mwnwv: 0,
            clan: -1,
            MVmNm: [],
            nnnVN: 0,
            VwVVw: 0,
            karmaplayerid: 0,
            VvWnm: 0,
            vVVnm: null,
            MnMWm: 0,
            VVvMn: 1,
            VmNwm: 0,
            Mwwnw: 0,
            wMwmv: 0,
            WMnWN: 0,
            MNN: 0,
            wmWvV: []
        };
        return {
            survival: 0,
            VNVWN: 1,
            VMnnw: 2,
            Vnn: 0,
            leaderboard: [],
            nnvVM: nnvVM,
            MVvwW: MVvwW,
            mmMMM: mmMMM,
            WnNNv: 0,
            Mvnvn: 0,
            WVw: 0,
            NMvMv: NMvMv,
            clans: [],
            MVnvw: MVnvw,
            Wwmvm: Wwmvm,
            MMVmW: MMVmW,
            VwvMN: VwvMN,
            socket: [],
            ME: ME,
            MMwww: MMwww,
            NNNMv: NNNMv,
            MnW: MnW,
            nMVNW: nMVNW,
            WnMvm: WnMvm,
            VwVMW: VwVMW,
            WMnVv: WMnVv,
            MVMwn: MVMwn,
            NvVVW: NvVVW,
            Mnvww: (8 * 60) * 1000,
            nVM: 0,
            vnw: 0,
            MwM: MwM,
            NVM: NVM,
            NvwNN: NvwNN,
            MNNMM: MNNMM,
            VVMWm: VVMWm
        };
    })();
    var nNM = (function() {
        var MwvWW = 0;
        var Wvm = [];
        var vWM = [];
        var WVMvm = [];
        var MnMWW = 0;

        function vnV(WvwVn, WwNMN, nVvmm) {
            nNM.WwNMN = (WwNMN === win.undefined) ? 0 : WwNMN;
            nNM.nVvmm = (nVvmm === win.undefined) ? 0 : nVvmm;
            MnMWW = nNM.nVvmm + nNM.WwNMN;
            MwvWW = VVM.length;
            var vvv = VVM.length + 1;
            for (var place = 0; place < vvv; place++) {
                vWM[place] = new VNWvV.VNWvV(WvwVn);
                Wvm[place] = [];
                for (var vv = 0; vv < WvwVn; vv++)
                    Wvm[place][vv] = nNM.create(place);
            }
        };;

        function MVVMV(vV) {
            return new MVwWV(vV);
        };;

        function NWnwm() {
            for (var place = 0; place < VVM.length; place++)
                vWM[place].border = 0;
            WVMvm = [];
        };;

        function NMM(mysocketid, Wn, mvN, vV, nVmNV) {
            var place = 0;
            var mMnVn = (((mysocketid === 0) ? 0 : MnMWW) + (mysocketid * nNM.VWMmm)) + Wn;
            var MW = WVMvm[mMnVn];
            if (((MW !== win.undefined) && (MW.type === vV)) && (MW.mvN === mvN))
                WVMvm[mMnVn] = win.undefined;
            var M = vWM[vV];
            var NMwVv = Wvm[vV];
            var vvv = M.border;
            for (place = 0; place < vvv; place++) {
                var MW = NMwVv[M.nnN[place]];
                if (((MW.mvN === mvN) && (MW.mysocketid === mysocketid)) && (MW.id === Wn)) {
                    VNWvV.nwnNm(M, place);
                    if ((VVM[MW.type].remove > 0) && (nVmNV === 1)) {
                        var VWvMW = Wvm[MwvWW][VNWvV.MMvvm(vWM[MwvWW])];
                        for (var vv in MW)
                            VWvMW[vv] = MW[vv];
                        VWvMW.vwW = 1;
                    }
                    return;
                }
            }
        };;

        function wWm(mysocketid, Wn, mvN, vV) {
            var mMnVn = (((mysocketid === 0) ? 0 : MnMWW) + (mysocketid * nNM.VWMmm)) + Wn;
            var MW = WVMvm[mMnVn];
            if ((MW === win.undefined) || (MW.mvN !== mvN)) {
                var wmWnw = VNWvV.MMvvm(vWM[vV]);
                MW = Wvm[vV][wmWnw];
                if (MW === win.undefined) {
                    win.console.log("Memory Warn: new entitie created");
                    Wvm[vV][wmWnw] = nNM.create(vV);
                    MW = Wvm[vV][wmWnw];
                }
                WVMvm[mMnVn] = MW;
                MW.update = 0;
                MW.vwW = 0;
            }
            return MW;
        };;

        function nVvvw() {
            var M = vWM[MwvWW];
            var NMwVv = Wvm[MwvWW];
            var vvv = M.border;
            for (place = 0; place < vvv; place++) {
                var MW = NMwVv[M.nnN[place]];
                if (MW.vwW !== 1) {
                    VNWvV.nwnNm(M, place);
                    vvv--;
                    place--;
                }
            }
        };;

        function vvVvm(vV, mysocketid, Wn) {
            var NMwVv = Wvm[vV];
            var M = vWM[vV];
            var vvv = M.border;
            for (var place = 0; place < vvv; place++) {
                var player = NMwVv[M.nnN[place]];
                if ((player.id === Wn) && (player.mysocketid === mysocketid))
                    return player;
            }
            return null;
        };;
        return {
            vnV: vnV,
            create: MVVMV,
            get: wWm,
            vvVvm: vvVvm,
            remove: NMM,
            NWnwm: NWnwm,
            Wvm: Wvm,
            border: vWM,
            nVvvw: nVvvw,
            VWMmm: 0,
            WwNMN: 0,
            nVvmm: 0
        };
    })();
    var VVM = [{                // hp bars etc
        MnW: {
            health: {
                WWw: 255,
                VVw: 0.005,
                VWM: 0.005
            },
            vVv: {
                WWw: 255,
                VVw: 0.0012,
                VWM: 0.0012
            },
            vNN: {
                WWw: 255,
                VVw: 0.0035,
                VWM: 0.005
            },
            MWw: {
                WWw: 255,
                VVw: 0.024,
                VWM: 0.003
            },
            nvv: {
                WWw: 255,
                VVw: 0.03,
                VWM: 0.015
            }
        },
        WnmmW: [{
            head: {
                src: "img/day-skin0.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm0.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm0.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-skin1.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm0.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm0.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-skin2.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm2.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm2.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-skin3.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm2.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm2.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-skin4.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm4.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm4.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-skin5.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm4.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm4.png",
                W: {
                    m: 0
                }
            }
        }],
        mVNvN: [{}, {
            head: {
                src: "img/day-headscarf.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-chapka.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm-chapka.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm-chapka.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-coat.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm-coat.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm-coat.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-gaz-mask.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-gaz-protection.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm-gaz-protection.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm-gaz-protection.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-radiation-suit.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm-radiation-suit.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm-radiation-suit.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-metal-helmet.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-welding-helmet.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm-welding-helmet.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm-welding-helmet.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-gladiator-helmet.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm-gladiator-armor.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm-gladiator-armor.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-leather-jacket.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm-leather-jacket.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm-leather-jacket.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-kevlar-suit.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm-kevlar-suit.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm-kevlar-suit.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-SWAT-suit.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm-SWAT-suit.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm-SWAT-suit.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-protective-suit.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm-protective-suit.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm-protective-suit.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-tesla-0.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm-tesla-0.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm-tesla-0.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-tesla-armor.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm-tesla-armor.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm-tesla-armor.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-camouflage-gear.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm-camouflage-gear.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm-camouflage-gear.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-christmas-hat.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-deer-hat.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-snowman-hat.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm-snowman-hat.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm-snowman-hat.png",
                W: {
                    m: 0
                }
            }
        }, {
            head: {
                src: "img/day-elf-hat.png",
                W: {
                    m: 0
                }
            },
            mMM: {
                src: "img/day-left-arm-elf-hat.png",
                W: {
                    m: 0
                }
            },
            Mmv: {
                src: "img/day-right-arm-elf-hat.png",
                W: {
                    m: 0
                }
            }
        }],
        mNWvv: {
            src: "img/day-run-effect.png",
            W: {
                m: 0
            }
        },
        wmm: {
            src: "img/day-dead-player.png",
            W: {
                m: 0
            }
        },
        Mmm: {
            src: "img/hurt-player.png",
            W: {
                m: 0
            }
        },
        mNW: {
            src: "img/heal-player.png",
            W: {
                m: 0
            }
        },
        vVv: {
            src: "img/food-player.png",
            W: {
                m: 0
            }
        },
        mNvwv: [{
            src: "img/day-shotgun-cartridge.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-9mm-cartridge.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-AK47-cartridge.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-crossbow-cartridge.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-nails-cartridge.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-cells-cartridge.png",
            W: {
                m: 0
            }
        }],
        Mmvnv: [
            [{
                src: "img/day-bullet1.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-bullet2.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-bullet2l.png",
                W: {
                    m: 0
                }
            }],
            [{
                src: "img/day-bullet3.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-bullet4.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-bullet4l.png",
                W: {
                    m: 0
                }
            }],
            [{
                src: "img/day-bullet5.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-bullet6.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-bullet6l.png",
                W: {
                    m: 0
                }
            }],
            [{
                src: "img/day-wood-arrow.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-wood-arrow1.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-wood-arrowl.png",
                W: {
                    m: 0
                }
            }],
            [{
                src: "img/day-wood-spear0.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-wood-spear1.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-wood-spearl.png",
                W: {
                    m: 0
                }
            }],
            [{
                src: "img/day-wood-crossarrow.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-wood-crossarrow1.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-wood-crossarrowl.png",
                W: {
                    m: 0
                }
            }],
            [{
                src: "img/day-nail1.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-nail2.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-nail2l.png",
                W: {
                    m: 0
                }
            }],
            [{
                src: "img/day-laser0.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-laser1.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-laser1l.png",
                W: {
                    m: 0
                }
            }],
            [{
                src: "img/day-grenade0.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-grenade1.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-grenadel.png",
                W: {
                    m: 0
                }
            }]
        ],
        Mmw: [
            [{
                src: "img/day-gun-effect0.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-gun-effect1.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-gun-effect2.png",
                W: {
                    m: 0
                }
            }],
            [{
                src: "img/day-laser-effect0.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-laser-effect1.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-laser-effect2.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-laser-effect3.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-laser-effect4.png",
                W: {
                    m: 0
                }
            }]
        ],
        mNMNW: [{
            type: 0,
            id: 0,
            Nnn: 0,
            Mmv: {
                angle: 0,
                x: 22,
                y: 39
            },
            mMM: {
                angle: 0,
                x: 22,
                y: -39
            },
            Mnv: 0,
            vnM: 0.5,
            mVM: 3,
            Nww: ["audio/hand-swing0.mp3", "audio/hand-swing2.mp3", "audio/hand-swing3.mp3"],
            Vw: 0.05,
            nn: 3,
            mN: 300,
            impactaudio: 301,
            wvW: 150,
            damage: 20,
            vNNwv: 3,
            Nwv: 10,
            nvv: 2,
            wwW: 30,
            wvnVN: 0,
            NWN: 47,
            mWv: 0,
            mw: 0
        }, {
            type: 1,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 0.8,
            mVM: 1,
            Nww: ["audio/pickaxe-swing.mp3"],
            nV: {
                src: "img/day-stone-pickaxe.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 30,
                y: 0,
                WWm: 4,
                x2: 20,
                y2: 10
            },
            Mmv: {
                angle: 0,
                x: 33,
                y: 28,
                NWN: 8,
                WWm: 1.8
            },
            mMM: {
                angle: 0,
                x: 30,
                y: -28,
                NWN: -14,
                WWm: 1
            },
            Vw: 0.02,
            nn: 2,
            mN: 800,
            wnNmM: 800,
            impactaudio: 801,
            wvW: 650,
            damage: 45,
            vNNwv: 16,
            Nwv: 15,
            nvv: 5,
            wwW: 50,
            NWN: 56,
            mWv: 0,
            mw: 0
        }, {
            type: 1,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 0.8,
            mVM: 1,
            Nww: ["audio/pickaxe-swing.mp3"],
            nV: {
                src: "img/day-steel-pickaxe.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 30,
                y: 0,
                WWm: 4,
                x2: 20,
                y2: 10
            },
            Mmv: {
                angle: 0,
                x: 33,
                y: 28,
                NWN: 8,
                WWm: 1.8
            },
            mMM: {
                angle: 0,
                x: 30,
                y: -28,
                NWN: -14,
                WWm: 1
            },
            Vw: 0.02,
            nn: 2,
            mN: 800,
            wnNmM: 800,
            impactaudio: 801,
            wvW: 650,
            damage: 55,
            vNNwv: 22,
            Nwv: 15,
            nvv: 5,
            wwW: 50,
            NWN: 56,
            mWv: 0,
            mw: 0
        }, {
            type: 1,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 0.8,
            mVM: 1,
            Nww: ["audio/hatchet-swing.mp3"],
            nV: {
                src: "img/day-hachet.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 30,
                y: 0,
                WWm: 4,
                x2: 20,
                y2: 10
            },
            Mmv: {
                angle: 0,
                x: 33,
                y: 28,
                NWN: 8,
                WWm: 1.8
            },
            mMM: {
                angle: 0,
                x: 30,
                y: -28,
                NWN: -14,
                WWm: 1
            },
            Vw: 0.02,
            nn: 2,
            mN: 500,
            wnNmM: 500,
            impactaudio: 501,
            wvW: 350,
            damage: 30,
            vNNwv: 7,
            Nwv: 10,
            nvv: 4,
            wwW: 40,
            NWN: 59,
            mWv: 0,
            mw: 0
        }, {
            type: 1,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 0.8,
            mVM: 1,
            Nww: ["audio/axe-swing.mp3"],
            nV: {
                src: "img/day-stone-axe.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 30,
                y: 0,
                WWm: 4,
                x2: 20,
                y2: 10
            },
            Mmv: {
                angle: 0,
                x: 33,
                y: 28,
                NWN: 8,
                WWm: 1.8
            },
            mMM: {
                angle: 0,
                x: 30,
                y: -28,
                NWN: -14,
                WWm: 1
            },
            Vw: 0.05,
            nn: 3,
            mN: 650,
            impactaudio: 651,
            wvW: 550,
            damage: 50,
            vNNwv: 26,
            Nwv: 20,
            nvv: 4,
            wwW: 46,
            NWN: 72,
            mWv: 0,
            mw: 0
        }, {
            type: 3,
            id: 0,
            Nnn: 1,
            Mnv: 0.75,
            vnM: 1,
            mVM: 1,
            Nww: ["audio/spear-shot.mp3"],
            nV: {
                src: "img/day-wood-spear.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 25,
                y: 40
            },
            Mmv: {
                angle: 0,
                x: 10,
                y: 44
            },
            mMM: {
                angle: 0,
                x: 22,
                y: -39
            },
            nWN: [0],
            mmW: 4,
            Vnm: 0.5,
            vWm: 1,
            path: 600,
            damage: 80,
            Nwv: 30,
            Vw: 0.05,
            nwnMw: 2,
            nn: 3,
            mN: 850,
            impactaudio: 100,
            wvW: 100,
            nvv: 15,
            x: -40,
            NWN: 47,
            NnV: 60,
            mWv: 0,
            mw: 0
        }, {
            type: 4,
            id: 0,
            Nnn: 1,
            WnVmv: {
                src: "img/day-wood-arrow1.png",
                W: {
                    m: 0
                },
                x: 50,
                y: 0
            },
            Mnv: 1.08,
            vnM: 1.4,
            mVM: 1,
            Nww: ["audio/bow-shot.mp3"],
            nV: {
                src: "img/day-wood-bow.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 44,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 10,
                y: 44
            },
            mMM: {
                angle: 0,
                x: 40,
                y: -30
            },
            damage: 40,
            Nwv: 10,
            nWN: [0],
            mmW: 3,
            Vnm: 0.75,
            vWm: 1,
            path: 800,
            Vw: 0.5,
            nwnMw: 1,
            nn: 1,
            mN: 1200,
            impactaudio: 120,
            wvW: 100,
            nvv: 8,
            x: -1,
            NWN: 47,
            NnV: -8,
            mWv: 0,
            mw: 0
        }, {
            type: 2,
            id: 0,
            Nnn: 1,
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 43,
                y: -13
            },
            Mnv: 0,
            vnM: 1,
            mVM: 1,
            Nww: ["audio/shotgun-shot.mp3"],
            nV: {
                src: "img/day-shotgun.png",
                W: {
                    m: 0
                },
                x: 60,
                y: 0
            },
            damage: 21,
            Nwv: 20,
            Mmw: 0,
            wWN: 0,
            vVMMM: 500,
            NWn: 3,
            WNN: 4,
            MnN: 3,
            WNw: 0,
            MMmwV: 0,
            WnvMn: 0,
            nWN: [0, 0.1, -0.1, 0.2, -0.2],
            mmW: 2,
            Vnm: 1.1,
            vWm: 1,
            nmnvN: 8,
            reload: 10,
            mmMMw: 1,
            NnV: 58,
            Vw: 1,
            nn: 2,
            mN: 900,
            impactaudio: 901,
            nvv: 0,
            x: 0,
            path: 600,
            NWN: 47,
            mWv: 0,
            mw: 0
        }, {
            type: 2,
            id: 0,
            Nnn: 1,
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            Mnv: 0,
            vnM: 1,
            mVM: 1,
            Nww: ["audio/9mm-shot.mp3"],
            nV: {
                src: "img/day-9mm.png",
                W: {
                    m: 0
                },
                x: 50,
                y: 0
            },
            damage: 28,
            Nwv: 10,
            Mmw: 0,
            wWN: 1,
            vVMMM: 400,
            NWn: 2,
            WNN: 1,
            MnN: 2,
            WNw: 0,
            MMmwV: 0,
            WnvMn: 0,
            nWN: [0],
            mmW: 0,
            Vnm: 1.2,
            vWm: 1,
            nmnvN: 20,
            reload: 22,
            mmMMw: 0,
            NnV: 40,
            Vw: 1,
            nn: 2,
            mN: 400,
            impactaudio: 401,
            nvv: 0,
            x: 0,
            path: 800,
            NWN: 47,
            mWv: 0,
            mw: 0
        }, {
            type: 2,
            id: 0,
            Nnn: 1,
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            Mnv: 0,
            vnM: 1.3,
            mVM: 1,
            Nww: ["audio/desert-eagle-shot.mp3"],
            nV: {
                src: "img/day-desert-eagle.png",
                W: {
                    m: 0
                },
                x: 50,
                y: 0
            },
            damage: 40,
            Nwv: 25,
            Mmw: 0,
            wWN: 1,
            vVMMM: 400,
            NWn: 2,
            WNN: 1,
            MnN: 2,
            WNw: 0,
            MMmwV: 0,
            WnvMn: 0,
            nWN: [0],
            mmW: 0,
            Vnm: 1.4,
            vWm: 1,
            nmnvN: 7,
            reload: 22,
            mmMMw: 0,
            NnV: 40,
            Vw: 1,
            nn: 2,
            mN: 400,
            impactaudio: 401,
            nvv: 0,
            x: 0,
            path: 900,
            NWN: 47,
            mWv: 0,
            mw: 0
        }, {
            type: 2,
            id: 0,
            Nnn: 1,
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 43,
                y: -13
            },
            Mnv: 0,
            vnM: 1,
            mVM: 1,
            Nww: ["audio/ak47-shot.mp3"],
            nV: {
                src: "img/day-AK47.png",
                W: {
                    m: 0
                },
                x: 60,
                y: 0
            },
            damage: 30,
            Nwv: 25,
            Mmw: 0,
            wWN: 2,
            vVMMM: 500,
            NWn: 3,
            WNN: 2,
            MnN: 4,
            WNw: 0,
            MMmwV: 0,
            WnvMn: 0,
            nWN: [0],
            mmW: 1,
            Vnm: 1.4,
            vWm: 1,
            nmnvN: 30,
            reload: 25,
            mmMMw: 0,
            NnV: 58,
            Vw: 1,
            nn: 2,
            mN: 120,
            impactaudio: 121,
            nvv: 0,
            x: 0,
            path: 900,
            NWN: 47,
            mWv: 0,
            mw: 0
        }, {
            type: 2,
            id: 0,
            Nnn: 1,
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 43,
                y: -13
            },
            Mnv: 0,
            vnM: 1,
            mVM: 1,
            Nww: ["audio/sniper-shot.mp3"],
            nV: {
                src: "img/day-sniper.png",
                W: {
                    m: 0
                },
                x: 60,
                y: 0
            },
            damage: 90,
            Nwv: 30,
            Mmw: 0,
            wWN: 2,
            vVMMM: 500,
            NWn: 3,
            WNN: 1,
            MnN: 4,
            WNw: 0,
            MMmwV: 0,
            WnvMn: 0,
            nWN: [0],
            mmW: 1,
            Vnm: 1.5,
            vWm: 1,
            nmnvN: 10,
            reload: 20,
            mmMMw: 0,
            NnV: 70,
            Vw: 1,
            nn: 2,
            mN: 1250,
            impactaudio: 1251,
            nvv: 0,
            x: 0,
            path: 1100,
            NWN: 47,
            mWv: 0,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-raw-steak.png",
                W: {
                    m: 0
                },
                angle: 1,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 20,
            vVv: 30,
            nVv: 0,
            www: 20,
            mNW: -10,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-cooked-steak.png",
                W: {
                    m: 0
                },
                angle: 1,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 4,
            Vw: 0.4,
            nn: 0.8,
            nvv: 0,
            mnv: 200,
            wait: 20,
            vVv: 127,
            nVv: 0,
            www: 80,
            mNW: 0,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-rotten-steak.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 20,
            vVv: 15,
            nVv: 0,
            www: 0,
            mNW: -40,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-orange.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 40,
            nVv: 0,
            www: 10,
            mNW: 0,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-rotten-orange.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 5,
            nVv: 0,
            www: 0,
            mNW: -40,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-hand-medikit.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 55,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 32
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -32
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 25,
            vVv: 0,
            nVv: 0,
            www: 0,
            mNW: 200,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-hand-bandage.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 0,
            nVv: 0,
            www: 0,
            mNW: 60,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-hand-soda.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 30,
            nVv: 0,
            www: 155,
            mNW: 0,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 2,
            id: 0,
            Nnn: 1,
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 43,
                y: -13
            },
            Mnv: 0,
            vnM: 1,
            mVM: 1,
            Nww: ["audio/mp5-shot.mp3"],
            nV: {
                src: "img/day-MP5.png",
                W: {
                    m: 0
                },
                x: 60,
                y: 0
            },
            damage: 18,
            Nwv: 15,
            Mmw: 0,
            wWN: 1,
            vVMMM: 500,
            NWn: 3,
            WNN: 2,
            MnN: 4,
            WNw: 0,
            MMmwV: 0,
            WnvMn: 0,
            nWN: [0],
            mmW: 0,
            Vnm: 1.2,
            vWm: 1,
            nmnvN: 30,
            reload: 26,
            mmMMw: 0,
            NnV: 52,
            Vw: 1,
            nn: 2,
            mN: 100,
            impactaudio: 101,
            nvv: 0,
            x: 0,
            path: 900,
            NWN: 47,
            mw: 0
        }, {
            type: 6,
            id: 0,
            Nnn: 0,
            Mmv: {
                angle: 0,
                x: 22,
                y: 39
            },
            mMM: {
                angle: 0,
                x: 22,
                y: -39
            },
            Vw: 0.05,
            nn: 3,
            wvnVN: 0,
            putableimg: {
                src: "img/day-hand-craft.png",
                W: {
                    m: 0
                }
            },
            MMwvW: {
                src: "img/day-hand-craftpencil.png",
                W: {
                    m: 0
                }
            },
            mWv: 0,
            mw: 0
        }, {
            type: 1,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 0.8,
            mVM: 1,
            Nww: ["audio/pickaxe-swing.mp3"],
            nV: {
                src: "img/day-sulfur-pickaxe.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 20,
                y: 0,
                WWm: 4,
                x2: 20,
                y2: 10
            },
            Mmv: {
                angle: 0,
                x: 33,
                y: 28,
                NWN: 8,
                WWm: 1.8
            },
            mMM: {
                angle: 0,
                x: 30,
                y: -28,
                NWN: -14,
                WWm: 1
            },
            Vw: 0.02,
            nn: 2,
            mN: 800,
            wnNmM: 800,
            impactaudio: 801,
            wvW: 650,
            damage: 65,
            vNNwv: 30,
            Nwv: 15,
            nvv: 5,
            wwW: 50,
            NWN: 56,
            mWv: 0,
            mw: 0
        }, {
            type: 1,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 0.8,
            mVM: 1,
            Nww: ["audio/hammer-swing.mp3"],
            nV: {
                src: "img/day-hammer.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 25,
                y: 0,
                WWm: 4,
                x2: 20,
                y2: 10
            },
            Mmv: {
                angle: 0,
                x: 33,
                y: 28,
                NWN: 8,
                WWm: 1.8
            },
            mMM: {
                angle: 0,
                x: 30,
                y: -28,
                NWN: -14,
                WWm: 1
            },
            Vw: 0.02,
            nn: 2,
            mN: 1100,
            wnNmM: 1100,
            impactaudio: 1101,
            wvW: 950,
            damage: 120,
            vNNwv: 30,
            Nwv: 30,
            nvv: 15,
            wwW: 40,
            NWN: 56,
            mWv: 0,
            mw: 0
        }, {
            type: 1,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-repair-hammer.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 20,
                y: 0,
                WWm: 4,
                x2: 20,
                y2: 10
            },
            Mmv: {
                angle: 0,
                x: 33,
                y: 28,
                NWN: 8,
                WWm: 1.8
            },
            mMM: {
                angle: 0,
                x: 30,
                y: -28,
                NWN: -14,
                WWm: 1
            },
            Vw: 0.02,
            nn: 2,
            mN: 700,
            wnNmM: 700,
            impactaudio: 701,
            wvW: 550,
            damage: 40,
            vNNwv: 15,
            Nwv: 10,
            nvv: 6,
            wwW: 40,
            NWN: 59,
            mWv: 0,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-tomato-soup.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 30,
            vVv: 160,
            nVv: 0,
            www: 40,
            mNW: 0,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-hand-radaway.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 25
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -25
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 30,
            vVv: 0,
            nVv: 255,
            www: 30,
            mNW: 0,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-tomato.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 50,
            nVv: 0,
            www: 10,
            mNW: 0,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-rotten-tomato.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 5,
            nVv: 0,
            www: 0,
            mNW: -40,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 2,
            id: 0,
            Nnn: 1,
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            Mnv: 0,
            vnM: 1,
            mVM: 1,
            Nww: ["audio/crossbow-shot.mp3"],
            nV: {
                src: "img/day-wood-crossbow.png",
                W: {
                    m: 0
                },
                x: 50,
                y: 0
            },
            damage: 50,
            Nwv: 15,
            Mmw: 0,
            wWN: 3,
            vVMMM: 400,
            NWn: 2,
            WNN: 1,
            MnN: 2,
            WNw: 1,
            MMmwV: 0,
            WnvMn: 0,
            nWN: [0],
            mmW: 5,
            Vnm: 0.95,
            vWm: 1,
            nmnvN: 1,
            reload: 8,
            mmMMw: 0,
            NnV: 40,
            Vw: 1,
            nn: 2,
            mN: 400,
            impactaudio: 401,
            nvv: 12,
            x: 0,
            path: 800,
            NWN: 47,
            mWv: 0,
            mw: 0
        }, {
            type: 2,
            id: 0,
            Nnn: 1,
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            Mnv: 0,
            vnM: 1,
            mVM: 1,
            Nww: ["audio/nail-gun-shot.mp3"],
            nV: {
                src: "img/day-nail-gun.png",
                W: {
                    m: 0
                },
                x: 50,
                y: 0
            },
            damage: 6,
            Nwv: 10,
            Mmw: 0,
            wWN: 4,
            vVMMM: 400,
            NWn: 2,
            WNN: 1,
            MnN: 2,
            WNw: 0,
            MMmwV: 0,
            WnvMn: 0,
            nWN: [0],
            mmW: 6,
            Vnm: 1,
            vWm: 1,
            nmnvN: 80,
            reload: 30,
            mmMMw: 0,
            NnV: 52,
            Vw: 1,
            nn: 2,
            mN: 300,
            impactaudio: 301,
            nvv: 0,
            x: 0,
            path: 500,
            NWN: 47,
            mWv: 0,
            mw: 0
        }, {
            type: 2,
            id: 0,
            Nnn: 1,
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 43,
                y: -13
            },
            Mnv: 0,
            vnM: 1,
            mVM: 1,
            Nww: ["audio/shotgun-shot.mp3"],
            nV: {
                src: "img/day-sawed-off-shotgun.png",
                W: {
                    m: 0
                },
                x: 50,
                y: 0
            },
            damage: 28,
            Nwv: 30,
            Mmw: 0,
            wWN: 0,
            vVMMM: 500,
            NWn: 3,
            WNN: 4,
            MnN: 3,
            WNw: 0,
            MMmwV: 0,
            WnvMn: 0,
            nWN: [0, 0.12, -0.12, 0.24, -0.24],
            mmW: 2,
            Vnm: 1.11,
            vWm: 1,
            nmnvN: 8,
            reload: 10,
            mmMMw: 1,
            NnV: 53,
            Vw: 1,
            nn: 2,
            mN: 900,
            impactaudio: 901,
            nvv: 0,
            x: 0,
            path: 400,
            NWN: 47,
            mWv: 0,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-chips.png",
                W: {
                    m: 0
                },
                angle: 1,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 4,
            Vw: 0.4,
            nn: 0.8,
            nvv: 0,
            mnv: 200,
            wait: 20,
            vVv: 90,
            nVv: 0,
            www: 50,
            mNW: 0,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-rotten-chips.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 5,
            nVv: 0,
            www: 0,
            mNW: -40,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 2,
            id: 0,
            Nnn: 1,
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            Mnv: 0,
            vnM: 1,
            mVM: 1,
            Nww: ["audio/laser-pistol-shot.mp3"],
            nV: {
                src: "img/day-laser-pistol.png",
                W: {
                    m: 0
                },
                x: 50,
                y: 0
            },
            damage: 55,
            Nwv: 0,
            Mmw: 1,
            wWN: 5,
            vVMMM: 400,
            NWn: 2,
            WNN: 1,
            MnN: 2,
            WNw: 0,
            MMmwV: 0,
            WnvMn: 0,
            nWN: [0],
            mmW: 7,
            Vnm: 1.45,
            vWm: 2,
            nmnvN: 12,
            reload: 22,
            mmMMw: 0,
            NnV: 50,
            Vw: 1,
            nn: 2,
            mN: 400,
            impactaudio: 401,
            nvv: 0,
            x: 0,
            path: 900,
            NWN: 47,
            mWv: 0,
            mw: 0
        }, {
            type: 1,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 0.8,
            mVM: 1,
            Nww: ["audio/axe-swing.mp3"],
            nV: {
                src: "img/day-sulfur-axe.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 30,
                y: 0,
                WWm: 4,
                x2: 20,
                y2: 10
            },
            Mmv: {
                angle: 0,
                x: 33,
                y: 28,
                NWN: 8,
                WWm: 1.8
            },
            mMM: {
                angle: 0,
                x: 30,
                y: -28,
                NWN: -14,
                WWm: 1
            },
            Vw: 0.05,
            nn: 3,
            mN: 650,
            impactaudio: 651,
            wvW: 550,
            damage: 50,
            vNNwv: 30,
            Nwv: 20,
            nvv: 4,
            wwW: 46,
            NWN: 72,
            mWv: 0,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-hand-joystick.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 2,
            vVv: 0,
            nVv: 0,
            www: 0,
            mNW: 0,
            vVm: 0,
            mWv: 0,
            mw: 1
        }, {
            type: 2,
            id: 0,
            Nnn: 1,
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            Mnv: 0,
            vnM: 1,
            mVM: 1,
            Nww: ["audio/laser-submachine-shot.mp3"],
            nV: {
                src: "img/day-laser-submachine.png",
                W: {
                    m: 0
                },
                x: 50,
                y: 0
            },
            damage: 45,
            Nwv: 0,
            Mmw: 1,
            wWN: 5,
            vVMMM: 500,
            NWn: 3,
            WNN: 2,
            MnN: 4,
            WNw: 0,
            MMmwV: 0,
            WnvMn: 0,
            nWN: [0],
            mmW: 7,
            Vnm: 1.45,
            vWm: 2,
            nmnvN: 30,
            reload: 25,
            mmMMw: 0,
            NnV: 54,
            Vw: 1,
            nn: 2,
            mN: 160,
            impactaudio: 161,
            nvv: 0,
            x: 0,
            path: 900,
            NWN: 47,
            mWv: 0,
            mw: 0
        }, {
            type: 3,
            id: 0,
            Nnn: 1,
            nV: {
                src: "img/day-hand-grenade.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 25,
                y: 50
            },
            Mmv: {
                angle: 0,
                x: 10,
                y: 44
            },
            mMM: {
                angle: 0,
                x: 22,
                y: -39
            },
            nWN: [0],
            mmW: 8,
            Vnm: 0.4,
            vWm: 1,
            path: 380,
            damage: 15,
            Nwv: 5,
            Vw: 0.05,
            nwnMw: 2,
            nn: 3,
            mN: 850,
            impactaudio: 100,
            wvW: 100,
            nvv: 15,
            x: -50,
            NWN: 47,
            NnV: 25,
            mWv: 0,
            mw: 0
        }, {
            type: 1,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-super-hammer.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 25,
                y: 5,
                WWm: 4,
                x2: 20,
                y2: 10
            },
            Mmv: {
                angle: 0,
                x: 33,
                y: 28,
                NWN: 8,
                WWm: 1.8
            },
            mMM: {
                angle: 0,
                x: 30,
                y: -28,
                NWN: -14,
                WWm: 1
            },
            Vw: 0.02,
            nn: 2,
            mN: 1100,
            wnNmM: 1100,
            impactaudio: 1101,
            wvW: 950,
            damage: 1000,
            vNNwv: 255,
            Nwv: 30,
            nvv: 15,
            wwW: 40,
            NWN: 56,
            mWv: 0,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-hand-ghoul-drug.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 13
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 30,
            vVv: 0,
            nVv: 0,
            www: 0,
            mNW: -10,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-mushroom1.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 0,
            nVv: 0,
            www: 10,
            mNW: -20,
            vVm: 12,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-mushroom2.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 40,
            nVv: 0,
            www: 10,
            mNW: 0,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-mushroom3.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 40,
            nVv: 0,
            www: 10,
            mNW: 0,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-rotten-mushroom1.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 0,
            nVv: 0,
            www: 0,
            mNW: -40,
            vVm: 8,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-rotten-mushroom2.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 5,
            nVv: 0,
            www: 0,
            mNW: -40,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-rotten-mushroom3.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 5,
            nVv: 0,
            www: 0,
            mNW: -40,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-hand-lapadoine.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 13
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 30,
            vVv: 0,
            nVv: 0,
            www: 0,
            mNW: -10,
            vVm: 2,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-pumpkin.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 25
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -25
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 20,
            vVv: 90,
            nVv: 0,
            www: 20,
            mNW: 0,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-rotten-pumpkin.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 25
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -25
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 30,
            nVv: 0,
            www: 0,
            mNW: -40,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-hand-antidote.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 13
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -13
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 30,
            vVv: 0,
            nVv: 0,
            www: 0,
            mNW: 50,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-acorn.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 10
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -10
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 15,
            nVv: 0,
            www: 0,
            mNW: 0,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            Mnv: 0,
            vnM: 1,
            mVM: 3,
            Nww: 1,
            nV: {
                src: "img/day-hand-rotten-acorn.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 10
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -10
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 2,
            nVv: 0,
            www: 0,
            mNW: -20,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 2,
            id: 0,
            Nnn: 1,
            Mmv: {
                angle: 0,
                x: 32,
                y: 15
            },
            mMM: {
                angle: 0,
                x: 43,
                y: -13
            },
            Mnv: 0,
            vnM: 1,
            mVM: 1,
            Nww: ["audio/laser-sniper-shot.mp3"],
            nV: {
                src: "img/day-laser-sniper.png",
                W: {
                    m: 0
                },
                x: 55,
                y: 0
            },
            damage: 100,
            Nwv: 0,
            Mmw: 1,
            wWN: 5,
            vVMMM: 500,
            NWn: 3,
            WNN: 1,
            MnN: 4,
            WNw: 0,
            MMmwV: 0,
            WnvMn: 0,
            nWN: [0],
            mmW: 7,
            Vnm: 1.5,
            vWm: 2,
            nmnvN: 10,
            reload: 20,
            mmMMw: 0,
            NnV: 70,
            Vw: 1,
            nn: 2,
            mN: 1250,
            impactaudio: 1251,
            nvv: 0,
            x: 0,
            path: 1100,
            NWN: 47,
            mWv: 0,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-hand-christmas-cake.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 10
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -10
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 127,
            nVv: 0,
            www: 30,
            mNW: 0,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-hand-rotten-christmas-cake.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 10
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -10
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 10,
            nVv: 0,
            www: 0,
            mNW: -20,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-hand-gingerbread-man.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 10
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -10
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 20,
            nVv: 0,
            www: 20,
            mNW: 40,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-hand-rotten-gingerbread-man.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 10
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -10
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 10,
            nVv: 0,
            www: 0,
            mNW: -20,
            vVm: 0,
            mWv: 1,
            mw: 0
        }, {
            type: 1,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-sugar-can.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 30,
                y: 0,
                WWm: 4,
                x2: 20,
                y2: 10
            },
            Mmv: {
                angle: 0,
                x: 33,
                y: 28,
                NWN: 8,
                WWm: 1.8
            },
            mMM: {
                angle: 0,
                x: 30,
                y: -28,
                NWN: -14,
                WWm: 1
            },
            Vw: 0.02,
            nn: 2,
            wnNmM: 650,
            mN: 650,
            impactaudio: 651,
            wvW: 550,
            damage: 60,
            vNNwv: 38,
            Nwv: 20,
            nvv: 16,
            wwW: 50,
            NWN: 56,
            mWv: 0,
            mw: 0
        }, {
            type: 5,
            id: 0,
            Nnn: 0,
            nV: {
                src: "img/day-hand-sugar-can-bow.png",
                W: {
                    m: 0
                },
                angle: 0,
                x: 50,
                y: 0
            },
            Mmv: {
                angle: 0,
                x: 32,
                y: 10
            },
            mMM: {
                angle: 0,
                x: 32,
                y: -10
            },
            NWn: 3,
            Vw: 0.02,
            nn: 2,
            nvv: 0,
            mnv: 200,
            wait: 10,
            vVv: 30,
            nVv: 0,
            www: 50,
            mNW: 0,
            vVm: 0,
            mWv: 1,
            mw: 0
        }],
        nvmVM: {
            w: 24,
            WVv: 24
        },
        wwW: 38,
        NVWWn: 40,
        VvmMw: 36,
        WmNwn: 36,
        vvvvW: 36,
        nNV: 36,
        speed: 0.23,
        MvnwW: 0.35,
        vVnMV: 0.08,
        VnMVn: 0.08,
        mmMnw: 0.08,
        NVMMm: 0.05,
        MNNwV: 0,
        remove: 1000,
        z: 0,
        health: 0,
        vWMvM: 8,
        nWV: 0.15,
        WmW: -1
    }, {
        nvmVM: {
            w: 0,
            WVv: 0
        },
        wwW: 50,
        VvmMw: 0,
        WmNwn: 0,
        vvvvW: 0,
        nNV: 0,
        speed: 0.2,
        MNNwV: 2,
        remove: 1000,
        z: 0,
        health: 0,
        nWV: 0.1,
        WmW: 20000
    }, {
        nvmVM: {
            w: 0,
            WVv: 0
        },
        wwW: 4,
        VvmMw: 0,
        WmNwn: 0,
        vvvvW: 0,
        nNV: 0,
        speed: 1,
        MNNwV: 2,
        remove: 1000,
        z: 0,
        health: 0,
        nWV: 0.2,
        WmW: -1
    }, {
        nvmVM: {
            w: 0,
            WVv: 0
        },
        VvmMw: 0,
        WmNwn: 0,
        vvvvW: 0,
        nNV: 0,
        speed: 0,
        health: 0,
        remove: 1000,
        z: 0,
        nWV: 0.2,
        MNNwV: 1,
        WmW: -1
    }, {
        nvmVM: {
            w: 0,
            WVv: 0
        },
        VvmMw: 0,
        WmNwn: 0,
        vvvvW: 0,
        nNV: 0,
        speed: 0,
        health: 0,
        remove: 1000,
        z: 0,
        nWV: 0.2,
        MNNwV: 1,
        WmW: -1
    }, {
        nvmVM: {
            w: 0,
            WVv: 0
        },
        VvmMw: 0,
        WmNwn: 0,
        vvvvW: 0,
        nNV: 0,
        speed: 0,
        health: 0,
        remove: 1000,
        z: 0,
        nWV: 0.2,
        MNNwV: 1,
        WmW: -1
    }, {
        nvmVM: {
            w: 0,
            WVv: 0
        },
        VvmMw: 0,
        WmNwn: 0,
        vvvvW: 0,
        nNV: 0,
        speed: 0,
        health: 0,
        remove: 1000,
        z: 0,
        nWV: 0.2,
        MNNwV: 1,
        WmW: -1
    }, {
        speed: 0.7,
        health: 0,
        z: 0,
        nWV: 0.2
    }, {
        nvmVM: {
            w: 24,
            WVv: 24
        },
        wwW: 38,
        NVWWn: 40,
        VvmMw: 36,
        WmNwn: 36,
        vvvvW: 36,
        nNV: 36,
        speed: 0,
        MNNwV: 0,
        remove: 1000,
        z: 1,
        health: 0,
        nWV: 0.15,
        WmW: 1800000
    }, {
        nvmVM: {
            w: 24,
            WVv: 24
        },
        wwW: 38,
        NVWWn: 40,
        VvmMw: 36,
        WmNwn: 36,
        vvvvW: 36,
        nNV: 36,
        speed: 0,
        MNNwV: 0,
        remove: 1000,
        z: 1,
        health: 0,
        nWV: 0.15,
        WmW: 1800000
    }, {
        nvmVM: {
            w: 24,
            WVv: 24
        },
        wwW: 38,
        NVWWn: 40,
        VvmMw: 36,
        WmNwn: 36,
        vvvvW: 36,
        nNV: 36,
        speed: 0,
        MNNwV: 0,
        remove: 1000,
        z: 1,
        health: 0,
        nWV: 0.15,
        WmW: 1800000
    }, {
        nvmVM: {
            w: 24,
            WVv: 24
        },
        wwW: 38,
        NVWWn: 40,
        VvmMw: 36,
        WmNwn: 36,
        vvvvW: 36,
        nNV: 36,
        speed: 0,
        MNNwV: 0,
        remove: 1000,
        z: 1,
        health: 0,
        nWV: 0.15,
        WmW: 1800000
    }, {
        nvmVM: {
            w: 24,
            WVv: 24
        },
        vVwMW: [{
            src: "img/day-explosion0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-explosion1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-explosion2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-explosion3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-explosion4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-explosion5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-explosion6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-explosion7.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-explosion8.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-explosion9.png",
            W: {
                m: 0
            }
        }],
        wwW: 38,
        NVWWn: 40,
        VvmMw: 36,
        WmNwn: 36,
        vvvvW: 36,
        nNV: 36,
        speed: 0,
        MNNwV: 2,
        remove: 0,
        z: 1,
        health: 64000,
        nWV: 0.15,
        WmW: 1500
    }, {
        nvmVM: {
            w: 24,
            WVv: 24
        },
        wwW: 38,
        NVWWn: 40,
        VvmMw: 36,
        WmNwn: 36,
        vvvvW: 36,
        nNV: 36,
        speed: 0.23,
        MvnwW: 0.35,
        vVnMV: 0.08,
        NVMMm: 0.05,
        MNNwV: 0,
        remove: 1000,
        z: 0,
        health: 0,
        vWMvM: 8,
        nWV: 0.15,
        WmW: -1
    }];

    function MVwWV(vV) {
        this.mvN = 0;
        this.mysocketid = 0;
        this.id = 0;
        this.type = vV;
        this.nvN = 0;
        this.angle = 0;
        this.MVWwV = 0;
        this.NvMVn = 0;
        this.vnmWn = 0;
        this.state = 0;
        this.nNN = 0;
        this.Vvm = 0;
        this.x = 0;
        this.y = 0;
        this.rx = 0;
        this.ry = 0;
        this.wnw = -1;
        this.WVM = 0;
        this.WWwMm = 0;
        this.Vmnvm = 0;
        this.place = 0;
        this.vv = 0;
        this.speed = 0;
        this.update = 0;
        this.vwW = 0;
        this.VMn = 0;
        this.nWM = 0;
        this.Mmm = 0;
        this.WvN = 0;
        this.mNW = 0;
        this.wmm = 0;
        this.Mnm = 0;
        this.Vw = 0;
        this.NnW = 0;
        this.NWm = [];
        this.NM = null;
        for (var place = 0; place < 10; place++)
            this.NWm.push({
                c: 0,
                V: 0,
                MNMWN: 0,
                nMNwv: 0,
                mMn: 0,
                r: 0
            });
        this.nWV = 0.1;
    };;

    function mvMMV(MW, mysocketid, mvN, Wn, vV, Wv, wM, wnw, WVM, nNN, wW, Mnn, time) {
        MW.mysocketid = mysocketid;
        MW.mvN = mvN;
        MW.id = Wn;
        MW.MVWwV = WNW.wNNMM(MW.angle, ((wW * 2) * win.Math.PI) / 255);
        MW.state = Mnn;
        MW.wnw = wnw;
        MW.WVM = WVM;
        MW.nNN = nNN;
        if (MW.update === 0) {
            var WvW = VVM[vV];
            MW.speed = WvW.speed;
            MW.angle = MW.MVWwV;
            MW.x = Wv;
            MW.y = wM;
            MW.z = WvW.z;
            MW.nWV = WvW.nWV;
            MW.rx = Wv;
            MW.ry = wM;
            MW.timeStep = time;
            MW.place = win.Math.floor(wM / Mw.wmn);
            MW.vv = win.Math.floor(Wv / Mw.wmn);
            MW.VMn = 0;
            MW.nWM = 0;
            MW.Mmm = 0;
            MW.nMW = 0;
            MW.WvN = 0;
            MW.mNW = 0;
            MW.wmm = 0;
            MW.Vw = 0;
            MW.NnW = 0;
            MW.Mnm = 0;
            MW.Vvm = 0;
            MW.nvN = 0;
            MW.NM = null;
            var vnV = WvW.vnV;
            if (vnV !== win.undefined)
                vnV(MW);
        }
        var wW = Vwv.angle(MW.rx, MW.ry, wnw, WVM);
        MW.NvMVn = win.Math.cos(wW);
        MW.vnmWn = win.Math.sin(wW);
        MW.update = 1;
    };;
    var VNWvV = (function() {
        function MMvvm(M) {
            if (M.border === M.size) {
                M.nnN[M.size] = M.size;
                M.vNnVw[M.size] = M.size;
                M.size++;
            }
            return M.nnN[M.border++];
        };;

        function vWMMv(M) {
            if (M.border < M.size)
                return M.nnN[M.border++];
            return -1;
        };;

        function nwnNm(M, WMwNN) {
            M.border--;
            var NNMwv = M.nnN[M.border];
            M.nnN[M.border] = M.nnN[WMwNN];
            M.nnN[WMwNN] = NNMwv;
        };;

        function nwVwv(M, WMWmm) {
            M.border--;
            var NNMwv = M.nnN[M.border];
            var wMmvn = M.vNnVw[WMWmm];
            M.nnN[M.border] = WMWmm;
            M.nnN[wMmvn] = NNMwv;
            M.vNnVw[NNMwv] = wMmvn;
            M.vNnVw[WMWmm] = M.border;
        };;

        function VNWvV(wMv) {
            this.size = wMv;
            this.border = 0;
            this.nnN = [];
            this.vNnVw = [];
            for (var place = 0; place < wMv; place++) {
                this.nnN[place] = place;
                this.vNnVw[place] = place;
            }
        };;

        function WnVvN(wMv) {
            var vWM = new VNWvV(wMv);
            var nnN = vWM.nnN;
            var VnMNn = new win.Array(wMv);
            this.length = 0;
            this.reset = function vision() {
                vWM.border = 0;
                this.length = 0;
            };
            this.add = function vmMVw(vMV) {
                VnMNn[MMvvm(vWM)] = vMV;
                this.length++;
            };
            this.remove = function NMM(vMV) {
                for (var place = 0; place < this.length; place++) {
                    if (VnMNn[nnN[place]] === vMV) {
                        nwnNm(vWM, place);
                        this.length--;
                        return;
                    }
                }
            };
            this.get = function wWm(place) {
                return VnMNn[nnN[place]];
            };
        };;

        function wVmWW(wMv) {
            var vWM = new VNWvV(wMv);
            var nnN = vWM.nnN;
            var VnMNn = new win.Array(wMv);
            var place = 0;
            var wnVvv = [];
            for (place = 0; place < wMv; place++)
                wnVvv[place] = -1;
            this.length = 0;
            this.reset = function vision() {
                vWM.border = 0;
                this.length = 0;
            };
            this.add = function vmMVw(vMV) {
                var mv = MMvvm(vWM);
                VnMNn[mv] = vMV;
                wnVvv[vMV] = vWM.border - 1;
                this.length++;
            };
            this.remove = function NMM(vMV) {
                var mv = wnVvv[vMV];
                if (mv === -1)
                    return;
                wnVvv[vMV] = -1;
                nwnNm(vWM, mv);
                this.length--;
                if (this.length > 0)
                    wnVvv[VnMNn[nnN[mv]]] = mv;
            };
            this.get = function wWm(place) {
                return VnMNn[nnN[place]];
            };
        };;
        return {
            VNWvV: VNWvV,
            wVmWW: wVmWW,
            WnVvN: WnVvN,
            vWMMv: vWMMv,
            MMvvm: MMvvm,
            nwVwv: nwVwv,
            nwnNm: nwnNm
        };
    })();
    var NnnMN = (function() {
        function wMWWW(WVWWv) {
            var nMNwv = 2147483648;
            var WVm = 1103515245;
            var WNn = 12345;
            var Mnn = WVWWv ? WVWWv : win.Math.floor(win.Math.random() * (nMNwv - 1));
            this.vnV = function(WVWWv) {
                Mnn = WVWWv ? WVWWv : win.Math.floor(win.Math.random() * (nMNwv - 1));
            };
            this.get = function() {
                Mnn = ((WVm * Mnn) + WNn) % nMNwv;
                return Mnn / nMNwv;
            };
        };;
        return {
            wMWWW: wMWWW
        };
    })();
    var nVvwv = (function() {
        function MvWmM(WwN, NvNNM, vVmmm, MMM, VWmWN) {
            var WnWnN = MMM;
            var nmnVv = WwN[vVmmm];
            var wWNMV = WwN[vVmmm];
            WwN[vVmmm] = WwN[VWmWN];
            WwN[VWmWN] = wWNMV;
            for (var VwvNN = MMM; VwvNN < VWmWN; VwvNN++) {
                if (NvNNM(WwN[VwvNN], nmnVv) <= 0) {
                    var wWNMV = WwN[VwvNN];
                    WwN[VwvNN] = WwN[WnWnN];
                    WwN[WnWnN] = wWNMV;
                    WnWnN++;
                }
            }
            var wWNMV = WwN[VWmWN];
            WwN[VWmWN] = WwN[WnWnN];
            WwN[WnWnN] = wWNMV;
            return WnWnN;
        };;

        function nMNWM(WwN, NvNNM, MMM, VWmWN) {
            var vVmmm = 0;
            if (MMM < VWmWN) {
                vVmmm = MMM + win.Math.ceil((VWmWN - MMM) * 0.5);
                NMmnN = MvWmM(WwN, NvNNM, vVmmm, MMM, VWmWN);
                nMNWM(WwN, NvNNM, MMM, NMmnN - 1);
                nMNWM(WwN, NvNNM, NMmnN + 1, VWmWN);
            }
        };;

        function MvvmM(WwN, NvNNM) {
            try {
                nMNWM(WwN, NvNNM, 0, WwN.length - 1);
            } catch (vNn) {
                WwN.sort(NvNNM);
            }
        };;
        return {
            sort: MvvmM
        };
    })();
    var vnwMV = (function() {
        var NMW = 0;
        var vvvMN = {
            mNVvw: [NMW++, "en"],
            mvvwW: [NMW++, "ru"],
            MVvMW: [NMW++, "sp"],
            wVwMW: [NMW++, "fr"],
            WWWmw: [NMW++, "de"],
            mWVNW: [NMW++, "it"],
            wnvwM: [NMW++, "pl"],
            NNNWN: [NMW++, "pt"]
        };
        var NNW = vvvMN.mNVvw;
        var VNWww = NNW[0];
        var VmvWv = [];
        for (var place = 0; place < NMW; place++)
            VmvWv[place] = [];
        var NWNnM = vvvMN.mNVvw;

        function nMmMN(wnWwm) {
            NNW = wnWwm;
            vnwMV.lang = NNW;
            VNWww = NNW[0];
            clint.setItem("lang", win.JSON.stringify(NNW));
        };;

        function wWm(Wn) {
            if ((VmvWv[VNWww] === win.undefined) || (VmvWv[VNWww][Wn] === win.undefined))
                return VmvWv[NWNnM[0]][Wn];
            else
                return VmvWv[VNWww][Wn];
        };;

        function VnvmM(Wn) {
            var NvV;
            if ((VmvWv[VNWww] === win.undefined) || (VmvWv[VNWww][Wn] === win.undefined))
                wmwww = VmvWv[NWNnM][Wn];
            else
                wmwww = VmvWv[VNWww][Wn];
            for (var place = 1; place < arguments.length; place++)
                wmwww[0] = wmwww[0].replace("%d", arguments[place]);
            return wmwww;
        };;

        function NvMWn(vNvWn) {
            for (var place = 0; place < vNvWn.length; place++)
                VmvWv[VNWww][place] = [vNvWn[place]];
        };;

        function MNVVN(wnWwm, callback) {
            nMmMN(wnWwm);
            if (VmvWv[wnWwm[0]].length !== 0) {
                if (callback !== win.undefined)
                    callback();
                return;
            }
            var Vmn = new win.XMLHttpRequest;
            Vmn.open("GET", ("json/lang" + wnWwm[1]) + ".json", true);
            Vmn.onreadystatechange = function() {
                if ((Vmn.readyState === 4) && (this.status === 200)) {
                    NvMWn(win.JSON.parse(this.NWMnMvN));
                    if (callback !== win.undefined)
                        callback();
                }
            };
            Vmn.send();
        };;

        function vnV(vNvWn, nVnNv, callback) {
            if (nVnNv !== win.undefined)
                NWNnM = nVnNv;
            if (vNvWn !== win.undefined) {
                var mWN = VNWww;
                VNWww = NWNnM[0];
                NvMWn(vNvWn);
                VNWww = mWN;
            }
            var WVNNM = clint.getItem("lang");
            if (WVNNM === null) {
                var vnmnw = win.navigator.language || win.navigator.userLanguage;
                switch (vnmnw) {
                    case "ru":
                        NNW = vvvMN.mvvwW;
                        break;
                    case "en":
                        NNW = vvvMN.mNVvw;
                        break;
                    case "es":
                        NNW = vvvMN.MVvMW;
                        break;
                    case "fr":
                        NNW = vvvMN.wVwMW;
                        break;
                    case "it":
                        NNW = vvvMN.mWVNW;
                        break;
                    case "pl":
                        NNW = vvvMN.wnvwM;
                        break;
                    case "de":
                        NNW = vvvMN.WWWmw;
                        break;
                    case "pt":
                        NNW = vvvMN.NNNWN;
                        break;
                }
            } else
                NNW = win.JSON.parse(WVNNM);
            MNVVN(NNW, callback);
        };;
        return {
            languages: vvvMN,
            lang: NNW,
            get: wWm,
            VnvmM: VnvmM,
            vnV: vnV,
            MNVVN: MNVVN
        };
    })();
    var keys = (function() {
        var VVvvM = "0";
        var WWWNw = "1";
        var mwN = 0;
        var mvNNW = 1;
        var key_a = 65;
        var key_d = 68;
        var key_w = 87;
        var key_s = 83;
        var numpad4 = 37;
        var numpad6 = 39;
        var numpad8 = 38;
        var numpad2 = 40;
        var keyshift = 16;
        var VNW = (new win.Array(255)).fill(mwN);
        var MVvNV = null;

        function VmMnn() {
            if (MVvNV === WWWNw)
                return 1;
            else
                return 0;
        };;

        function WwmNV() {
            if (MVvNV === VVvvM)
                return 1;
            else
                return 0;
        };;

        function azer() {
            key_a = 81;
            key_d = 68;
            key_w = 90;
            key_s = 83;
            clint.setItem("keyboardMap", WWWNw);
            MVvNV = WWWNw;
        };;

        function wasd() {
            key_a = 65;
            key_d = 68;
            key_w = 87;
            key_s = 83;
            clint.setItem("keyboardMap", VVvvM);
            MVvNV = VVvvM;
        };;

        function WvMvV(Nv) {
            var nMm = win.Math.min(Nv.charCode || Nv.keyCode, 255);
            VNW[nMm] = mwN;
        };;

        function mwMVV(Nv) {
            var nMm = win.Math.min(Nv.charCode || Nv.keyCode, 255);
            if ((nMm === key_a) || (nMm === numpad4))
                NnvmV();
            else if ((nMm === key_w) || (nMm === numpad8))
                WNwVV();
            else if ((nMm === key_s) || (nMm === numpad2))
                MWnmw();
            else if ((nMm === key_d) || (nMm === numpad6))
                mWnvN();
            VNW[nMm] = mvNNW;
            return nMm;
        };;

        function NnvmV() {
            VNW[key_d] = mwN;
            VNW[numpad6] = mwN;
        };;

        function mWnvN() {
            VNW[key_a] = mwN;
            VNW[numpad4] = mwN;
        };;

        function MWnmw() {
            VNW[key_w] = mwN;
            VNW[numpad8] = mwN;
        };;

        function WNwVV() {
            VNW[key_s] = mwN;
            VNW[numpad2] = mwN;
        };;

        function leftgo() {
            return VNW[key_a] || VNW[numpad4];
        };;

        function rightgo() {
            return VNW[key_d] || VNW[numpad6];
        };;

        function downgo() {
            return VNW[key_s] || VNW[numpad2];
        };;

        function straightgo() {
            return VNW[key_w] || VNW[numpad8];
        };;

        function shiftgo() {
            return VNW[keyshift];
        };;

        function nwNNv(WmVNW) {
            return VNW[WmVNW];
        };;

        function WwnNN() {
            VNW[key_d] = mwN;
            VNW[numpad6] = mwN;
            VNW[key_a] = mwN;
            VNW[numpad4] = mwN;
            VNW[key_w] = mwN;
            VNW[numpad8] = mwN;
            VNW[key_s] = mwN;
            VNW[numpad2] = mwN;
        };;

        function VmwWV() {
            this.keyCode = 0;
            this.charCode = 0;
            this.altKey = false;
            this.ctrlKey = false;
            this.preventDefault = function() {};
        };;
        MVvNV = clint.getItem("keyboardMap");
        if (MVvNV === null) {
            var nVmWN = win.navigator.language || win.navigator.userLanguage;
            if ((nVmWN === "fr") || (nVmWN === "fr-FR"))
                azer();
            else
                wasd();
        } else if (MVvNV === WWWNw)
            azer();
        else
            wasd();
        return {
            azer: azer,
            wasd: wasd,
            WvMvV: WvMvV,
            mwMVV: mwMVV,
            WwnNN: WwnNN,
            leftgo: leftgo,
            rightgo: rightgo,
            downgo: downgo,
            straightgo: straightgo,
            VmMnn: VmMnn,
            WwmNV: WwmNV,
            shiftgo: shiftgo,
            nwNNv: nwNNv,
            VmwWV: VmwWV
        };
    })();
    var audio = (function() {
        var WMNnN = 30000;
        var nnnMV = 300;
        win.AudioContext = win.AudioContext || win.webkitAudioContext;
        var NVNWw = new win.AudioContext;
        if (!NVNWw.createGain)
            NVNWw.createGain = NVNWw.vVWMM;
        VvNWN = null;
        WVVnV = null;
        mvWnN = [];
        MmVnn = null;
        NnwNv = null;

        function nmwNW() {
            return MmVnn;
        };;

        function nnnww() {
            VvNWN = NVNWw.createMediaStreamDestination();
            WVVnV = new win.MediaRecorder(VvNWN.stream);
            WVVnV.ondataavailable = function(Nv) {
                mvWnN.push(Nv.data);
            };
            WVVnV.onstop = function(Nv) {
                var VwNMM = win.JSON.parse('{ "type" : "audio/ogg; codecs=opus" }');
                NnwNv = new win.Blob(mvWnN, VwNMM);
                MmVnn = win.URL.createObjectURL(NnwNv);
            };
        };;

        function nVvwn() {
            NnwNv = null;
            MmVnn = null;
            mvWnN = [];
            WVVnV.start();
        };;

        function mvnWw() {
            WVVnV.stop();
        };;
        var vvV = {
            VWVWW: 1,
            nNmMV: 1
        };
        try {
            var vW = clint.getItem("isFx");
            if (vW !== null)
                vvV.VWVWW = win.Number(vW);
            else if (vNv === 1)
                vvV.VWVWW = 0;
            vW = clint.getItem("isAudio");
            if (vW !== null)
                vvV.nNmMV = win.Number(vW);
            else if (vNv === 1)
                vvV.nNmMV = 0;
        } catch (vNn) {
            if (vNv === 1) {
                vvV.VWVWW = 0;
                vvV.nNmMV = 0;
            }
        }

        function Vnwmn(vW) {
            if ((vW === 0) && (vvV.nNmMV !== vW)) {
                for (var mmnNv in audio.wMm) {
                    var wMm = audio.wMm[mmnNv];
                    vWwvv(wMm);
                }
            }
            vvV.nNmMV = vW;
            clint.setItem("isAudio", "" + vW);
        };;

        function wNnMM(vW) {
            if ((vW === 0) && (vvV.VWVWW !== vW)) {
                for (var Nnnmm in audio.ww) {
                    var ww = audio.ww[Nnnmm];
                    vWwvv(ww);
                }
            }
            vvV.VWVWW = vW;
            clint.setItem("isFx", "" + vW);
        };;

        function VnV(ww, VwV, NWN, NwnmN) {
            if (NWN > nnnMV)
                return;
            VwV = (1 - (NWN / nnnMV)) * VwV;
            ww.volume = VwV;
            MMwVn(ww, 0, NwnmN);
            ww.mnN = 0;
        };;

        function mmn(mMm, VwV, nMnwM, ww) {
            this.url = mMm;
            this.buffer = null;
            this.source = null;
            this.m = 0;
            this.mnN = 0;
            this.mwnnM = null;
            this.loop = nMnwM;
            this.volume = 1;
            this.wNvnw = -1;
            if (VwV !== win.undefined)
                this.volume = VwV;
            this.vVNVm = -1;
            this.ww = 0;
            if (ww === 1)
                this.ww = 1;
            this.Nvmvn = 0;
            this.wNnwn = 0;
            this.MNnVm = 0;
            this.start = 0;
            this.nvnWn = 0;
        };;

        function WWVVN(Nww, vW) {
            Nww.mwnnM.gain.value = vW;
            Nww.volume = vW;
        };;

        function vWwvv(Nww) {
            if (Nww.mnN === 1) {
                Nww.mnN = 0;
                Nww.wNvnw = -1;
                Nww.source.stop();
                win.console.log("Stop", Nww.url);
            }
        };;

        function MmwVw(Nww, nnW, WMw) {
            if (Nww.vVNVm !== -1)
                Nww.volume = Nww.vVNVm;
            Nww.Nvmvn = 0;
            Nww.wNnwn = nnW;
            Nww.MNnVm = WMw;
            win.console.log("FADE", Nww.url);
        };;

        function MMwVn(Nww, nnW, NwnmN) {
            if (Nww.ww === 0) {
                if (vvV.nNmMV === 0)
                    return;
            } else if (vvV.VWVWW === 0)
                return;
            if (Nww.mnN === 1) {
                if (((Nww.wNvnw !== -1) && (Nww.wNnwn === 0)) && ((VmN - Nww.wNvnw) > WMNnN)) {
                    vWwvv(Nww);
                    return;
                }
                if (Nww.wNnwn > 0) {
                    Nww.Nvmvn = win.Math.min(Nww.Nvmvn + mV, Nww.wNnwn);
                    var VwV = win.Math.max(0, win.Math.min(1, Nww.volume + (win.Math.cos(((1 - (Nww.Nvmvn / Nww.wNnwn)) * 0.5) * win.Math.PI) * Nww.MNnVm)));
                    Nww.mwnnM.gain.value = VwV;
                    Nww.vVNVm = VwV;
                    if (Nww.Nvmvn === Nww.wNnwn) {
                        Nww.volume = VwV;
                        Nww.vVNVm = -1;
                        Nww.wNnwn = 0;
                        Nww.Nvmvn = 0;
                        if (Nww.volume === 0)
                            Nww.wNvnw = VmN;
                        else
                            Nww.wNvnw = -1;
                    }
                }
                return;
            }
            if (((Nww.wNnwn === 0) && (Nww.Nvmvn === 0)) && (Nww.volume === 0))
                return;
            if (Nww.m !== 1) {
                vmv(Nww);
                return;
            }
            var WNm = NVNWw.createBufferSource();
            var mwnnM = NVNWw.createGain();
            Nww.source = WNm;
            Nww.mwnnM = mwnnM;
            WWVVN(Nww, Nww.volume);
            WNm.buffer = Nww.buffer;
            WNm.connect(mwnnM);
            if (VvNWN !== null)
                WNm.connect(VvNWN);
            mwnnM.connect(NVNWw.destination);
            if (Nww.loop === true)
                WNm.loop = Nww.loop;
            if (!WNm.stop)
                WNm.stop = WNm.vwwnN;
            if (!WNm.start)
                WNm.start = WNm.vWwMw;
            Nww.source.start(((NwnmN === win.undefined) ? 0 : NwnmN) + NVNWw.currentTime, (nnW === win.undefined) ? 0 : nnW);
            Nww.mnN = 1;
            Nww.start = VmN;
            win.console.log("Start", Nww.url, Nww.Nvmvn, Nww.wNnwn, nnW);
        };;

        function vmv(Nww) {
            if (Nww.m === 2)
                return;
            win.console.log("LOAD", Nww);
            var VNvNM = new win.XMLHttpRequest;
            VNvNM.open('GET', Nww.url, true);
            VNvNM.responseType = 'arraybuffer';
            VNvNM.onload = function() {
                NVNWw.decodeAudioData(VNvNM.response, function(WNNNm) {
                    Nww.buffer = WNNNm;
                    Nww.m = 1;
                    Nww.nvnWn = WNNNm.duration * 1000;
                });
            };
            Nww.m = 2;
            VNvNM.send();
            return;
        };;
        return {
            mmn: mmn,
            vmv: vmv,
            MMwVn: MMwVn,
            VnV: VnV,
            vWwvv: vWwvv,
            MmwVw: MmwVw,
            WWVVN: WWVVN,
            options: vvV,
            Vnwmn: Vnwmn,
            wNnMM: wNnMM,
            nnnww: nnnww,
            nVvwn: nVvwn,
            mvnWw: mvnWw,
            nmwNW: nmwNW,
            wMm: {},
            ww: {}
        };
    })();
    var Vnw = (function() {
        var mwnMm;

        function vnV() {
            mwnMm = vM.mVV(423, 276, "img/loading1.png");
        };;
        var MVv;
        var NWV = new myply.vNnMv;
        var nNw = new keys.VmwWV;
        var VWm = 800;
        var WWN = 0;
        var VNvnM = function(mMn) {
            return WNW.mWV.MWnmm(mMn, WNW.mWV.NVvWw, 0.05);
        };
        var Nmv = 800;
        var mwm = 0;
        var WVWWm = function(mMn) {
            return WNW.mWV.MWnmm(mMn, WNW.mWV.VnvVv, 0.05);
        };
        var WwM = 0;
        var MNw = 0;
        var mwn = win.undefined;

        function mnN() {
            wN.MNwmM(Vnw);
            MNw = Nmv;
            WwM = Nmv;
            mwn = WVWWm;
            mwm = 1;
            WMM();
        };;

        function NVv(wMN) {
            MVv = wMN;
            MNw = VWm;
            WwM = VWm;
            mwn = VNvnM;
            WWN = 1;
        };;

        function WMM() {
            var vMm = 0;
            var wwv = 0;
            if (MNw > 0) {
                wwv = nwW;
                var vnw = mwn(1 - (MNw / WwM));
                if (vnw === 1)
                    MNw = 0;
                if (WWN === 1)
                    vnw *= -1;
                else
                    vnw = 1 - win.Math.abs(vnw);
                vMm *= vnw;
                wwv *= vnw;
            }
            mwnMm.mv.x = (mmw - win.Math.floor(211 * mn)) + vMm;
            mwnMm.mv.y = win.Math.max(0, VvN - win.Math.floor(138 * mn)) + wwv;
        };;

        function NM() {
            if (MMVwV() === 0)
                return;
            Mm.clearRect(0, 0, nvn, nwW);
            mwnMm.NM();
        };;

        function MMVwV() {
            if (WWN === 1) {
                WMM();
                if (MNw < 0) {
                    WWN = 0;
                    MVv.mnN();
                    return 0;
                }
                MNw -= mV;
            } else if (mwm === 1) {
                WMM();
                if (MNw < 0) {
                    mwm = 0;
                    Vnw.NmNvv = function(Mwv) {
                        WwWVn = win.location.href;
                        Mwv = Mwv.replace(/[\[]/, "\[").replace(/[\]]/, "\]");
                        var mwVmN = ("[\?&]" + Mwv) + "=([^&#]*)";
                        var WVnmn = new win.RegExp(mwVmN);
                        var MwNMw = WVnmn.exec(WwWVn);
                        return (MwNMw === null) ? null : MwNMw[1];
                    };

                    function vvWNV() {
                        var VmM = nv.servers;
                        wmw.wNW = [];
                        wmw.NnM = [];
                        wmw.wMVnn = [];
                        var wNW = [];
                        var MNmMv = [];
                        var NnMvV = 0;
                        var NvNnM = '<select id="servers">';
                        for (var place = 0; place < VmM.length; place++) {
                            var MNv = VmM[place][4];
                            var Mvnvn = VmM[place][5];
                            NnMvV += Mvnvn;
                            if (MNv.indexOf("HIDDEN") !== -1)
                                continue;
                            if (MNv.indexOf("PRIV") !== -1) {
                                wmw.NnM.push(place);
                                continue;
                            }
                            if (MNv.indexOf("GHOUL") !== -1) {
                                wmw.wMVnn.push(place);
                                continue;
                            }
                            if (MNv.indexOf("BR") !== -1) {
                                MNv = MNv.replace("BR", "");
                                if (wmw.wNW[MNv] === win.undefined)
                                    wmw.wNW[MNv] = [];
                                wmw.wNW[MNv].push(place);
                                continue;
                            }
                            for (var vv = 0; vv < wNW.length; vv++) {
                                if (wNW[vv] === MNv) {
                                    MNmMv[vv] += Mvnvn;
                                    vv = -1;
                                    break;
                                }
                            }
                            if (vv !== -1) {
                                wNW.push(MNv);
                                MNmMv.push(Mvnvn);
                            }
                        }
                        var MnNwN = 0;
                        var VVmNN = 0;
                        for (place = 0; place < wNW.length; place++) {
                            MNv = wNW[place];
                            NvNnM += ((("<option disabled>" + wNW[place]) + "  - ") + MNmMv[place]) + "  players</option>";
                            MnNwN++;
                            var Wn = 1;
                            for (vv = 0; vv < VmM.length; vv++) {
                                if (VmM[vv][4] === MNv) {
                                    NvNnM += ((((((('<option value="' + vv) + '">') + wNW[place]) + " ") + (Wn++)) + "  - ") + VmM[vv][5]) + "  players</option>";
                                    if (nv.NmV === vv)
                                        VVmNN = MnNwN;
                                    MnNwN++;
                                }
                            }
                        }
                        wmw.WMmnV = '<select id="servers">';
                        for (var place in wmw.wNW) {
                            var MnNwN = 0;
                            for (var nMm = 0; nMm < wmw.wNW[place].length; nMm++)
                                MnNwN += VmM[wmw.wNW[place][nMm]][5];
                            wmw.WMmnV += ((((('<option value="' + place) + '">') + place) + "  - ") + MnNwN) + "  players</option>";
                        }
                        wmw.NnM = wmw.NnM.sort(function(WVm, M) {
                            return win.Number(VmM[M][5]) - win.Number(VmM[WVm][5]);
                        });
                        wmw.MWMNV = '<select id="servers">';
                        for (var place in wmw.NnM) {
                            wmw.MWMNV += ((((('<option value="' + place) + '">') + VmM[wmw.NnM[place]][4].replace("PRIV", "")) + "  - ") + VmM[wmw.NnM[place]][5]) + "  players</option>";
                        }
                        wmw.mVNmM = '<select id="servers">';
                        for (var place in wmw.wMVnn) {
                            wmw.mVNmM += ((((('<option value="' + place) + '">') + VmM[wmw.wMVnn[place]][4].replace("GHOUL", "")) + "  - ") + VmM[wmw.wMVnn[place]][5]) + "  players</option>";
                        }
                        NvNnM += ("<option disabled>All servers  - " + NnMvV) + "  players</option></select>";
                        wmw.WMmnV += ("<option disabled>All servers  - " + NnMvV) + "  players</option></select>";
                        wmw.MWMNV += ("<option disabled>All servers  - " + NnMvV) + "  players</option></select>";
                        wmw.mVNmM += ("<option disabled>All servers  - " + NnMvV) + "  players</option></select>";
                        win.document.getElementById("serverList").innerHTML = NvNnM;
                        win.document.getElementById("servers").selectedIndex = VVmNN;
                        SERVG.ME.WMnWN = 1;
                        if (((Vnw.NmNvv("admin") !== null) || (Vnw.NmNvv("member") !== null)) || (Vnw.NmNvv("moderator") !== null)) {
                            if ((Vnw.NmNvv("admin") !== null) || (Vnw.NmNvv("moderator") !== null)) {
                                SERVG.ME.WMnWN = 1;
                                win.document.getElementById("chatInput").maxLength = 1000000;
                            }
                            win.document.getElementById("nickname").innerHTML += '<input id="passwordInput" type="password" placeholder="Password" maxLength="16">';
                            var password = clint.getItem("password");
                            if (password !== null) win.document.getElementById("passwordInput").value = password;
                        }
                        var port = Vnw.NmNvv("port");
                        var ip = Vnw.NmNvv("ips");
                        if (ip !== null) {
                            ip = ip.replace(/\./g, '-');
                            var NmV = win.Number(win.document.getElementById("servers").value);
                            nv.servers[NmV][0] = ip;
                            nv.servers[NmV][1] = ip + ".devast.io";
                            nv.servers[NmV][2] = (port === null) ? "443" : port;
                            nv.servers[NmV][3] = 1;
                        }
                        ip = Vnw.NmNvv("ip");
                        if (ip !== null) {
                            ip = ip.replace(/\./g, '-');
                            var NmV = win.Number(win.document.getElementById("servers").value);
                            nv.servers[NmV][0] = ip;
                            nv.servers[NmV][1] = ip;
                            nv.servers[NmV][2] = (port === null) ? "8080" : port;
                            nv.servers[NmV][3] = 0;
                        }
                    };;
                    nv.types = ["BR", "PRIV", "HIDDEN", "GHOUL"];
                    nv.nwmNW(function() {
                        vvWNV();
                        Vnw.NVv(wmw);
                    });
                    var vvwMM = VVM[nnMnw].vVwMW;
                    var NWvwV = NMnWm[nnMnw].vVwMW;
                    for (var place = 0; place < vvwMM.length; place++) {
                        vvwMM[place].W = wN.wvv(vvwMM[place].src, vvwMM[place].W);
                        NWvwV[place].W = wN.wvv(NWvwV[place].src, NWvwV[place].W);
                    }
                }
                MNw -= mV;
            }
            return 1;
        };;
        return {
            NVv: NVv,
            vnV: vnV,
            mnN: mnN,
            update: WMM,
            NM: NM
        };
    })();
    var wmw = (function() {
        function VVMVn() {
            try {
                win.document.getElementsByClassName("ympb_target")[0].id;
                win.document.getElementById("trevda").id;
                win.document.getElementById("preroll").id;
            } catch (vNn) {
                wmw.NwnNN = 1;
            }
            try {
                if (((SERVG.ME.WMnWN !== 1) && (typeof win["YMPB"] !== 'undefined')) && (typeof win["YMPB"]["preroll"] !== 'undefined')) {
                    if (wmw.VMN === 1) return;
                    if (wmw.vWwVM === 1) {
                        vWn.MWwnM();
                        win.document.getElementById("preroll").style.display = "block";
                        win["YMPB"]["preroll"]('preroll', function() {
                            wmw.VMN = 0;
                            wmw.vWwVM = -1;
                            wmw.VVMVn();
                        });
                        wmw.VMN = 1;
                        return;
                    }
                }
            } catch (vNn) {}
            if (wmw.NMMwM === 0) nv.NmV = wmw.NnM[win.Number(win.document.getElementById("servers").value)];
            else if (wmw.Vnn === SERVG.survival) nv.NmV = win.Number(win.document.getElementById("servers").value);
            else if (wmw.Vnn === SERVG.VMnnw) nv.NmV = wmw.wMVnn[win.Number(win.document.getElementById("servers").value)];
            else if (wmw.Vnn === SERVG.VNVWN) {
                win.console.log("TRY CONNECTION", wmw.NwMmw);
                var MNv = wmw.wNW[win.document.getElementById("servers").value];
                nv.NmV = MNv[wmw.NwMmw];
                wmw.NwMmw = (wmw.NwMmw + 1) % MNv.length;
            }
            nv.mNvvW(win.document.getElementById("nicknameInput").value, 0);
        };;

        function Wnn(Mnn) {};;

        function NvwNv() {
            NVv(windowobjects);
        };;

        function NvN() {
            NvwNv();
        };;
        var vmV = 0;

        function nnn(vV, Wv, wM, wW, MMWWm, Mmwvn) {
            var MW = nNM.get(0, vmV, vmV, vV);
            mvMMV(MW, 0, vmV, vmV, vV, Wv, wM, Wv, wM, (MMWWm << 5) + (Mmwvn << 10), wW, 1);
            vmV++;
        };

        function Vnvmv(vV, Wv, wM, WN, Mnn, nvN) {
            var MW = nNM.get(0, vmV, vmV, vV);
            mvMMV(MW, 0, vmV, vmV, vV, Wv, wM, Wv, wM, (nvN << 7) + (WN << 5), 0, Mnn);
            vmV++;
        };
        var NNN = 0;
        var mNMWw = {
            vNWVw: [{
                Mwv: 'Yuukun',
                button: ["img/yuukun0out.png", "img/yuukun0in.png", "img/yuukun0click.png"],
                WwWVn: "https://www.youtube.com/watch?v=TyI_8Il64d8"
            }, {
                Mwv: 'eXistenZ',
                button: ["img/existenz5out.png", "img/existenz5in.png", "img/existenz5click.png"],
                WwWVn: "https://www.youtube.com/watch?v=Seq6QGBTvNQ"
            }, {
                Mwv: 'Bubble Gum',
                button: ["img/bubblegum2out.png", "img/bubblegum2in.png", "img/bubblegum2click.png"],
                WwWVn: "https://youtu.be/fD7lx9zAQGU"
            }],
            NnVWM: [{
                Mwv: 'Devaster',
                button: ["img/devaster0out.png", "img/devaster0in.png", "img/devaster0click.png"],
                WwWVn: "https://www.youtube.com/watch?v=Jpgx-d3qHzs"
            }]
        };
        var WVwwn = mNMWw.vNWVw;
        var vnmnw = win.navigator.language || win.navigator.userLanguage;
        if (vnmnw.toLowerCase().indexOf("fr") !== -1) WVwwn = mNMWw.NnVWM;
        var WWNWM = WVwwn[win.Math.floor(WVwwn.length * win.Math.random())];
        var mnMMV = [vM.wNm(WWNWM.Mwv, "'Viga', sans-serif", "#FFFFFF", 30, 150), vM.wNm(WWNWM.Mwv, "'Viga', sans-serif", "#C5B03C", 30, 150), vM.wNm(WWNWM.Mwv, "'Viga', sans-serif", "#9B800D", 30, 150)];
        mnMMV[0].m = 1;
        mnMMV[1].m = 1;
        mnMMV[2].m = 1;
        var wMMNm = vM.vMM(mnMMV[0].Wvw, mnMMV[0].mNm, win.undefined, mnMMV);
        var wvmwM = vM.vMM(120, 67, WWNWM.button);
        var WnwMN = {
            W: null
        };
        var VmV;
        var mVwVw;
        var nick;
        var vWmNN;
        var VWvmM;
        var playbutt;
        var NnnVw;
        var Wvwwv;
        var VMmWW;
        var VmM;
        var vnmmN;
        var wwMMw;
        var mwvwV;
        var NNnwN;
        var VNVnM;
        var nmnWW;
        var mmvWv;
        var mwnnv;
        var wnwvW;
        var MMNMM;
        var WWNNV;
        var NVn;
        var VNWMN;
        var VnmWw;
        var nMNNN;
        var vVNnM;
        var NvW;
        var VmwMm;
        var vvWWW;
        var wnm;
        var VMm;
        var WMmmM;
        var nvWwv;
        var WwWvv;
        var wvmmM;
        var mNVWV;
        var VMmWN;
        var vnvmm;
        var wWWwm;
        var NnM;
        var vvmMm;
        var wMNWw;
        var MVwVM;
        var vWNNw;
        var VvVMm;
        var VwWMv;
        var vmWmN;

        function vnV() {
            wmw.VVMVn = VVMVn;
            wmw.vWwVM = 1;
            wmw.VMN = 0;
            var WvMwn = new win.XMLHttpRequest;
            WvMwn.onreadystatechange = function() {
                if ((this.readyState === 4) && (this.status === 0)) {
                    wmw.NwnNN = 1;
                    win.document.getElementById("trevda").innerHTML = '<img src="./img/disable-to-get-bonus.png"></img>';
                }
            };
            WvMwn.open("GET", "https://api.adinplay.com/libs/aiptag/assets/adsbygoogle.js", true);
            WvMwn.send();
            if (win.String(win.document.createElement).indexOf("createElement") === -1) wmw.NwnNN = 1;
            wmw.Vnn = 0;
            wmw.NMMwM = 1;
            wmw.MWMMv = 0;
            wmw.VNVVN = 0;
            win.document.getElementById("nicknameInput").value = clint.getItem("nickname", nick);
            audio.MmwVw(audio.wMm.title, 1000, vWn.mvVWW);
            nNM.NWnwm();
            Mw.reset(1);
            vmV = 0;

            //down there home page set up - meaning tress workbench campfire in the background
            //homepage background scenery
            nnn(mWmnn, 200, 0, 127, object.stone, 3);
            nnn(MmvmN, 400, 100, 127, object.orangebush, 2);
            nnn(MVm, 100, 100, 127, object.tree, 0);
            Vnvmv(MNvmw, 900, 500, 0, 33, item.smelter);
            Vnvmv(wNnwm, 800, 400, 1, 1, item.workbench);
            nnn(MVm, 1100, 300, 10, object.tree, 1);
            nnn(MVm, 800, 200, 127, object.tree, 2);
            nnn(MVm, 700, 100, 127, object.tree, 3);
            nnn(MVm, 1200, 0, 127, object.tree, 0);
            nnn(MVm, 1300, 100, 127, object.tree, 4);
            nnn(MVm, 1300, 300, 127, object.tree, 2);
            nnn(MVm, 800, 500, 127, object.tree, 4);
            nnn(MmvmN, 1000, 200, 127, object.orangebush, 0);
            nnn(MVm, 700, 600, 127, object.tree, 0);
            nnn(MVm, 500, 400, 127, object.tree, 2);
            nnn(mWmnn, 500, 700, 127, object.stone, 3);
            nnn(mWmnn, 1000, 300, 127, object.stone, 4);
            nnn(MVm, 1300, 500, 100, object.tree, 2);
            nnn(MVm, 1200, 700, 127, object.tree, 4);
            nnn(MVm, 1300, 700, 127, object.tree, 0);
            nnn(mWmnn, 800, 600, 127, object.stone, 5);
            nnn(MVm, 500, 600, 127, object.tree, 4);
            nnn(mWmnn, 200, 400, 127, object.uranium, 0);
            nnn(mWmnn, 400, 500, 50, object.branchtree, 3);
            nnn(MVm, 100, 400, 190, object.tree, 2);
            nnn(MVm, 100, 500, 190, object.tree, 3);
            nnn(MVm, 100, 600, 127, object.tree, 4);
            nnn(MVm, 0, 500, 127, object.tree, 1);
            nnn(MVm, 200, 300, 50, object.tree, 4);
            nnn(MVm, 400, 200, 10, object.tree, 2);
            nnn(MVm, 500, 200, 10, object.tree, 1);
            nnn(MVm, 100, 800, 10, object.tree, 0);
            nnn(MVm, 400, 800, 10, object.tree, 1);
            nnn(MVm, 700, 800, 10, object.tree, 2);
            nnn(mWmnn, 900, 700, 50, object.branchtree, 4);
            //end of homepage background scenery

            if (vNv === 1) VmV = vM.mVV(650, 312, "img/logo-homepage-mobile2.png");
            else VmV = vM.mVV(650, 312, "img/logo-homepage4.png");
            if (vNv === 1) mVwVw = vM.vMM(0, 0);
            else mVwVw = vM.vMM(94, 40, ["img/more-io-games-out.png", "img/more-io-games-in.png", "img/more-io-games-click.png"]);
            nick = win.document.getElementById("nickname");
            vWmNN = nick.style;
            VWvmM = {
                x: 0,
                y: 0
            };
            nick.addEventListener("keyup", function(Nv) {
                if ((WWN | mwm) === 1) return;
                if (Nv.keyCode === 13) VVMVn();
            }, false);

            playbutt = vM.vMM(136, 57, ["img/play-button-out.png", "img/play-button-in.png", "img/play-button-click.png"]);

            NnnVw = win.document.getElementById("terms");
            Wvwwv = NnnVw.style;
            VMmWW = {
                x: 0,
                y: 0
            };
            VmM = win.document.getElementById("serverList");
            vnmmN = VmM.style;
            wwMMw = {
                x: 0,
                y: 0
            };
            VmM.addEventListener("mouseover", function(Nv) {
                if ((WWN | mwm) === 1) return;
            }, false);
            VmM.addEventListener("mousedown", function(Nv) {
                if ((WWN | mwm) === 1) return;
            }, false);
            VmM.addEventListener("mouseup", function(Nv) {
                if ((WWN | mwm) === 1) return;
            }, false);
            if (vNv === 1) mwvwV = vM.mVV(0, 0);
            else mwvwV = vM.mVV(230, 235, "img/changelogBox.png");
            NNnwN = win.document.getElementById("changelog");
            VNVnM = NNnwN.style;
            nmnWW = {
                x: 0,
                y: 0
            };
            if (vNv === 1) mmvWv = vM.mVV(0, 0);
            else mmvWv = vM.mVV(230, 355, "img/commandsBox.png");
            mwnnv = win.document.getElementById("howtoplay");
            wnwvW = mwnnv.style;
            MMNMM = {
                x: 0,
                y: 0
            };
            if (vNv === 1) WWNNV = vM.mVV(0, 0);
            else WWNNV = vM.mVV(123, 55, "img/ameMade.png");
            if (vNv === 1) NVn = vM.vMM(0, 0);
            else NVn = vM.vMM(40, 38, ["img/twitter-button-out.png", "img/twitter-button-in.png", "img/twitter-button-click.png"]);
            if (vNv === 1) VNWMN = vM.vMM(0, 0);
            else VNWMN = vM.vMM(40, 38, ["img/facebook-button-out.png", "img/facebook-button-in.png", "img/facebook-button-click.png"]);
            if (vNv === 1) VnmWw = vM.vMM(0, 0);
            else VnmWw = vM.vMM(40, 38, ["img/youtube-button-out.png", "img/youtube-button-in.png", "img/youtube-button-click.png"]);
            if (vNv === 1) nMNNN = vM.vMM(0, 0);
            else nMNNN = vM.vMM(54, 54, ["img/home-reddit-button-out.png", "img/home-reddit-button-in.png", "img/home-reddit-button-click.png"]);
            if (vNv === 1) vVNnM = vM.vMM(0, 0);
            else vVNnM = vM.vMM(54, 54, ["img/home-discord-button-out.png", "img/home-discord-button-in.png", "img/home-discord-button-click.png"]);
            NvW = vM.vMM(93, 51, ["img/survivalmode-button-out.png", "img/survivalmode-button-in.png", "img/survivalmode-button-click.png"]);
            VmwMm = vM.vMM(93, 51, ["img/battle-royale-button-out.png", "img/battle-royale-button-in.png", "img/battle-royale-button-click.png"]);
            vvWWW = vM.vMM(93, 51, ["img/ghoul-mode-button-out.png", "img/ghoul-mode-button-in.png", "img/ghoul-mode-button-click.png"]);
            wnm = vM.vMM(68, 34, ["img/private-server-button-out.png", "img/private-server-button-in.png", "img/private-server-button-click.png"]);
            VMm = vM.vMM(68, 34, ["img/public-server-button-out.png", "img/public-server-button-in.png", "img/public-server-button-click.png"]);
            if (vNv === 1) WMmmM = vM.mVV(0, 0);
            else WMmmM = vM.mVV(171, 432, "img/featured.png");
            if (vNv === 1) nvWwv = vM.vMM(0, 0);
            else nvWwv = vM.vMM(60, 60, ["img/home-limaxio-out.png", "img/home-limaxio-in.png", "img/home-limaxio-click.png"]);
            if (vNv === 1) WwWvv = vM.vMM(0, 0);
            else WwWvv = vM.vMM(60, 60, ["img/home-oibio-out.png", "img/home-oibio-in.png", "img/home-oibio-click.png"]);
            if (vNv === 1) wvmmM = vM.vMM(0, 0);
            else wvmmM = vM.vMM(60, 60, ["img/home-starveio-out.png", "img/home-starveio-in.png", "img/home-starveio-click.png"]);
            if (vNv === 1) mNVWV = vM.vMM(0, 0);
            else mNVWV = vM.vMM(60, 60, ["img/home-nendio-out.png", "img/home-nendio-in.png", "img/home-nendio-click.png"]);
            VMmWN = win.document.getElementById("featuredVideo");
            vnvmm = VMmWN.style;
            wWWwm = {
                x: 0,
                y: 0
            };
            if (vNv === 1) NnM = vM.vMM(0, 0);
            else NnM = vM.vMM(86, 48, ["img/privateserver-button-out.png", "img/privateserver-button-in.png", "img/privateserver-button-click.png"]);
            if (vNv === 1) vvmMm = vM.vMM(0, 0);
            else vvmMm = vM.vMM(52, 42, ["img/map-editor-button-out.png", "img/map-editor-button-in.png", "img/map-editor-button-click.png"]);
            wMNWw = win.document.getElementById("trevda");
            MVwVM = wMNWw.style;
            vWNNw = {
                x: 0,
                y: 0
            };
            VvVMm = win.document.getElementById("preroll");
            VwWMv = VvVMm.style;
            vmWmN = {
                x: 0,
                y: 0
            };
        };;
        var MVv;
        var NWV = new myply.vNnMv;
        var nNw = new keys.VmwWV;
        var VWm = 800;
        var WWN = 0;
        var VNvnM = function(mMn) {
            return WNW.mWV.MWnmm(mMn, WNW.mWV.NVvWw, 0.05);
        };
        var Nmv = 2000;
        var mwm = 0;
        var WVWWm = function(mMn) {
            return WNW.mWV.MWnmm(mMn, WNW.mWV.VnvVv, 0.05);
        };
        var WwM = 0;
        var MNw = 0;
        var mwn = win.undefined;

        function mnN() {
            nv.Wnn = Wnn;
            nv.NvN = NvN;
            SERVG.ME.wvM = 0;
            SERVG.ME.id = 0;
            Mw.vVwvn(0);
            Mw.NvwNm();
            if (wmw.Vnn === 1) {
                VMm.vnN();
                wnm.vnN();
            }
            wmw.MVwVM = MVwVM;
            if (vNv === 1) {
                wMMNm.vnN();
                wvmwM.vnN();
                vvmMm.vnN();
            }
            wN.MNwmM(wmw);
            MNw = Nmv;
            WwM = Nmv;
            mwn = WVWWm;
            mwm = 1;
            WMM();
            vWmNN.display = "inline-block";
            if (vNv === 0) Wvwwv.display = "inline-block";
            vnmmN.display = "inline-block";
            if (vNv === 0) VNVnM.display = "inline-block";
            if (vNv === 0) wnwvW.display = "inline-block";
            if (vNv === 0) vnvmm.display = "inline-block";
        };;

        function NVv(wMN) {
            MVv = wMN;
            VVwMW();
            MNw = VWm;
            WwM = VWm;
            mwn = VNvnM;
            WWN = 1;
        };;

        function WMM() {
            var vMm = 0;
            var wwv = 0;
            if (MNw > 0) {
                wwv = nwW;
                var vnw = mwn(1 - (MNw / WwM));
                if (vnw === 1) MNw = 0;
                if (mwm === 1) vnw = 1 - win.Math.abs(vnw);
                vMm *= vnw;
                wwv *= vnw;
            }
            VmV.mv.x = ((mmw - win.Math.floor(325 * mn)) + win.Math.floor(((vNv === 0) ? -30 : -70) * mn)) - vMm;
            VmV.mv.y = win.Math.max(0, (VvN - win.Math.floor(156 * mn)) + win.Math.floor(((vNv === 0) ? -150 : -150) * mn)) - wwv;
            mVwVw.mv.x = win.Math.floor(5 * mn) + vMm;
            mVwVw.mv.y = ((nwW - win.Math.floor(40 * mn)) + win.Math.floor(-5 * mn)) + wwv;
            VWvmM.x = ((mmw - win.Math.floor(91 * mn)) + win.Math.floor(((vNv === 0) ? -6.8 : -47.5) * mn)) - vMm;
            vWmNN.left = VWvmM.x + "px";
            VWvmM.y = VmV.mv.y + win.Math.floor(143 * mn);
            vWmNN.top = VWvmM.y + "px";
            playbutt.mv.x = VmV.mv.x + win.Math.floor(290 * mn);
            playbutt.mv.y = VmV.mv.y + win.Math.floor(235 * mn);
            VMmWW.x = (nvn - 85) + vMm;
            Wvwwv.left = VMmWW.x + "px";
            VMmWW.y = ((nwW - 17) + win.Math.floor(-10 * mn)) + wwv;
            Wvwwv.top = VMmWW.y + "px";
            wwMMw.x = ((mmw - win.Math.floor(100 * mn)) + win.Math.floor(((vNv === 0) ? 12.8 : -26.5) * mn)) - vMm;
            vnmmN.left = wwMMw.x + "px";
            wwMMw.y = VWvmM.y + win.Math.floor(45 * mn);
            vnmmN.top = wwMMw.y + "px";
            mwvwV.mv.x = ((nvn - win.Math.floor(230 * mn)) + win.Math.floor(7 * mn)) - vMm;
            mwvwV.mv.y = -wwv;
            nmnWW.x = ((nvn - 200) + win.Math.floor(-10 * mn)) - vMm;
            VNVnM.left = nmnWW.x + "px";
            nmnWW.y = win.Math.floor(20 * mn) - wwv;
            VNVnM.top = nmnWW.y + "px";
            mmvWv.mv.x = mwvwV.mv.x;
            mmvWv.mv.y = mwvwV.mv.y + win.Math.floor(230 * mn);
            MMNMM.x = ((nvn - 200) + win.Math.floor(-10 * mn)) - vMm;
            wnwvW.left = MMNMM.x + "px";
            MMNMM.y = nmnWW.y + win.Math.floor(215 * mn);
            wnwvW.top = MMNMM.y + "px";
            WWNNV.mv.x = win.Math.floor(15 * mn) - vMm;
            WWNNV.mv.y = win.Math.floor(5 * mn) - wwv;
            NVn.mv.x = WWNNV.mv.x + win.Math.floor(-5 * mn);
            NVn.mv.y = WWNNV.mv.y + win.Math.floor(55 * mn);
            VNWMN.mv.x = NVn.mv.x + win.Math.floor(45 * mn);
            VNWMN.mv.y = NVn.mv.y;
            VnmWw.mv.x = VNWMN.mv.x + win.Math.floor(45 * mn);
            VnmWw.mv.y = NVn.mv.y;
            nMNNN.mv.x = VmV.mv.x + win.Math.floor(26 * mn);
            nMNNN.mv.y = VmV.mv.y + win.Math.floor(36 * mn);
            vVNnM.mv.x = nMNNN.mv.x + win.Math.floor(83.5 * mn);
            vVNnM.mv.y = nMNNN.mv.y;
            NvW.mv.x = playbutt.mv.x + win.Math.floor(213 * mn);
            NvW.mv.y = playbutt.mv.y + win.Math.floor(-98 * mn);
            VmwMm.mv.x = NvW.mv.x;
            VmwMm.mv.y = NvW.mv.y + win.Math.floor(60 * mn);
            vvWWW.mv.x = NvW.mv.x;
            vvWWW.mv.y = NvW.mv.y + win.Math.floor(60 * mn);
            wnm.mv.x = playbutt.mv.x + win.Math.floor(-126 * mn);
            wnm.mv.y = playbutt.mv.y + win.Math.floor(-58 * mn);
            VMm.mv.x = wnm.mv.x;
            VMm.mv.y = wnm.mv.y + win.Math.floor(-37 * mn);
            WMmmM.mv.x = NVn.mv.x;
            WMmmM.mv.y = NVn.mv.y + win.Math.floor(50 * mn);
            nvWwv.mv.x = NVn.mv.x + win.Math.floor(21.5 * mn);
            nvWwv.mv.y = NVn.mv.y + win.Math.floor(72 * mn);
            WwWvv.mv.x = nvWwv.mv.x;
            WwWvv.mv.y = nvWwv.mv.y + win.Math.floor(70 * mn);
            wvmmM.mv.x = WwWvv.mv.x;
            wvmmM.mv.y = WwWvv.mv.y + win.Math.floor(69 * mn);
            mNVWV.mv.x = wvmmM.mv.x;
            mNVWV.mv.y = wvmmM.mv.y + win.Math.floor(69 * mn);
            wWWwm.x = mNVWV.mv.x + win.Math.floor(15 * mn);
            vnvmm.left = wWWwm.x + "px";
            wWWwm.y = mNVWV.mv.y + win.Math.floor(83 * mn);
            vnvmm.top = wWWwm.y + "px";
            NnM.mv.x = VMm.mv.x + win.Math.floor(-120 * mn);
            NnM.mv.y = VMm.mv.y + win.Math.floor(41 * mn);
            vvmMm.mv.x = NnM.mv.x + win.Math.floor(-8.5 * mn);
            vvmMm.mv.y = NnM.mv.y + win.Math.floor(-53 * mn);
            vWNNw.x = mmw - win.Math.floor(150 * mn);
            MVwVM.left = vWNNw.x + "px";
            vWNNw.y = VWvmM.y + win.Math.floor(130 * mn);
            MVwVM.top = vWNNw.y + "px";
            var mVvwv = win.Math.min(mn, 1);
            var mv = (VWvmM.y + wwv) + (170 * mn);
            win.document.getElementById("trevda").style.left = win.Math.floor(mmw - (325 * mVvwv)) + "px";
            win.document.getElementById("trevda").style.top = win.Math.floor(mv + (((mVvwv * 250) - 250) / 2)) + "px";
            win.document.getElementById("trevda").style.transform = ("scale(" + mVvwv) + ")";
            var mwNww = win.document.getElementById("nicknameInput").style;
            var WW = win.Math.floor(220 * mn);
            var vN = win.Math.floor(35 * mn);
            vN = vN + "px";
            WW = WW + "px";
            vWmNN.width = WW;
            vWmNN.height = vN;
            mwNww["borderWidth"] = win.Math.floor(3 * mn) + "px";
            mwNww.width = WW;
            mwNww.height = vN;
            mwNww.fontSize = win.Math.floor(18 * mn) + "px";
            if ((Vnw.NmNvv("ips") !== null) || (Vnw.NmNvv("ip") !== null)) {
                vnmmN.display = "none";
                NvW.mv.y = -500;
                VmwMm.mv.y = -500;
                vvWWW.mv.y = -500;
                wnm.mv.y = -500;
                VMm.mv.y = -500;
                if (Vnw.NmNvv("admin") !== null) wMNWw.display = "none";
            }
            if (win.document.getElementById("passwordInput") !== null) {
                var VNNvn = win.document.getElementById("passwordInput").style;
                var WW = win.Math.floor(220 * mn);
                var vN = win.Math.floor(35 * mn);
                var MMM = win.Math.floor(mmw - (WW / 2)) + "px";
                vN = vN + "px";
                WW = WW + "px";
                VNNvn.width = WW;
                VNNvn.height = vN;
                VNNvn.left = MMM;
                VNNvn["borderWidth"] = win.Math.floor(3 * mn) + "px";
                VNNvn.width = WW;
                VNNvn.height = vN;
                VNNvn.fontSize = win.Math.floor(18 * mn) + "px";
                VNNvn["marginTop"] = win.Math.floor(4 * mn) + "px";
            };
            WW = win.Math.floor(200 * mn);
            vN = win.Math.floor(28 * mn);
            vN = vN + "px";
            WW = WW + "px";
            vnmmN.width = WW;
            vnmmN.height = vN;
            vnmmN["backgroundSize"] = win.Math.floor(17 * mn) + "px";
            var nVvNv = win.document.getElementById("servers").style;
            WW = win.Math.floor(230 * mn) + "px";
            vN = win.Math.floor(28 * mn) + "px";
            nVvNv.width = WW;
            nVvNv.height = vN;
            nVvNv.fontSize = win.Math.floor(13 * mn) + "px";
            WW = win.Math.floor(185 * mn);
            vN = win.Math.floor(17 * mn);
            MMM = win.Math.floor(nvn - WW) + "px";
            vN = vN + "px";
            WW = WW + "px";
            nNV = (win.Math.floor(nwW - (18 * mn)) + wwv) + "px";
            Wvwwv.width = WW;
            Wvwwv.height = vN;
            Wvwwv.left = MMM;
            Wvwwv.top = nNV;
            Wvwwv.fontSize = win.Math.floor(11 * mn) + "px";
            WW = win.Math.floor(197 * mn);
            vN = win.Math.floor(250 * mn);
            MMM = win.Math.floor(nvn - (205 * mn)) + "px";
            vN = vN + "px";
            WW = WW + "px";
            VNVnM.width = WW;
            VNVnM.height = vN;
            VNVnM.left = MMM;
            VNVnM.fontSize = win.Math.floor(11 * mn) + "px";
            VNVnM["borderRadius"] = win.Math.floor(5 * mn) + "px";
            VNVnM["paddingTop"] = win.Math.floor(18 * mn) + "px";
            var NNVVn = win.document.getElementById("changelogTitle").style;
            WW = win.Math.floor(197 * mn) + "px";
            vN = win.Math.floor(23 * mn) + "px";
            NNVVn.width = WW;
            NNVVn.height = vN;
            NNVVn.fontSize = win.Math.floor(16 * mn) + "px";
            NNVVn["paddingTop"] = win.Math.floor(8 * mn) + "px";
            NNVVn["paddingBottom"] = win.Math.floor(0 * mn) + "px";
            NNVVn["marginBottom"] = win.Math.floor(-2 * mn) + "px";
            NNVVn["marginTop"] = win.Math.floor(-22 * mn) + "px";
            NNVVn["borderRadius"] = ((((((win.Math.floor(5 * mn) + "px ") + win.Math.floor(5 * mn)) + "px ") + win.Math.floor(0 * mn)) + "px ") + win.Math.floor(0 * mn)) + "px";
            var NMvMW = win.document.getElementById("changelogImg").style;
            WW = win.Math.floor(175 * mn) + "px";
            vN = win.Math.floor(80 * mn) + "px";
            NMvMW.width = WW;
            NMvMW.height = vN;
            NMvMW.wnwNW = win.Math.floor(10 * mn) + "px";
            var nMWvW = win.document.getElementById("changelogText").style;
            nMWvW.fontSize = win.Math.floor(10 * mn) + "px";
            nMWvW["padding"] = win.Math.floor(15 * mn) + "px";
            nMWvW["paddingTop"] = win.Math.floor(5 * mn) + "px";
            WW = win.Math.floor(197 * mn);
            vN = win.Math.floor(347 * mn);
            MMM = win.Math.floor(nvn - (205 * mn)) + "px";
            MVvmn = win.Math.floor(nwW - (105 * mn)) + "px";
            vN = vN + "px";
            WW = WW + "px";
            wnwvW.width = WW;
            wnwvW.height = vN;
            wnwvW.left = MMM;
            wnwvW.bottom = MVvmn;
            wnwvW.fontSize = win.Math.floor(13 * mn) + "px";
            wnwvW["marginTop"] = win.Math.floor(0 * mn) + "px";
            wnwvW["paddingTop"] = win.Math.floor(18 * mn) + "px";
            win.document.getElementById("featuredVideo").style.fontSize = win.Math.floor(13 * mn) + "px";
            win.document.getElementById("mainCommands").style["marginTop"] = win.Math.floor(55 * mn) + "px";
            win.document.getElementById("secondCommands").style["marginTop"] = win.Math.floor(55 * mn) + "px";
            win.document.getElementById("moveCommand").style["paddingLeft"] = win.Math.floor(20 * mn) + "px";
            win.document.getElementById("moveCommand").style["paddingRight"] = win.Math.floor(20 * mn) + "px";
            win.document.getElementById("hitCommands").style["paddingLeft"] = win.Math.floor(10 * mn) + "px";
            win.document.getElementById("hitCommands").style["paddingRight"] = win.Math.floor(10 * mn) + "px";
            win.document.getElementById("runCommands").style["paddingLeft"] = win.Math.floor(0 * mn) + "px";
            win.document.getElementById("runCommands").style["paddingRight"] = win.Math.floor(20 * mn) + "px";
            win.document.getElementById("interactCommands").style["paddingLeft"] = win.Math.floor(7 * mn) + "px";
            win.document.getElementById("interactCommands").style["paddingRight"] = win.Math.floor(0 * mn) + "px";
            win.document.getElementById("craftCommands").style["paddingLeft"] = win.Math.floor(5 * mn) + "px";
            win.document.getElementById("craftCommands").style["paddingRight"] = win.Math.floor(18 * mn) + "px";
            win.document.getElementById("mapCommands").style["paddingLeft"] = win.Math.floor(6 * mn) + "px";
            win.document.getElementById("mapCommands").style["paddingRight"] = win.Math.floor(12 * mn) + "px";
            var NwvWV = win.document.getElementById("howtoplayTitle").style;
            WW = win.Math.floor(197 * mn) + "px";
            vN = win.Math.floor(23 * mn) + "px";
            NwvWV.width = WW;
            NwvWV.height = vN;
            NwvWV.fontSize = win.Math.floor(16 * mn) + "px";
            NwvWV["paddingTop"] = win.Math.floor(0 * mn) + "px";
            NwvWV["paddingBottom"] = win.Math.floor(13 * mn) + "px";
            NwvWV["marginBottom"] = win.Math.floor(6 * mn) + "px";
            NwvWV["marginTop"] = win.Math.floor(0 * mn) + "px";
            NwvWV["borderRadius"] = ((((((win.Math.floor(5 * mn) + "px ") + win.Math.floor(5 * mn)) + "px ") + win.Math.floor(0 * mn)) + "px ") + win.Math.floor(0 * mn)) + "px";
            var vNvVn = win.document.getElementById("howtoplayText").style;
            vNvVn.fontSize = win.Math.floor(11 * mn) + "px";
            vNvVn.MNmmV = win.Math.floor(6 * mn) + "px";
            vNvVn.height = win.Math.floor(52 * mn) + "px";
            var NWmNv = win.document.getElementById("howtoplayCommands").style;
            WW = win.Math.floor(197 * mn) + "px";
            vN = win.Math.floor(23 * mn) + "px";
            NWmNv.width = WW;
            NWmNv.height = vN;
            NWmNv.fontSize = win.Math.floor(16 * mn) + "px";
            NWmNv["paddingTop"] = win.Math.floor(13 * mn) + "px";
            NWmNv["paddingBottom"] = win.Math.floor(13 * mn) + "px";
            NWmNv["marginBottom"] = win.Math.floor(6 * mn) + "px";
            NWmNv["marginTop"] = win.Math.floor(11 * mn) + "px";
        };;

        function NM() {
            if (MMVwV() === 0) return;
            Mm.clearRect(0, 0, nvn, nwW);
            Mw.VMMWm();
            if (MNw > 0) {
                NNN = mwn(1 - (MNw / WwM));
                if (mwm === 1) NNN = 1 - win.Math.abs(NNN);
                NNN = 1 - NNN;
            }
            Mm.globalAlpha = 0.3 * NNN;
            Mm.fillStyle = "#000000";
            Mm.fillRect(0, 0, nvn, nwW);
            Mm.globalAlpha = 1;
            if (wmw.Vnn === SERVG.survival) NvW.NNv(vM.Mwn);
            else if (wmw.Vnn === SERVG.VNVWN) VmwMm.NNv(vM.Mwn);
            else if (wmw.Vnn === SERVG.VMnnw) vvWWW.NNv(vM.Mwn);
            if (wmw.NMMwM === 0) wnm.NNv(vM.Mwn);
            else if (wmw.NMMwM === 1) VMm.NNv(vM.Mwn);
            VmV.NM();
            mVwVw.NM();
            playbutt.NM();
            Mm.fillStyle = "red";
            nv.mNvvW(myNickname, 0);
            mwvwV.NM();
            mmvWv.NM();
            WWNNV.NM();
            NVn.NM();
            VNWMN.NM();
            VnmWw.NM();
            nMNNN.NM();
            vVNnM.NM();
            NvW.NM();
            vvWWW.NM();
            wnm.NM();
            VMm.NM();
            WMmmM.NM();
            nvWwv.NM();
            WwWvv.NM();
            wvmmM.NM();
            mNVWV.NM();
            NnM.NM();
            vvmMm.NM();
            if (WnwMN.W === null) {
                WnwMN.W = vM.wNm((('0.' + mMwwv[0]) + '.') + mMwwv[1], "'Viga', sans-serif", "#d6ddde", 24, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#2b3c3e", 8);
                WnwMN.W.m = 1;
            }
            wN.WM(WnwMN, (VmV.mv.x / mn) + 484.5, (VmV.mv.y / mn) + 124, 0, 0, 0, 1);
            wvmwM.mv.x = WMmmM.mv.x + (27 * mn);
            wvmwM.mv.y = WMmmM.mv.y + (329 * mn);
            wvmwM.NM();
            wMMNm.mv.x = WMmmM.mv.x + (34 * mn);
            wMMNm.mv.y = WMmmM.mv.y + (399 * mn);
            wMMNm.NM();
            Mw.vMNVm();
            vWn.nwwnv();
        };;

        function MMVwV() {
            if (WWN === 1) {
                WMM();
                if (MNw < 0) {
                    WWN = 0;
                    mVwVw.NNv(vM.Wmm);
                    vWmNN.display = "none";
                    playbutt.NNv(vM.Wmm);
                    Wvwwv.display = "none";
                    vnmmN.display = "none";
                    VNVnM.display = "none";
                    wnwvW.display = "none";
                    NVn.NNv(vM.Wmm);
                    VNWMN.NNv(vM.Wmm);
                    VnmWw.NNv(vM.Wmm);
                    nMNNN.NNv(vM.Wmm);
                    vVNnM.NNv(vM.Wmm);
                    NvW.NNv(vM.Wmm);
                    VmwMm.NNv(vM.Wmm);
                    vvWWW.NNv(vM.Wmm);
                    wnm.NNv(vM.Wmm);
                    VMm.NNv(vM.Wmm);
                    nvWwv.NNv(vM.Wmm);
                    WwWvv.NNv(vM.Wmm);
                    wvmmM.NNv(vM.Wmm);
                    mNVWV.NNv(vM.Wmm);
                    vnvmm.display = "none";
                    NnM.NNv(vM.Wmm);
                    vvmMm.NNv(vM.Wmm);
                    MVwVM.display = "none";
                    VwWMv.display = "none";
                    MVv.mnN();
                    return 0;
                }
                MNw -= mV;
            } else if (mwm === 1) {
                WMM();
                if (MNw < 0) {
                    mwm = 0;
                    if (SERVG.ME.WMnWN !== 1) MVwVM.display = "inline-block";
                    win.document.getElementById("bod").style.backgroundColor = "#46664d";
                    MmNNN();
                }
                MNw -= mV;
            }
            return 1;
        };;

        function VNn(Nv) {
            myply.VWv(Nv, myply.NVMMW);
            var vnm = 0;
            if (mVwVw.mw() === 1) {
                vnm = 1;
            }
            if (playbutt.mw() === 1) {
                vnm = 1;
            }
            if (NVn.mw() === 1) {
                vnm = 1;
            }
            if (VNWMN.mw() === 1) {
                vnm = 1;
            }
            if (VnmWw.mw() === 1) {
                vnm = 1;
            }
            if (nMNNN.mw() === 1) {
                vnm = 1;
            }
            if (vVNnM.mw() === 1) {
                vnm = 1;
            }
            if (NvW.mw() === 1) {
                vnm = 1;
            }
            if (VmwMm.mw() === 1) {
                vnm = 1;
            }
            if (vvWWW.mw() === 1) {
                vnm = 1;
            }
            if (wnm.mw() === 1) {
                vnm = 1;
            }
            if (VMm.mw() === 1) {
                vnm = 1;
            }
            if (nvWwv.mw() === 1) {
                vnm = 1;
            }
            if (WwWvv.mw() === 1) {
                vnm = 1;
            }
            if (wvmmM.mw() === 1) {
                vnm = 1;
            }
            if (mNVWV.mw() === 1) {
                vnm = 1;
            }
            if (NnM.mw() === 1) {
                vnm = 1;
            }
            if (vvmMm.mw() === 1) {
                vnm = 1;
            }
            wvmwM.mw();
            wMMNm.mw();
        };;

        function vNm(Nv) {
            myply.VWv(Nv, myply.MnNNW);
            var vnm = 0;
            if (mVwVw.mw() === 1) {
                vnm = 1;
                var MwWMw = win.open("https://iogames.space", "_blank");
            }
            //playbutt.mw() === 1
            if (playbutt.mw() === 1) {
                vnm = 1;
                 //function to play 
                VVMVn();
                audio.VnV(audio.ww.play, 1, 0);
                //spam delete /* */ then put // before VVMVn()'
                /* 
                
                var i = 1;

                function myLoop() {
                  setTimeout(function() {
                    VVMVn();   //  your code here
                    i++;
                    if (i < 99999999999999999999) {
                      myLoop();
                    }
                  }, 10)
                }
                
                myLoop();

                */

            }
            if (NVn.mw() === 1) {
                vnm = 1;
                var MwWMw = win.open("https://twitter.com/lapamauve", "_blank");
            }
            if (VNWMN.mw() === 1) {
                vnm = 1;
                var MwWMw = win.open(" https://www.facebook.com/limaxio-571818073000979", "_blank");
            }
            if (VnmWw.mw() === 1) {
                vnm = 1;
                var MwWMw = win.open("https://youtube.com/c/LapaMauve", "_blank");
            }
            if (nMNNN.mw() === 1) {
                vnm = 1;
                var MwWMw = win.open("https://www.reddit.com/r/devastio/", "_blank");
            }
            if (vVNnM.mw() === 1) {
                vnm = 1;
                var MwWMw = win.open("https://discord.gg/V4KXEwr", "_blank");
            }
            if (NvW.mw() === 1) {
                vnm = 1;
                if (wmw.Vnn !== 0) {
                    if (((nv.state & nMV.WWvNw) === 0) && ((nv.state & nMV.mWWwm) === 0)) {
                        wmw.Vnn = 0;
                        audio.VnV(audio.ww.button, 1, 0);
                        VMm.show();
                        wnm.show();
                        win.document.getElementById("serverList").innerHTML = wmw.MnMWn;
                        win.document.getElementById("servers").selectedIndex = wmw.WNMNN;
                        WMM();
                    }
                }
            }
            if (VmwMm.mw() === 1) {
                vnm = 1;
                if ((0 && (wmw.Vnn !== 1)) && (wmw.NMMwM === 1)) {
                    if (((nv.state & nMV.WWvNw) === 0) && ((nv.state & nMV.mWWwm) === 0)) {
                        wmw.NwMmw = 0;
                        wmw.Vnn = SERVG.VNVWN;
                        audio.VnV(audio.ww.button, 1, 0);
                        VMm.vnN();
                        wnm.vnN();
                        wmw.MnMWn = win.document.getElementById("serverList").innerHTML;
                        wmw.WNMNN = win.document.getElementById("servers").selectedIndex;
                        win.document.getElementById("serverList").innerHTML = wmw.WMmnV;
                        var vv = 0;
                        var vvvNm = 0;
                        for (var place in wmw.wNW) {
                            if (place === nv.servers[wmw.WNMNN][4]) {
                                wmw.NwMmw = win.Math.floor(win.Math.random() * wmw.wNW[place].length);
                                vvvNm = vv;
                                break;
                            }
                            vv++;
                        };
                        win.document.getElementById("servers").selectedIndex = vvvNm;
                        WMM();
                    }
                }
            }
            if (vvWWW.mw() === 1) {
                vnm = 1;
                if ((wmw.Vnn !== 1) && (wmw.NMMwM === 1)) {
                    if (((nv.state & nMV.WWvNw) === 0) && ((nv.state & nMV.mWWwm) === 0)) {
                        wmw.NwMmw = 0;
                        wmw.Vnn = SERVG.VMnnw;
                        audio.VnV(audio.ww.button, 1, 0);
                        VMm.vnN();
                        wnm.vnN();
                        wmw.MnMWn = win.document.getElementById("serverList").innerHTML;
                        wmw.WNMNN = win.document.getElementById("servers").selectedIndex;
                        win.document.getElementById("serverList").innerHTML = wmw.mVNmM;
                        var vvvNm = win.Math.floor(win.Math.random() * 1);
                        win.document.getElementById("servers").selectedIndex = vvvNm;
                        WMM();
                    }
                }
            }
            if (wnm.mw() === 1) {
                vnm = 1;
                if ((wmw.NMMwM !== 0) && (wmw.Vnn === 0)) {
                    if (((nv.state & nMV.WWvNw) === 0) && ((nv.state & nMV.mWWwm) === 0)) {
                        wmw.NwMmw = 0;
                        wmw.NMMwM = 0;
                        audio.VnV(audio.ww.button, 1, 0);
                        NvW.vnN();
                        VmwMm.vnN();
                        vvWWW.vnN();
                        wmw.MnMWn = win.document.getElementById("serverList").innerHTML;
                        wmw.WNMNN = win.document.getElementById("servers").selectedIndex;
                        win.document.getElementById("serverList").innerHTML = wmw.MWMNV;
                        wmw.NwMmw = 0;
                        win.document.getElementById("servers").selectedIndex = 0;
                        WMM();
                    }
                }
            }
            if (VMm.mw() === 1) {
                vnm = 1;
                if ((wmw.NMMwM !== 1) && (wmw.Vnn === 0)) {
                    if (((nv.state & nMV.WWvNw) === 0) && ((nv.state & nMV.mWWwm) === 0)) {
                        wmw.NMMwM = 1;
                        wmw.Vnn = 0;
                        audio.VnV(audio.ww.button, 1, 0);
                        NvW.show();
                        vvWWW.show();
                        win.document.getElementById("serverList").innerHTML = wmw.MnMWn;
                        win.document.getElementById("servers").selectedIndex = wmw.WNMNN;
                        WMM();
                    }
                }
            }
            if (nvWwv.mw() === 1) {
                vnm = 1;
                var MwWMw = win.open("http://limax.io", "_blank");
            }
            if (WwWvv.mw() === 1) {
                vnm = 1;
                var MwWMw = win.open("http://oib.io", "_blank");
            }
            if (wvmmM.mw() === 1) {
                vnm = 1;
                var MwWMw = win.open("http://starve.io", "_blank");
            }
            if (mNVWV.mw() === 1) {
                vnm = 1;
                var MwWMw = win.open("https://nend.io", "_blank");
            }
            if (NnM.mw() === 1) {
                vnm = 1;
                var MwWMw = win.open("https://devast.io/private-server", "_blank");
            }
            if (vvmMm.mw() === 1) {
                vnm = 1;
                wmw.NVv(mapeditor);
                audio.VnV(audio.ww.play, 1, 0);
            }
            if ((wvmwM.mw() === 1) || (wMMNm.mw() === 1)) {
                var MwWMw = win.open(WWNWM.WwWVn, "_blank");
            };
        };;

        function wVv(Nv) {
            myply.VWv(Nv, myply.wwwmw);
            var vnm = 0;
            if (mVwVw.mw() === 1) {
                vnm = 1;
            }
            if (playbutt.mw() === 1) {
                vnm = 1;
            }
            if (NVn.mw() === 1) {
                vnm = 1;
            }
            if (VNWMN.mw() === 1) {
                vnm = 1;
            }
            if (VnmWw.mw() === 1) {
                vnm = 1;
            }
            if (nMNNN.mw() === 1) {
                vnm = 1;
            }
            if (vVNnM.mw() === 1) {
                vnm = 1;
            }
            if (NvW.mw() === 1) {
                vnm = 1;
            }
            if (VmwMm.mw() === 1) {
                vnm = 1;
            }
            if (vvWWW.mw() === 1) {
                vnm = 1;
            }
            if (wnm.mw() === 1) {
                vnm = 1;
            }
            if (VMm.mw() === 1) {
                vnm = 1;
            }
            if (nvWwv.mw() === 1) {
                vnm = 1;
            }
            if (WwWvv.mw() === 1) {
                vnm = 1;
            }
            if (wvmmM.mw() === 1) {
                vnm = 1;
            }
            if (mNVWV.mw() === 1) {
                vnm = 1;
            }
            if (NnM.mw() === 1) {
                vnm = 1;
            }
            if (vvmMm.mw() === 1) {
                vnm = 1;
            }
            wvmwM.mw();
            wMMNm.mw();
        };;

        function WwW(Nv) {
            if (Nv.touches.length > 0) {
                myply.VWn(NWV, Nv, Nv.touches[0]);
                VNn(NWV);
            }
        };;

        function nMN(Nv) {
            vNm(NWV);
        };;

        function Www(Nv) {
            if (Nv.touches.length > 0) {
                myply.VWn(NWV, Nv, Nv.touches[0]);
                vNm(NWV);
            }
        };;

        function vnv(Nv) {
            if (Nv.touches.length > 0) {
                myply.VWn(NWV, Nv, Nv.touches[0]);
                wVv(NWV);
            }
        };;

        function MmNNN() {
            if (vNv === 0) win.addEventListener('mousedown', VNn, false);
            if (vNv === 0) win.addEventListener('mouseup', vNm, false);
            if (vNv === 0) win.addEventListener('mousemove', wVv, false);
            if (vNv === 1) win.addEventListener('touchstart', WwW, false);
            if (vNv === 1) win.addEventListener('touchend', nMN, false);
            if (vNv === 1) win.addEventListener('touchcancel', Www, false);
            if (vNv === 1) win.addEventListener('touchmove', vnv, false);
        };;

        function VVwMW() {
            if (vNv === 0) win.removeEventListener('mousedown', VNn, false);
            if (vNv === 0) win.removeEventListener('mouseup', vNm, false);
            if (vNv === 0) win.removeEventListener('mousemove', wVv, false);
            if (vNv === 1) win.removeEventListener('touchstart', WwW, false);
            if (vNv === 1) win.removeEventListener('touchend', nMN, false);
            if (vNv === 1) win.removeEventListener('touchcancel', Www, false);
            if (vNv === 1) win.removeEventListener('touchmove', vnv, false);
        };;
        return {
            NVv: NVv,
            vnV: vnV,
            mnN: mnN,
            update: WMM,
            NM: NM
        };
    })();
    var windowobjects = (function() {
        function Wnn(Mnn) {
            win.console.log("onError", Mnn);
            if (SERVG.Vnn === 1) NVv(WvvMV);
            else NVv(nmmVv);
        };;

        function NvN() {};;

        function Wnmnv() {
            return NmW;
        };;

        function MvN() {
            return NmW & craftwin;
        };;
        var nMnnm = null;
        var mmnmw = 0;
        var NmW = 0;
        var bordmapwin = 0;
        var settingwin = 0;
        var craftwin = 0;
        var containerwin = 0;
        var teamwin = 0;
        var MNnnv = 0;

        function MVVMv(NWNVm) {
            nVN();
            NmW = 1;
            if (NWNVm === 1) craftwin = 1;   //craftwin - craft window
            else if (NWNVm === 2) containerwin = 1;    //containerwin - container window
        };;

        function nVN() {
            NmW = 0;
            closebutt.NNv(vM.Wmm);
            bordmapwin = 0;
            settingwin = 0;
            craftwin = 0;
            containerwin = 0;
            teamwin = 0;
            SERVG.MNNMM();
        };;
        var addtimbutt = vM.vMM(63, 28, ["img/addteam-button-out.png", "img/addteam-button-in.png", "img/addteam-button-click.png"]);
        var leavebutt = vM.vMM(44, 33, ["img/leave-button-out.png", "img/leave-button-in.png", "img/leave-button-click.png"]);
        var lockbutt = vM.vMM(44, 33, ["img/lockteam-button-out.png", "img/lockteam-button-in.png", "img/lockteam-button-click.png"]);
        var unlockbutt = vM.vMM(44, 33, ["img/unlockteam-button-out.png", "img/unlockteam-button-in.png", "img/unlockteam-button-click.png"]);
        var deletebutt = vM.vMM(44, 33, ["img/delete-button-out.png", "img/delete-button-in.png", "img/delete-button-click.png"]);
        var deletebuttout = vM.vMM(44, 33, ["img/delete-button-out.png", "img/delete-button-in.png", "img/delete-button-click.png"]);
        var joinbutt = vM.vMM(44, 33, ["img/join-button-out.png", "img/join-button-in.png", "img/join-button-click.png"]);
        var craftbutt = vM.vMM(71, 46, ["img/craft-button-out.png", "img/craft-button-in.png", "img/craft-button-click.png"]);
        var cancelbutt = vM.vMM(71, 46, ["img/cancel-craft-button-out.png", "img/cancel-craft-button-in.png", "img/cancel-craft-button-click.png"]);
        var unlockbuttout = vM.vMM(71, 46, ["img/unlock-button-out.png", "img/unlock-button-in.png", "img/unlock-button-click.png"]);
        var bagbutt = vM.vMM(64, 63, ["img/bag-button-out.png", "img/bag-button-in.png", "img/bag-button-click.png"]);
        bagbutt.open = 0;
        var wnV = [];
        var NNm = [];
        var nmMMm = 0;
        var closebutt = vM.vMM(43, 43, ["img/close-box-out.png", "img/close-box-in.png", "img/close-box-click.png"]);
        var highpartout = [wN.wvv("img/high-particules-out.png"), wN.wvv("img/high-particules-in.png"), wN.wvv("img/high-particules-click.png")];
        var joinbuttout = [wN.wvv("img/join-button-out.png"), wN.wvv("img/join-button-in.png"), wN.wvv("img/join-button-click.png")];
        var removebuttout = [wN.wvv("img/remove-button-out.png"), wN.wvv("img/remove-button-in.png"), wN.wvv("img/remove-button-click.png")];
        var wVwnm = vM.vMM(54, 42, null, highpartout);
        var vWmmV = [wN.wvv("img/low-particules-out.png"), wN.wvv("img/low-particules-in.png"), wN.wvv("img/low-particules-click.png")];
        var VnWMV = vM.vMM(54, 42, null, vWmmV);
        var vVvNM = [wN.wvv("img/no-particules-out.png"), wN.wvv("img/no-particules-in.png"), wN.wvv("img/no-particules-click.png")];
        var wwMwv = vM.vMM(54, 42, null, vVvNM);
        var nwMVN = [wN.wvv("img/fuel-button-out.png"), wN.wvv("img/fuel-button-in.png"), wN.wvv("img/fuel-button-click.png")];
        var VWNWV = vM.vMM(46, 46, null, nwMVN);
        var vnwVW = [wN.wvv("img/fuel1-button-out.png"), wN.wvv("img/fuel1-button-in.png"), wN.wvv("img/fuel1-button-click.png")];
        var WmWwW = vM.vMM(46, 46, null, vnwVW);
        var wnnMw = [wN.wvv("img/energy-cells-button-out.png"), wN.wvv("img/energy-cells-button-in.png"), wN.wvv("img/energy-cells-button-click.png")];
        var WwMvM = vM.vMM(46, 46, null, wnnMw);
        var VVVMw = [wN.wvv("img/high-resolution-out.png"), wN.wvv("img/high-resolution-in.png"), wN.wvv("img/high-resolution-click.png")];
        var wWNnw = vM.vMM(54, 42, null, VVVMw);
        var wmnmv = [wN.wvv("img/medium-resolution-out.png"), wN.wvv("img/medium-resolution-in.png"), wN.wvv("img/medium-resolution-click.png")];
        var nvwMN = vM.vMM(54, 42, null, wmnmv);
        var vmVnn = [wN.wvv("img/low-resolution-out.png"), wN.wvv("img/low-resolution-in.png"), wN.wvv("img/low-resolution-click.png")];
        var MNVVn = vM.vMM(54, 42, null, vmVnn);
        var NwVwn = [wN.wvv("img/azerty-button-out.png"), wN.wvv("img/azerty-button-in.png"), wN.wvv("img/azerty-button-click.png")];
        var VmvmN = vM.vMM(81, 33, null, NwVwn);
        var NMnMN = [wN.wvv("img/qwerty-button-out.png"), wN.wvv("img/qwerty-button-in.png"), wN.wvv("img/qwerty-button-click.png")];
        var WMVVn = vM.vMM(87, 33, null, NMnMN);
        var soundonbutt = [wN.wvv("img/sound-on-out.png"), wN.wvv("img/sound-on-in.png"), wN.wvv("img/sound-on-click.png")];
        var soundoffbutt = [wN.wvv("img/sound-off-out.png"), wN.wvv("img/sound-off-in.png"), wN.wvv("img/sound-off-click.png")];
        var wvNNV = vM.vMM(51, 36, null, soundonbutt);
        var WVnnn = vM.vMM(51, 36, null, soundoffbutt);
        var NmVWV = vM.vMM(51, 36, null, soundonbutt);
        var vVMWm = vM.vMM(51, 36, null, soundoffbutt);
        var MNWwn = [];
        var MmV = -1;
        var NWmNn = -1;
        var nMNmW = wN.wvv("img/inv-empty.png");
        var WwvNM = [nMNmW, nMNmW, nMNmW];
        var inventory = [];
        var nvV = [];
        var WVn = [];
        var NMV = [];
        var VnmwN = [];
        var nmMvw = [];
        var WvNMn = [];
        var mwV = [];
        var vwvvm = vM.vMM(58, 58, null, WwvNM);
        var vwn = [];
        var WMn = [];
        var mWM = 0;
        var MWVNw = 0;
        var NVNwm = 0;
        var MMMvM = 0;
        var vmWNW = 0;
        var NnVMv = 0;
        var WNmmw = 0;
        var nvnNv = 0;

        function NnnNW() {
            if ((myply.state === myply.NVMMW) && (SERVG.ME.click === 0)) {
                if (SERVG.ME.wvM === 1) {
                    SERVG.ME.click = -1;
                    if (SERVG.ME.nwVMm === 1) nv.Mmn(win.JSON.stringify([14, SERVG.ME.nvMwN, SERVG.ME.NNV, SERVG.ME.Vmm]));
                } else {
                    SERVG.ME.click = 1;
                    SERVG.mvn = -1;
                    nv.srvclick();
                }
            } else if (myply.state === myply.MnNNW) {
                if (SERVG.ME.wvM === 1) {
                    nmMMm = 0;
                    SERVG.ME.click = 0;
                } else if (SERVG.ME.click === 1) {
                    nmMMm = 0;
                    SERVG.ME.click = 0;
                    nv.wWnMM();
                } else if (nmMMm === 1) {
                    SERVG.ME.click = 1;
                    SERVG.mvn = -1;
                    nv.srvclick();
                }
            }
        };;

        function vWMVN() {
            nv.update();
            if (mV > 5000) nv.Mmn("[20]");
            if (mmnmw === 0) {
                nv.sendkey();
                nv.srvshift();
            }
            if (myply.state === myply.NVMMW) nv.nNNVN();
            else nv.WmNmn();
            NnnNW();
        };;
        var vvMMv;
        var settingbox;
        var chestbox;
        var craftbox;
        var bordermap;
        var minimap;
        var leaderboard;
        var teambox;
        var teammemberbox;
        var fullscreenimg;
        var craftbutton;
        var settingsimg;
        var minimapbutt;
        var teambutt;
        var leaderboardbutt;
        var leaderboardbutt2;
        var chat;
        var mnnNv;
        var NWmmW;

        function vnV() {
            nMnnm = win.document.getElementById("chatInput");
            var wMv = 68;
            var vvv = VVM[mnW].vWMvM + 8;
            for (place = 0; place < vvv; place++) inventory.push(vM.vMM(wMv, wMv, null, WwvNM));
            for (place = 0; place < 4; place++) mwV.push(vM.vMM(wMv, wMv, null, WwvNM));
            wMv = 49;
            for (place = 0; place < 35; place++) nvV.push(vM.vMM(wMv, wMv, null, WwvNM));
            wMv = 40;
            for (place = 0; place < 5; place++) WVn.push(vM.vMM(wMv, wMv, null, WwvNM));
            for (place = 0; place < 4; place++) NMV.push(vM.vMM(wMv, wMv, null, WwvNM));
            for (place = 0; place < 3; place++) VnmwN.push(vM.vMM(wMv, wMv, null, WwvNM));
            for (place = 0; place < 9; place++) WvNMn.push(vM.vMM(29, 27, null, removebuttout));
            for (place = 0; place < 18; place++) nmMvw.push(vM.vMM(44, 33, null, joinbuttout));
            windowobjects.closebutt = nVN;
            windowobjects.nwmVV = MVVMv;
            windowobjects.inventory = inventory;
            windowobjects.nvV = nvV;
            windowobjects.WVn = WVn;
            windowobjects.vwvvm = vwvvm;
            windowobjects.NMV = NMV;
            windowobjects.VnmwN = VnmwN;
            windowobjects.mwV = mwV;
            windowobjects.WvNMn = WvNMn;
            windowobjects.join = nmMvw;
            windowobjects.MvN = MvN;
            windowobjects.Wnmnv = Wnmnv;
            windowobjects.WmN = "";
            windowobjects.nVNMM = joinbutt;
            windowobjects.nWvnm = deletebuttout;
            windowobjects.vwn = vwn;
            windowobjects.WMn = WMn;
            windowobjects.mNNwM = 0;
            windowobjects.nNwMM = 0;
            windowobjects.vwVnW = 0;
            windowobjects.mnNnW = 0;
            windowobjects.mmNWn = 0;
            windowobjects.vmwNV = 0;
            wnV[Ww.building] = vM.vMM(42, 42, ["img/building-button-out.png", "img/building-button-in.png", "img/building-button-click.png"]);
            wnV[Ww.skill] = vM.vMM(42, 42, ["img/skill-button-out.png", "img/skill-button-in.png", "img/skill-button-click.png"]);
            wnV[Ww.clothe] = vM.vMM(42, 42, ["img/clothe-button-out.png", "img/clothe-button-in.png", "img/clothe-button-click.png"]);
            wnV[Ww.plant] = vM.vMM(42, 42, ["img/plant-button-out.png", "img/plant-button-in.png", "img/plant-button-click.png"]);
            wnV[Ww.medicine] = vM.vMM(42, 42, ["img/medecine-button-out.png", "img/medecine-button-in.png", "img/medecine-button-click.png"]);
            wnV[Ww.resources] = vM.vMM(42, 42, ["img/resources-button-out.png", "img/resources-button-in.png", "img/resources-button-click.png"]);
            wnV[Ww.survival] = vM.vMM(42, 42, ["img/survival-button-out.png", "img/survival-button-in.png", "img/survival-button-click.png"]);
            wnV[Ww.tool] = vM.vMM(42, 42, ["img/tool-button-out.png", "img/tool-button-in.png", "img/tool-button-click.png"]);
            wnV[Ww.weapon] = vM.vMM(42, 42, ["img/weapon-button-out.png", "img/weapon-button-in.png", "img/weapon-button-click.png"]);
            wnV[Ww.cable] = vM.vMM(42, 42, ["img/cable-button-out.png", "img/cable-button-in.png", "img/cable-button-click.png"]);
            NNm[station.own] = vM.vMM(42, 42, ["img/own-button-out.png", "img/own-button-in.png", "img/own-button-click.png"]);
            NNm[station.firepart] = vM.vMM(42, 42, ["img/fire-button-out.png", "img/fire-button-in.png", "img/fire-button-click.png"]);
            NNm[station.workbench] = vM.vMM(42, 42, ["img/workbench1-button-out.png", "img/workbench1-button-in.png", "img/workbench1-button-click.png"]);
            NNm[station.bbq] = vM.vMM(42, 42, ["img/bbq-button-out.png", "img/bbq-button-in.png", "img/bbq-button-click.png"]);
            NNm[station.composter] = vM.vMM(42, 42, ["img/composter-button-out.png", "img/composter-button-in.png", "img/composter-button-click.png"]);
            NNm[station.weavingmachine] = vM.vMM(42, 42, ["img/weaving-machine-button-out.png", "img/weaving-machine-button-in.png", "img/weaving-machine-button-click.png"]);
            NNm[station.weldingmachine] = vM.vMM(42, 42, ["img/welding-machine-button-out.png", "img/welding-machine-button-in.png", "img/welding-machine-button-click.png"]);
            NNm[station.researchbench] = vM.vMM(42, 42, ["img/workbench2-button-out.png", "img/workbench2-button-in.png", "img/workbench2-button-click.png"]);
            NNm[station.smelter] = vM.vMM(42, 42, ["img/smelter-button-out.png", "img/smelter-button-in.png", "img/smelter-button-click.png"]);
            NNm[station.teslabench] = vM.vMM(42, 42, ["img/workbench3-button-out.png", "img/workbench3-button-in.png", "img/workbench3-button-click.png"]);
            NNm[station.agitator] = vM.vMM(42, 42, ["img/agitator-button-out.png", "img/agitator-button-in.png", "img/agitator-button-click.png"]);
            NNm[station.extractor] = vM.vMM(42, 42, ["img/extractor-button-out.png", "img/extractor-button-in.png", "img/extractor-button-click.png"]);
            vvMMv = vM.mVV(255, 174, "img/profile-player2.png");
            settingbox = vM.mVV(269, 267, "img/settings-box.png");
            chestbox = vM.mVV(162, 165, "img/chest-box4.png");
            craftbox = vM.mVV(595, 405, "img/craftbox2.png");
            bordermap = vM.mVV(412, 412, "img/borderBigMinimap2.png");
            minimap = vM.mVV(128, 128, "img/minimap.png");
            leaderboard = vM.mVV(233, 246, "img/leaderboard.png");
            teambox = vM.mVV(516, 275, "img/jointeam-box.png");
            teammemberbox = vM.mVV(513, 150, "img/memberteam-box.png");
            fullscreenimg = vM.vMM(40, 40, ["img/full-screen-out.png", "img/full-screen-in.png", "img/full-screen-click.png"]);
            craftbutton = vM.vMM(64, 63, ["img/craftbox-button-out.png", "img/craftbox-button-in.png", "img/craftbox-button-click.png"]);
            settingsimg = vM.vMM(40, 40, ["img/settings-out.png", "img/settings-in.png", "img/settings-click.png"]);
            minimapbutt = vM.vMM(40, 40, ["img/minimap-button-out.png", "img/minimap-button-in.png", "img/minimap-button-click.png"]);
            teambutt = vM.vMM(40, 40, ["img/team-button-out.png", "img/team-button-in.png", "img/team-button-click.png"]);
            leaderboardbutt = vM.vMM(34, 33, ["img/close-leaderboard-out.png", "img/close-leaderboard-in.png", "img/close-leaderboard-click.png"]);
            //myzoomimg
            zoombutton = vM.vMM(26.5, 26.5, ["img/zoom-button-out.png", "img/zoom-button-in.png", "img/zoom-button-click.png"]);
            unzoombutton = vM.vMM(26.5, 26.5, ["img/unzoom-button-out.png", "img/unzoom-button-in.png", "img/unzoom-button-click.png"]);
            leaderboardbutt2 = vM.vMM(34, 33, ["img/open-leaderboard-out.png", "img/open-leaderboard-in.png", "img/open-leaderboard-click.png"]);
            chat = win.document.getElementById("chat");
            mnnNv = chat.style;
            NWmmW = {
                x: 0,
                y: 0
            };
        };;
        var MVv;
        var NWV = new myply.vNnMv;
        var nNw = new keys.VmwWV;
        var VWm = 2000;
        var WWN = 0;
        var VNvnM = WNW.mWV.wWM;
        var Nmv = 1000;
        var mwm = 0;
        var WVWWm = WNW.mWV.wMn;
        var WwM = 0;
        var MNw = 0;
        var mwn = win.undefined;

        function mnN() {
            nv.Wnn = Wnn;
            nv.NvN = NvN;
            if (clint.getItem("showLeaderboard") === "0") {
                leaderboardbutt.vnN();
                leaderboardbutt2.show();
            } else {
                leaderboardbutt2.vnN();
                leaderboardbutt.show();
            }
            win.document.getElementById("bod").style.backgroundColor = "#46664D";
            nmMMm = 0;
            wmw.vWwVM++;
            windowobjects.WmN = "";
            windowobjects.WwmNM = 0;
            vWn.nMvWM();
            if (SERVG.Vnn === SERVG.VNVWN) {
                teambutt.vnN();
                craftbutton.show();
            } else if (SERVG.ME.GHOUL > 0) {
                win.console.log("HERE");
                teambutt.vnN();
                craftbutton.vnN();
            } else {
                teambutt.show();
                craftbutton.show();
            }
            wN.MNwmM(windowobjects);
            MNw = Nmv;
            WwM = Nmv;
            mwn = WVWWm;
            mwm = 1;
            WMM();
        };;

        function NVv(wMN) {
            mmnmw = 0;
            nVN();
            vWn.NvwNv();
            MVv = wMN;
            VVwMW();
            MNw = VWm;
            WwM = VWm;
            mwn = VNvnM;
            WWN = 1;
        };;

        function WMM() {
            var vMm = 0;
            var wwv = 0;
            if (MNw > 0) {
                wwv = nwW;
                var vnw = mwn(1 - (MNw / WwM));
                if (vnw === 1) MNw = 0;
                if (mwm === 1) vnw = 1 - win.Math.abs(vnw);
                vMm *= vnw;
                wwv *= vnw;
            }
            vvMMv.mv.x = win.Math.floor(5 * mn) + vMm;
            vvMMv.mv.y = ((nwW - win.Math.floor(174 * mn)) + win.Math.floor(-7 * mn)) + wwv;

            //myzoompos
            zoombutton.mv.x = (nvn - win.Math.floor(26.5 * mn)) + win.Math.floor(-70 * mn);
            zoombutton.mv.y = (nwW - win.Math.floor(26.5 * mn)) + win.Math.floor(-7 * mn);
            unzoombutton.mv.x = zoombutton.mv.x + win.Math.floor(-27 * mn);
            unzoombutton.mv.y = (nwW - win.Math.floor(26.5 * mn)) + win.Math.floor(-7 * mn);

            settingbox.mv.x = (mmw - win.Math.floor(134 * mn)) + vMm;
            settingbox.mv.y = win.Math.max(0, VvN - win.Math.floor(133 * mn)) + wwv;
            chestbox.mv.x = (mmw - win.Math.floor(81 * mn)) + vMm;
            chestbox.mv.y = win.Math.max(0, VvN - win.Math.floor(82 * mn)) + wwv;
            craftbox.mv.x = (mmw - win.Math.floor(297 * mn)) + vMm;
            craftbox.mv.y = win.Math.max(0, VvN - win.Math.floor(202 * mn)) + wwv;
            bordermap.mv.x = (mmw - win.Math.floor(206 * mn)) + vMm;
            bordermap.mv.y = win.Math.max(0, VvN - win.Math.floor(206 * mn)) + wwv;
            minimap.mv.x = win.Math.floor(5 * mn) - vMm;
            minimap.mv.y = win.Math.floor(5 * mn) - wwv;
            leaderboard.mv.x = ((nvn - win.Math.floor(233 * mn)) + win.Math.floor(-6 * mn)) - vMm;
            leaderboard.mv.y = win.Math.floor(5 * mn) - wwv;
            teambox.mv.x = (mmw - win.Math.floor(258 * mn)) - vMm;
            teambox.mv.y = win.Math.max(0, VvN - win.Math.floor(137 * mn)) - wwv;
            teammemberbox.mv.x = (mmw - win.Math.floor(256 * mn)) - vMm;
            teammemberbox.mv.y = win.Math.max(0, VvN - win.Math.floor(75 * mn)) - wwv;
            fullscreenimg.mv.x = minimap.mv.x + win.Math.floor(126 * mn);
            fullscreenimg.mv.y = minimap.mv.y;
            craftbutton.mv.x = fullscreenimg.mv.x + win.Math.floor(50 * mn);
            craftbutton.mv.y = fullscreenimg.mv.y;
            settingsimg.mv.x = fullscreenimg.mv.x;
            settingsimg.mv.y = fullscreenimg.mv.y + win.Math.floor(44.5 * mn);
            minimapbutt.mv.x = settingsimg.mv.x;
            minimapbutt.mv.y = settingsimg.mv.y + win.Math.floor(44.5 * mn);
            teambutt.mv.x = minimap.mv.x;
            teambutt.mv.y = minimap.mv.y + win.Math.floor(127 * mn);
            leaderboardbutt.mv.x = ((nvn - win.Math.floor(34 * mn)) + win.Math.floor(-7 * mn)) - vMm;
            leaderboardbutt.mv.y = win.Math.floor(5 * mn) - wwv;
            leaderboardbutt2.mv.x = leaderboardbutt.mv.x;
            leaderboardbutt2.mv.y = leaderboardbutt.mv.y;
            NWmmW.x = (mmw - win.Math.floor(150 * mn)) + vMm;
            mnnNv.left = NWmmW.x + "px";
            NWmmW.y = (win.Math.max(0, VvN - 12) + win.Math.floor(150 * mn)) + wwv;
            mnnNv.top = NWmmW.y + "px";
            var wvnVv = win.document.getElementById("chatInput").style;
            var WW = win.Math.floor(250 * mn);
            var vN = win.Math.floor(20 * mn);
            var MMM = win.Math.floor(mmw - (WW / 2)) + "px";
            var nNV = win.Math.floor(((VvN - (vN / 2)) + (mn * 85)) + wwv) + "px";
            vN = vN + "px";
            WW = WW + "px";
            mnnNv.width = WW;
            mnnNv.height = vN;
            mnnNv.left = MMM;
            mnnNv.top = nNV;
            wvnVv.width = WW;
            wvnVv.height = vN;
            wvnVv.fontSize = win.Math.floor(14 * mn) + "px";
        };;

        function NM() {
            if (MMVwV() === 0) return;
            vWMVN();
            Mm.clearRect(0, 0, nvn, nwW);
            SERVG.NNNMv();
            SERVG.WnMvm();
            Mw.VMMWm();
            Mw.mvn();
            Mw.MnW(vvMMv.mv.x, vvMMv.mv.y);
            Mw.MvV(minimap.mv.x, minimap.mv.y);
            Mw.inventory(vwn, WMn, MmV, bagbutt);
            vvMMv.NM();
            minimap.NM();
            fullscreenimg.NM();
            craftbutton.NM();
            settingsimg.NM();
            minimapbutt.NM();
            zoombutton.NM();
            unzoombutton.NM();
            teambutt.NM();
            Mw.VnVVN(vvMMv.mv.x, vvMMv.mv.y);
            if (SERVG.Vnn !== SERVG.VNVWN) {
                if (leaderboardbutt.mv.disable === 0) {
                    leaderboard.NM();
                    Mw.leaderboard(leaderboard.mv.x, leaderboard.mv.y);
                    leaderboardbutt.NM();
                } else leaderboardbutt2.NM();
            }
            if (NmW === 1) {
                if (bordmapwin === 1) Mw.NNMwm(bordermap, closebutt);
                else if (settingwin === 1) Mw.MnwNw(settingbox, wWNnw, nvwMN, MNVVn, VmvmN, WMVVn, wvNNV, WVnnn, NmVWV, vVMWm, closebutt, wVwnm, VnWMV, wwMwv);
                else if (craftwin === 1) Mw.nvV(craftbox, closebutt, wnV, craftbutt, cancelbutt, unlockbuttout, NNm, vwvvm, vwn, WMn, VWNWV, WmWwW, WwMvM, NWmNn);
                else if (containerwin === 1) Mw.mwV(chestbox, closebutt, vwn, WMn);
                else if (teamwin === 1) Mw.clan(closebutt, teambox, teammemberbox, leavebutt, addtimbutt, lockbutt, unlockbutt, deletebutt);
            } else if (vNv === 1) {
                if ((((keys.leftgo() + keys.rightgo()) + keys.straightgo()) + keys.downgo()) >= 1) {
                    Mm.globalAlpha = 0.3;
                    var Wv = nvm - (VNwMw * 1.5);
                    var wM = MMwnm + (VNwMw / 4);
                    wN.VWVVm(Mm, Wv, wM, 60);
                    wN.mvWVv(Mm, "#000000");
                    wN.VWVVm(Mm, Wv + ((win.Math.cos(MWVNw) * NVNwm) * mn), wM + ((win.Math.sin(MWVNw) * NVNwm) * mn), 30);
                    wN.mvWVv(Mm, "#FFFFFF");
                    Mm.globalAlpha = 1;
                }
                if (vmWNW === 1) {
                    Mm.globalAlpha = 0.3;
                    var Wv = nvm + (VNwMw * 1.5);
                    var wM = MMwnm + (VNwMw / 4);
                    wN.VWVVm(Mm, Wv, wM, 60);
                    wN.mvWVv(Mm, "#000000");
                    wN.VWVVm(Mm, Wv + ((win.Math.cos(myply.angle) * 25) * mn), wM + ((win.Math.sin(myply.angle) * 25) * mn), 30);
                    wN.mvWVv(Mm, "#FFFFFF");
                    Mm.globalAlpha = 1;
                }
            }
            vWn.nwwnv();
        };;


        function MMVwV() {
            if (WWN === 1) {
                WMM();
                if (MNw < 0) {
                    WWN = 0;
                    fullscreenimg.NNv(vM.Wmm);
                    craftbutton.NNv(vM.Wmm);
                    settingsimg.NNv(vM.Wmm);
                    minimapbutt.NNv(vM.Wmm);
                    teambutt.NNv(vM.Wmm);
                    zoombutton.NNv(vM.Wmm);
                    unzoombutton.NNv(vM.Wmm);
                    leaderboardbutt.NNv(vM.Wmm);
                    leaderboardbutt2.NNv(vM.Wmm);
                    mnnNv.display = "none";
                    MVv.mnN();
                    return 0;
                }
                MNw -= mV;
            } else if (mwm === 1) {
                WMM();
                if (MNw < 0) {
                    mwm = 0;
                    SERVG.ME.VmNwm = win.Date.now();
                    MmNNN();
                }
                MNw -= mV;
            }
            return 1;
        };;

        function VNn(Nv) {
            myply.VWv(Nv, myply.NVMMW);
            var vnm = 0;
            if (fullscreenimg.mw() === 1) {
                vnm = 1;
            }
            if (craftbutton.mw() === 1) {
                vnm = 1;
            }
            if (settingsimg.mw() === 1) {
                vnm = 1;
            }
            if (minimapbutt.mw() === 1) {
                vnm = 1;
            }
            if (zoombutton.mw() === 1) {
                vnm = 1;
            }
            if (unzoombutton.mw() === 1) {
                vnm = 1;
            }
            if (teambutt.mw() === 1) {
                vnm = 1;
            }
            if (leaderboardbutt.mw() === 1) {
                vnm = 1;
            }
            if (leaderboardbutt2.mw() === 1) {
                vnm = 1;
            }
            if (SERVG.ME.wNw !== 0) {
                if ((joinbutt.mw() === 1) || (deletebuttout.mw() === 1)) vnm = 1;
            }
            if (NmW === 1) {
                closebutt.mw();
                if (settingwin === 1) {
                    VmvmN.mw();
                    WMVVn.mw();
                    wWNnw.mw();
                    nvwMN.mw();
                    MNVVn.mw();
                    wvNNV.mw();
                    WVnnn.mw();
                    NmVWV.mw();
                    vVMWm.mw();
                    VnWMV.mw();
                    wVwnm.mw();
                    wwMwv.mw();
                } else if (craftwin === 1) {
                    if (SERVG.ME.nVV === -1) {
                        if ((SERVG.ME.WwVNv === 0) || (SERVG.ME.VVn === 1)) craftbutt.mw();
                        else cancelbutt.mw();
                        if ((((SERVG.ME.Vvw === station.firepart) || (SERVG.ME.Vvw === station.bbq)) || (SERVG.ME.Vvw === station.composter)) && (SERVG.ME.Nn.MNM !== 255)) VWNWV.mw();
                        else if ((((SERVG.ME.Vvw === station.smelter) || (SERVG.ME.Vvw === station.extractor)) || (SERVG.ME.Vvw === station.agitator)) && (SERVG.ME.Nn.MNM !== 255)) WmWwW.mw();
                    } else unlockbuttout.mw();
                    for (var place = 0; place < wnV.length; place++) wnV[place].mw();
                    for (place = 0; place < NNm.length; place++) {
                        if ((SERVG.ME.vWMmW === place) || (place === 0)) NNm[place].mw();
                    }
                    var vvv = SERVG.ME.MNvMn;
                    for (var place = 0; place < vvv; place++) nvV[place].mw();
                    vvv = SERVG.ME.nMnmW;
                    for (place = 0; place < vvv; place++) WVn[place].mw();
                    if (SERVG.ME.VVn === 1) {
                        for (place = 0; place < SERVG.ME.Nn.vvv; place++) NMV[place].mw();
                    }
                    vvv = SERVG.ME.nWwmM;
                    for (place = 0; place < vvv; place++) VnmwN[place].mw();
                    vwvvm.mw();
                }
            }
            //check this
            var NV = SERVG.ME.inventory;
            var vvv = NV.length;
            if ((vvv > 10) && (bagbutt.mw() === 1)) vnm = 1;
            for (var place = 0; place < vvv; place++) {
                if ((place > 9) && (bagbutt.open === 0)) break;
                if (inventory[place].mw() === 1) {
                    vnm = 1;
                    if (NV[place][0] !== 0) {
                        var mmM = SERVG.ME.mmM;
                        if (mmM.vmm === 0) {
                            mmM.vmm = 1;
                            mmM.x = myply.x;
                            mmM.y = myply.y;
                            mmM.id = place;
                        }
                    }
                } else if (containerwin === 1) {
                    var wVMVN = SERVG.ME.mwV;
                    for (var nMm = 0; nMm < 4; nMm++) {
                        if (wVMVN[nMm][0] !== 0) mwV[nMm].mw();
                    }
                } else if (teamwin === 1) {
                    if (SERVG.ME.clan === -1) {
                        addtimbutt.mw();
                        var vv = 0;
                        for (var place = 0; place < nmMvw.length; place++) {
                            if (SERVG.clans[place].MvvWw !== 0) {
                                nmMvw[vv].mw();
                                vv++;
                            }
                        }
                    } else if (SERVG.ME.VVvWM === 1) {
                        lockbutt.mw();
                        unlockbutt.mw();
                        deletebutt.mw();
                        var vv = 0;
                        var clan = SERVG.clans[SERVG.ME.clan];
                        for (var place = 0; place < SERVG.socket.length; place++) {
                            if (place === SERVG.ME.id) {
                                vv++;
                                continue;
                            }
                            var ME = SERVG.socket[place];
                            if ((ME.clan === clan.id) && (ME.wwV === clan.mvN)) {
                                WvNMn[vv].mw();
                                vv++;
                            }
                        }
                    } else leavebutt.mw();
                }
            }
            if ((vnm === 0) && (NmW === 0)) {
                nmMMm = 1;
                if (SERVG.ME.click === -1) SERVG.ME.click = 0;
            } else {
                if (SERVG.ME.click === 0) SERVG.ME.click = -1;
            }
        };;

        function vNm(Nv) {
            myply.VWv(Nv, myply.MnNNW);
            var vnm = 0;
            if (fullscreenimg.mw() === 1) {
                vnm = 1;
                if (MNnnv === 0) {
                    MNnnv = 1;
                    wN.MvMvW();
                    if (SERVG.nVM === 0) VMM.style.backgroundColor = "#3D5942";
                    else VMM.style.backgroundColor = "#0B2129";
                    audio.VnV(audio.ww.button, 1, 0);
                } else {
                    MNnnv = 0;
                    wN.WWNvM();
                    audio.VnV(audio.ww.button, 1, 0);
                }
            }
            if (craftbutton.mw() === 1) {
                vnm = 1;
                if (SERVG.ME.GHOUL === 0) {
                    if (craftwin === 0) {
                        nVN();
                        NmW = 1;
                        craftwin = 1;
                        SERVG.MwM(station.own);
                        audio.VnV(audio.ww.open, 1, 0);
                        return;
                    } else {
                        nVN();
                        audio.VnV(audio.ww.open, 1, 0);
                        return;
                    }
                }
            }
            if (settingsimg.mw() === 1) {
                vnm = 1;
                if (settingwin === 0) {
                    nVN();
                    NmW = 1;
                    settingwin = 1;
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                } else {
                    nVN();
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                }
            }

            if (zoombutton.mw() === 1) {
                vnm = 1;
                if (Mw.scale < 1.5) {
                    Mw.scale += 0.1;
                    audio.VnV(audio.ww.button, 1, 0);
                    unzoombutton.show();
                    if (Mw.scale >= 1.5) zoombutton.mw();
                }
            }
            if (unzoombutton.mw() === 1) {
                vnm = 1;
                if (Mw.scale > -0.95) {
                    if (Mw.scale < 0) Mw.scale -= 0.05;
                    else Mw.scale -= 0.1;
                    audio.VnV(audio.ww.button, 1, 0);
                    zoombutton.show();
                    if (Mw.scale <= -0.95) unzoombutton.mw();
                }
            }

            if (minimapbutt.mw() === 1) {
                vnm = 1;
                if (bordmapwin === 0) {
                    nVN();
                    NmW = 1;
                    bordmapwin = 1;
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                } else {
                    nVN();
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                }
            }
            if (teambutt.mw() === 1) {
                vnm = 1;
                if (teamwin === 0) {
                    nVN();
                    NmW = 1;
                    teamwin = 1;
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                } else {
                    nVN();
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                }
            }
            if (leaderboardbutt.mw() === 1) {
                vnm = 1;
                leaderboardbutt.vnN();
                leaderboardbutt2.show();
                clint.setItem("showLeaderboard", "0");
                audio.VnV(audio.ww.button, 1, 0);
                return;
            }
            if (leaderboardbutt2.mw() === 1) {
                vnm = 1;
                leaderboardbutt2.vnN();
                leaderboardbutt.show();
                clint.setItem("showLeaderboard", "1");
                audio.VnV(audio.ww.button, 1, 0);
                return;
            }
            var mmM = SERVG.ME.mmM;
            if (SERVG.ME.wNw !== 0) {
                if (joinbutt.mw() === 1) {
                    nv.Mmn(win.JSON.stringify([31, SERVG.ME.wNw]));
                    audio.VnV(audio.ww.button, 1, 0);
                    SERVG.MMVmW();
                    return;
                }
                if (deletebuttout.mw() === 1) {
                    audio.VnV(audio.ww.button, 1, 0);
                    SERVG.MMVmW();
                    return;
                }
            }
            if (NmW === 1) {
                if (closebutt.mw() === 1) {
                    nVN();
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                }
                if (settingwin === 1) {
                    WMVVn.NNv(vM.Wmm);
                    VmvmN.NNv(vM.Wmm);
                    wWNnw.NNv(vM.Wmm);
                    nvwMN.NNv(vM.Wmm);
                    MNVVn.NNv(vM.Wmm);
                    wvNNV.NNv(vM.Wmm);
                    WVnnn.NNv(vM.Wmm);
                    NmVWV.NNv(vM.Wmm);
                    vVMWm.NNv(vM.Wmm);
                    wVwnm.NNv(vM.Wmm);
                    VnWMV.NNv(vM.Wmm);
                    wwMwv.NNv(vM.Wmm);
                    if (VmvmN.mw() === 1) {
                        keys.azer();
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (WMVVn.mw() === 1) {
                        keys.wasd();
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (wWNnw.mw() === 1) {
                        wN.NmmvM(1);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (nvwMN.mw() === 1) {
                        wN.NmmvM(2);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (MNVVn.mw() === 1) {
                        wN.NmmvM(3);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (wvNNV.mw() === 1) {
                        audio.Vnwmn(1);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (WVnnn.mw() === 1) {
                        audio.Vnwmn(0);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (NmVWV.mw() === 1) {
                        audio.wNnMM(1);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (vVMWm.mw() === 1) {
                        audio.wNnMM(0);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (VnWMV.mw() === 1) {
                        Mw.wvmnm(1);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (wVwnm.mw() === 1) {
                        Mw.wvmnm(2);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (wwMwv.mw() === 1) {
                        Mw.wvmnm(0);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    }
                    var MMMnn = settingbox.mv;
                    if ((((myply.nVm < MMMnn.x) || (myply.nVm > (MMMnn.x + (234 * mn)))) || (myply.nmW < MMMnn.y)) || (myply.nmW > (MMMnn.y + (232 * mn)))) {
                        nVN();
                        audio.VnV(audio.ww.open, 1, 0);
                        return;
                    }
                } else if (bordmapwin === 1) {
                    var mNMnn = bordermap.mv;
                    if ((((myply.nVm < mNMnn.x) || (myply.nVm > (mNMnn.x + (412 * mn)))) || (myply.nmW < mNMnn.y)) || (myply.nmW > (mNMnn.y + (412 * mn)))) {
                        nVN();
                        audio.VnV(audio.ww.open, 1, 0);
                        return;
                    }
                } else if (craftwin === 1) {
                    if (SERVG.ME.nVV === -1) {
                        if ((SERVG.ME.WwVNv === 0) || (SERVG.ME.VVn === 1)) {
                            if ((SERVG.ME.vVN[SERVG.ME.VNwww] === 1) && (craftbutt.mw() === 1)) {
                                if (SERVG.ME.VVn === 1) {
                                    if ((SERVG.ME.Nn.MNM !== 0) && (SERVG.ME.Nn.vvv < 4)) {
                                        nv.Mmn(win.JSON.stringify([18, SERVG.ME.mMvww]));
                                        audio.VnV(audio.ww.nvV, 0.8, 0);
                                    }
                                } else {
                                    nv.Mmn(win.JSON.stringify([22, SERVG.ME.mMvww]));
                                    audio.VnV(audio.ww.nvV, 0.8, 0);
                                }
                                craftbutt.NNv(vM.Wmm);
                            }
                        } else if (cancelbutt.mw() === 1) {
                            nv.Mmn(win.JSON.stringify([23]));
                            SERVG.ME.WwVNv = 0;
                            cancelbutt.NNv(vM.Wmm);
                            audio.VnV(audio.ww.button, 1, 0);
                        }
                    } else {
                        if (unlockbuttout.mw() === 1) {
                            if (SERVG.ME.vVN[SERVG.ME.VNwww] === 1) {
                                nv.Mmn(win.JSON.stringify([21, SERVG.ME.mMvww]));
                                audio.VnV(audio.ww.nwVvN, 1, 0);
                            }
                        }
                    }
                    if (wnV[Ww.skill].mw() === 1) {
                        SERVG.NVM(Ww.skill);
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (wnV[Ww.building].mw() === 1) {
                        SERVG.NVM(Ww.building);
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (wnV[Ww.clothe].mw() === 1) {
                        SERVG.NVM(Ww.clothe);
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (wnV[Ww.plant].mw() === 1) {
                        SERVG.NVM(Ww.plant);
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (wnV[Ww.medicine].mw() === 1) {
                        SERVG.NVM(Ww.medicine);
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (wnV[Ww.resources].mw() === 1) {
                        SERVG.NVM(Ww.resources);
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (wnV[Ww.cable].mw() === 1) {
                        SERVG.NVM(Ww.cable);
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (wnV[Ww.survival].mw() === 1) {
                        SERVG.NVM(Ww.survival);
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (wnV[Ww.tool].mw() === 1) {
                        SERVG.NVM(Ww.tool);
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (wnV[Ww.weapon].mw() === 1) {
                        SERVG.NVM(Ww.weapon);
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (NNm[station.own].mw() === 1) {
                        SERVG.MwM(station.own);
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (((NNm[station.firepart].mw() === 1) || (NNm[station.bbq].mw() === 1)) || (NNm[station.composter].mw() === 1)) {
                        nv.Mmn(win.JSON.stringify([SERVG.ME.NnN, SERVG.ME.MnMwn, SERVG.ME.MNMvN]));
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (NNm[station.workbench].mw() === 1) {
                        nv.Mmn(win.JSON.stringify([SERVG.ME.NnN, SERVG.ME.MnMwn, SERVG.ME.MNMvN]));
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (NNm[station.weldingmachine].mw() === 1) {
                        nv.Mmn(win.JSON.stringify([SERVG.ME.NnN, SERVG.ME.MnMwn, SERVG.ME.MNMvN]));
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (NNm[station.weavingmachine].mw() === 1) {
                        nv.Mmn(win.JSON.stringify([SERVG.ME.NnN, SERVG.ME.MnMwn, SERVG.ME.MNMvN]));
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (NNm[station.researchbench].mw() === 1) {
                        nv.Mmn(win.JSON.stringify([SERVG.ME.NnN, SERVG.ME.MnMwn, SERVG.ME.MNMvN]));
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (NNm[station.teslabench].mw() === 1) {
                        nv.Mmn(win.JSON.stringify([SERVG.ME.NnN, SERVG.ME.MnMwn, SERVG.ME.MNMvN]));
                        audio.VnV(audio.ww.button, 1, 0);
                    } else if (((NNm[station.smelter].mw() === 1) || (NNm[station.extractor].mw() === 1)) || (NNm[station.agitator].mw() === 1)) {
                        nv.Mmn(win.JSON.stringify([SERVG.ME.NnN, SERVG.ME.MnMwn, SERVG.ME.MNMvN]));
                        audio.VnV(audio.ww.button, 1, 0);
                    } else {
                        var vvv = SERVG.ME.MNvMn;
                        for (var place = 0; place < vvv; place++) {
                            if (nvV[place].mw() === 1) {
                                SERVG.ME.VNwww = place;
                                SERVG.NvwNN(SERVG.ME.NNm[place]);
                                audio.VnV(audio.ww.button, 1, 0);
                                return;
                            }
                        }
                        vvv = SERVG.ME.nMnmW;
                        for (place = 0; place < vvv; place++) {
                            if (WVn[place].mw() === 1) return;
                        }
                        if (SERVG.ME.VVn === 1) {
                            for (place = 0; place < SERVG.ME.Nn.vvv; place++) {
                                if (NMV[place].mw() === 1) {
                                    nv.Mmn(win.JSON.stringify([19, place]));
                                    audio.VnV(audio.ww.button, 1, 0);
                                    return;
                                }
                            }
                            if (((SERVG.ME.Vvw === station.firepart) || (SERVG.ME.Vvw === station.bbq)) || (SERVG.ME.Vvw === station.composter)) {
                                if ((SERVG.ME.Nn.MNM !== 255) && (VWNWV.mw() === 1)) {
                                    nv.Mmn(win.JSON.stringify([24]));
                                    audio.VnV(audio.ww.button, 1, 0);
                                    return;
                                }
                            } else if (((SERVG.ME.Vvw === station.smelter) || (SERVG.ME.Vvw === station.extractor)) || (SERVG.ME.Vvw === station.agitator)) {
                                if ((SERVG.ME.Nn.MNM !== 255) && (WmWwW.mw() === 1)) {
                                    nv.Mmn(win.JSON.stringify([24]));
                                    audio.VnV(audio.ww.button, 1, 0);
                                    return;
                                }
                            } else if (SERVG.ME.Vvw === station.teslabench) {
                                if ((SERVG.ME.Nn.MNM !== 255) && (WwMvM.mw() === 1)) {
                                    nv.Mmn(win.JSON.stringify([24]));
                                    audio.VnV(audio.ww.button, 1, 0);
                                    return;
                                }
                            }
                        }
                        var nNMwN = craftbox.mv;
                        if (((mmM.vmm !== 1) && !Nv.ctrlKey) && ((((myply.nVm < nNMwN.x) || (myply.nVm > (nNMwN.x + (595 * mn)))) || (myply.nmW < nNMwN.y)) || (myply.nmW > (nNMwN.y + (325 * mn))))) {
                            nVN();
                            audio.VnV(audio.ww.open, 1, 0);
                            return;
                        }
                    }
                } else if (containerwin === 1) {
                    var wVMVN = SERVG.ME.mwV;
                    for (var nMm = 0; nMm < 4; nMm++) {
                        if ((wVMVN[nMm][0] !== 0) && (mwV[nMm].mw() === 1)) {
                            nv.Mmn(win.JSON.stringify([27, nMm]));
                            audio.VnV(audio.ww.mmM, 1, 0);
                            return;
                        }
                    }
                } else if (teamwin === 1) {
                    if (SERVG.ME.clan === -1) {
                        if (((addtimbutt.mw() === 1) && (SERVG.ME.WwmNM === 1)) && ((win.Date.now() - SERVG.ME.mVVmv) > 30500)) {
                            nv.Mmn(win.JSON.stringify([28, windowobjects.WmN]));
                            audio.VnV(audio.ww.button, 1, 0);
                            SERVG.ME.mVVmv = win.Date.now();
                        }
                        if ((win.Date.now() - SERVG.ME.Mwnwv) > 10500) {
                            var vv = 0;
                            for (var place = 0; place < nmMvw.length; place++) {
                                if (SERVG.clans[place].MvvWw !== 0) {
                                    if (nmMvw[vv].mw() === 1) {
                                        nv.Mmn(win.JSON.stringify([30, place]));
                                        audio.VnV(audio.ww.button, 1, 0);
                                        SERVG.ME.Mwnwv = win.Date.now();
                                    }
                                    vv++;
                                }
                            }
                        }
                    } else if (SERVG.ME.VVvWM === 1) {
                        if ((lockbutt.mw() === 1) && (SERVG.ME.WnNvv === 0)) {
                            nv.Mmn(win.JSON.stringify([33]));
                            SERVG.ME.WnNvv = 1;
                            audio.VnV(audio.ww.button, 1, 0);
                            return;
                        }
                        if ((unlockbutt.mw() === 1) && (SERVG.ME.WnNvv === 1)) {
                            nv.Mmn(win.JSON.stringify([34]));
                            SERVG.ME.WnNvv = 0;
                            audio.VnV(audio.ww.button, 1, 0);
                            return;
                        }
                        if (deletebutt.mw() === 1) {
                            nv.Mmn(win.JSON.stringify([29]));
                            audio.VnV(audio.ww.button, 1, 0);
                            return;
                        }
                        var vv = 0;
                        var clan = SERVG.clans[SERVG.ME.clan];
                        for (var place = 0; place < SERVG.socket.length; place++) {
                            if (place === SERVG.ME.id) {
                                vv++;
                                continue;
                            }
                            var ME = SERVG.socket[place];
                            if ((ME.clan === clan.id) && (ME.wwV === clan.mvN)) {
                                if (WvNMn[vv].mw() === 1) {
                                    nv.Mmn(win.JSON.stringify([32, ME.id]));
                                    audio.VnV(audio.ww.button, 1, 0);
                                    return;
                                }
                                vv++;
                            }
                        }
                    } else {
                        if (leavebutt.mw() === 1) {
                            nv.Mmn(win.JSON.stringify([35, SERVG.ME.id]));
                            audio.VnV(audio.ww.button, 1, 0);
                            return;
                        }
                    }
                }
            };
            var NV = SERVG.ME.inventory;
            var vvv = NV.length;
            var mnWNv = 0;
            if ((vvv > 10) && (bagbutt.mw() === 1)) {
                bagbutt.open = (bagbutt.open + 1) % 2;
                if (bagbutt.open === 1) audio.VnV(audio.ww.NwMWW, 0.08, 0);
                else audio.VnV(audio.ww.NwmVN, 0.08, 0);
            }
            for (var place = 0; place < vvv; place++) {
                if ((place > 9) && (bagbutt.open === 0)) break;
                if (inventory[place].mw() === 1) {
                    mnWNv = 1;
                    var wv = NV[place][0];
                    var nM = NV[place][1];
                    var vmM = NV[place][2];
                    var wvmvw = NV[place][3];
                    var vV = items[wv];
                    if (mmM.vmm === 1) {
                        if (mmM.id !== place) {
                            if (NV[place][0] === NV[mmM.id][0]) {
                                if ((vV.stack > NV[place][1]) && (vV.stack > NV[mmM.id][1])) {
                                    nv.Mmn(win.JSON.stringify([10, NV[mmM.id][0], NV[mmM.id][1], NV[mmM.id][2], NV[place][1], NV[place][2]]));
                                    SERVG.ME.mmM.vmm = 0;
                                    audio.VnV(audio.ww.mmM, 1, 0);
                                    return;
                                }
                            }
                            NV[place][0] = NV[mmM.id][0];
                            NV[place][1] = NV[mmM.id][1];
                            NV[place][2] = NV[mmM.id][2];
                            NV[place][3] = NV[mmM.id][3];
                            NV[mmM.id][0] = wv;
                            NV[mmM.id][1] = nM;
                            NV[mmM.id][2] = vmM;
                            NV[mmM.id][3] = wvmvw;
                            if (wv !== 0) windowobjects.inventory[mmM.id].MVN(items[wv].img.src, items[wv].img.W);
                            windowobjects.inventory[place].MVN(items[NV[place][0]].img.src, items[NV[place][0]].img.W);
                            SERVG.ME.mmM.vmm = 0;
                            audio.VnV(audio.ww.mmM, 1, 0);
                            return;
                        }
                        SERVG.ME.mmM.vmm = 0;
                    }
                    if (wv !== 0) {
                        if ((containerwin === 1) && (Nv.which !== 3)) {
                            nv.Mmn(win.JSON.stringify([26, wv, nM, vmM, wvmvw]));
                            audio.VnV(audio.ww.mmM, 1, 0);
                        } else if (Nv.which === 3) {
                            nv.Mmn(win.JSON.stringify([9, wv, nM, vmM, wvmvw]));
                            audio.VnV(audio.ww.wWwnM, 1, 0);
                        } else {
                            if (Nv.ctrlKey) {
                                audio.VnV(audio.ww.mmM, 0.6, 0);
                                nv.Mmn(win.JSON.stringify([11, wv, nM, vmM]));
                            } else nv.Mmn(win.JSON.stringify([8, wv, nM, vmM, wvmvw]));
                        }
                    }
                }
            }
            if ((containerwin === 1) && (mnWNv === 0)) {
                var NnVVw = chestbox.mv;
                if ((((myply.nVm < NnVVw.x) || (myply.nVm > (NnVVw.x + (161 * mn)))) || (myply.nmW < NnVVw.y)) || (myply.nmW > (NnVVw.y + (165 * mn)))) {
                    nVN();
                    audio.VnV(audio.ww.open, 1, 0);
                }
            }
            if (mmM.vmm === 1) {
                var place = mmM.id;
                nv.Mmn(win.JSON.stringify([9, NV[place][0], NV[place][1], NV[place][2], NV[place][3]]));
                audio.VnV(audio.ww.wWwnM, 1, 0);
            }
            mmM.vmm = 0;
        };;

        function wVv(Nv) {
            myply.VWv(Nv, myply.wwwmw);
            var vnm = 0;
            if (fullscreenimg.mw() === 1) {
                vnm = 1;
            }
            if (craftbutton.mw() === 1) {
                vnm = 1;
            }
            if (settingsimg.mw() === 1) {
                vnm = 1;
            }
            if (minimapbutt.mw() === 1) {
                vnm = 1;
            }
            if (teambutt.mw() === 1) {
                vnm = 1;
            }
            if (leaderboardbutt.mw() === 1) {
                vnm = 1;
            }
            if (leaderboardbutt2.mw() === 1) {
                vnm = 1;
            }
            if (SERVG.ME.wNw !== 0) {
                joinbutt.mw();
                deletebuttout.mw();
            }
            if (NmW === 1) {
                closebutt.mw();
                if (settingwin === 1) {
                    VmvmN.mw();
                    WMVVn.mw();
                    wWNnw.mw();
                    nvwMN.mw();
                    MNVVn.mw();
                    wvNNV.mw();
                    WVnnn.mw();
                    NmVWV.mw();
                    vVMWm.mw();
                    VnWMV.mw();
                    wVwnm.mw();
                    wwMwv.mw();
                } else if (craftwin === 1) {
                    if (SERVG.ME.nVV === -1) {
                        if ((SERVG.ME.WwVNv === 0) || (SERVG.ME.VVn === 1)) craftbutt.mw();
                        else cancelbutt.mw();
                    } else unlockbuttout.mw();
                    for (var place = 0; place < wnV.length; place++) wnV[place].mw();
                    for (place = 0; place < NNm.length; place++) {
                        if ((SERVG.ME.vWMmW === place) || (place === 0)) NNm[place].mw();
                    }
                    var vvv = SERVG.ME.MNvMn;
                    for (var place = 0; place < vvv; place++) nvV[place].mw();
                    NWmNn = -1;
                    vvv = SERVG.ME.nMnmW;
                    for (place = 0; place < vvv; place++) {
                        if (WVn[place].mw() === 1) NWmNn = place;
                    }
                    if (SERVG.ME.VVn === 1) {
                        for (place = 0; place < SERVG.ME.Nn.vvv; place++) NMV[place].mw();
                        if ((((SERVG.ME.Vvw === station.firepart) || (SERVG.ME.Vvw === station.bbq)) || (SERVG.ME.Vvw === station.composter)) && (SERVG.ME.Nn.MNM !== 255)) VWNWV.mw();
                        else if ((((SERVG.ME.Vvw === station.smelter) || (SERVG.ME.Vvw === station.extractor)) || (SERVG.ME.Vvw === station.agitator)) && (SERVG.ME.Nn.MNM !== 255)) WmWwW.mw();
                    }
                    vvv = SERVG.ME.nWwmM;
                    for (place = 0; place < vvv; place++) VnmwN[place].mw();
                    vwvvm.mw();
                } else if (containerwin === 1) {
                    var wVMVN = SERVG.ME.mwV;
                    for (var nMm = 0; nMm < 4; nMm++) {
                        if (wVMVN[nMm][0] !== 0) mwV[nMm].mw();
                    }
                } else if (teamwin === 1) {
                    if (SERVG.ME.clan === -1) {
                        addtimbutt.mw();
                        var vv = 0;
                        for (var place = 0; place < nmMvw.length; place++) {
                            if (SERVG.clans[place].MvvWw !== 0) {
                                nmMvw[vv].mw();
                                vv++;
                            }
                        }
                    } else if (SERVG.ME.VVvWM === 1) {
                        lockbutt.mw();
                        unlockbutt.mw();
                        deletebutt.mw();
                        var vv = 0;
                        var clan = SERVG.clans[SERVG.ME.clan];
                        for (var place = 0; place < SERVG.socket.length; place++) {
                            if (place === SERVG.ME.id) {
                                vv++;
                                continue;
                            }
                            var ME = SERVG.socket[place];
                            if ((ME.clan === clan.id) && (ME.wwV === clan.mvN)) {
                                WvNMn[vv].mw();
                                vv++;
                            }
                        }
                    } else leavebutt.mw();
                }
            }
            var NV = SERVG.ME.inventory;
            var vvv = NV.length;
            MmV = -1;
            if (vvv > 10) bagbutt.mw();
            for (var place = 0; place < vvv; place++) {
                if ((place > 9) && (bagbutt.open === 0)) break;
                if (NV[place][0] !== 0) {
                    if (inventory[place].mw() === 1) MmV = place;
                }
            }
        };;

        function NmN(Nv) {
            keys.WvMvV(Nv);
            if ((teamwin === 1) && (SERVG.ME.clan === -1)) {
                if ((Nv.keyCode === 8) && (windowobjects.WmN.length > 0)) {
                    windowobjects.WmN = windowobjects.WmN.substring(0, windowobjects.WmN.length - 1);
                    Nv.preventDefault();
                    return;
                } else if (((Nv.keyCode >= 65) && (Nv.keyCode <= 90)) || ((Nv.keyCode >= 48) && (Nv.keyCode <= 57))) {
                    if (windowobjects.WmN.length < 5) windowobjects.WmN += win.String.fromCharCode(Nv.keyCode);
                }
            } else if ((mmnmw === 1) && (Nv.keyCode === 27)) {
                mmnmw = 0;
                mnnNv.display = "none";
            } else if (Nv.keyCode === 13) {
                if (mmnmw === 1) {
                    if (nMnnm.value.length > 0) {
                        if ((SERVG.ME.WMnWN === 1) && (nMnnm.value[0] === '!')) {
                            if (nMnnm.value === '!pos') SERVG.socket[SERVG.ME.id].text.push((win.Math.floor(SERVG.ME.x / 100) + ":") + win.Math.floor(SERVG.ME.y / 100));
                            else {
                                var mNvMM = nMnnm.value.split('!');
                                for (var place = 1; place < mNvMM.length; place++) {
                                    var nwNVn = "!" + mNvMM[place];
                                    if (nwNVn.indexOf("public") === -1) nwNVn = nwNVn.split(" ").join("");
                                    nv.VnnWV(nwNVn);
                                    if (place <= 20) SERVG.socket[SERVG.ME.id].text.push(nwNVn);
                                }
                            }
                        } else {
                            var mN = nv.VnnWV(nMnnm.value);
                            if (mN !== 0) SERVG.socket[SERVG.ME.id].text.push(("I am muted during " + win.Math.floor(mN / 1000)) + " seconds");
                            else SERVG.socket[SERVG.ME.id].text.push(nMnnm.value);
                        }
                    }
                    mmnmw = 0;
                    nMnnm.value = "";
                    mnnNv.display = "none";
                } else {
                    mmnmw = 1;
                    mnnNv.display = "inline-block";
                    nMnnm.focus();
                }
            } else if (mmnmw === 0) {
                if (Nv.keyCode === 77) {
                    if (bordmapwin === 0) {
                        nVN();
                        NmW = 1;
                        bordmapwin = 1;
                        audio.VnV(audio.ww.open, 1, 0);
                    } else {
                        nVN();
                        audio.VnV(audio.ww.open, 1, 0);
                    }
                } else if ((Nv.keyCode === 69) || (Nv.keyCode === 32)) {
                    switch (SERVG.ME.mvn) {
                        case 0:
                            nv.Mmn(win.JSON.stringify([12, SERVG.ME.mwMvN]));
                            break;
                        case 2:
                            nv.Mmn(win.JSON.stringify([SERVG.ME.NnN, SERVG.ME.MnMwn, SERVG.ME.MNMvN]));
                            break;
                    }
                } else if (Nv.keyCode === 70) {
                    if (SERVG.ME.mwMmN === 1) nv.Mmn(win.JSON.stringify([12, SERVG.ME.mwMvN]));
                } else if (Nv.keyCode === 82) {
                    if (SERVG.ME.wvM === 1) SERVG.ME.nvMwN = (SERVG.ME.nvMwN + 1) % 4;
                    else nv.Mmn(win.JSON.stringify([13]));
                } else if ((Nv.keyCode >= 49) && (Nv.keyCode <= 57)) {
                    if (SERVG.ME.mmM.vmm !== 1) {
                        
                        var place = Nv.keyCode - 49;
                        var NV = SERVG.ME.inventory;
                        if (place < NV.length) {
                            //Айди
                            var wv = NV[place][0];
                            //количество
                            var nM = NV[place][1];
                            //номер ячейки
                            var vmM = NV[place][2];
                            //здоровье
                            var wvmvw = NV[place][3];
                            if (Nv.altKey) {
                                alert(NV.length);
                                nv.Mmn(win.JSON.stringify([9, wv, nM, vmM, wvmvw]));
                                audio.VnV(audio.ww.wWwnM, 1, 0);
                            } else {
                                if (Nv.ctrlKey) {
                                    audio.VnV(audio.ww.mmM, 0.6, 0);
                                    nv.Mmn(win.JSON.stringify([11, wv, nM, vmM]));
                                } else nv.Mmn(win.JSON.stringify([8, wv, nM, vmM, wvmvw]));
                            }
                        }
                    }
                } else if ((Nv.keyCode === 67) && (SERVG.ME.GHOUL === 0)) {
                    if (craftwin === 0) {
                        nVN();
                        NmW = 1;
                        craftwin = 1;
                        SERVG.MwM(station.own);
                        audio.VnV(audio.ww.open, 1, 0);
                    } else {
                        audio.VnV(audio.ww.open, 1, 0);
                        nVN();
                    }
                } else if ((Nv.keyCode === 27) && (NmW === 1)) {
                    audio.VnV(audio.ww.open, 1, 0);
                    nVN();
                }
            }
        };;

        function vnW(Nv) {
            keys.mwMVV(Nv);
            if ((((Nv.keyCode === 37) || (Nv.keyCode === 38)) || (Nv.keyCode === 39)) || (Nv.keyCode === 40)) {
                Nv.preventDefault();
                return false;
            }
        };;

        function WwW(Nv) {
            var NVN = 0;
            for (var wVV = 0; wVV < Nv.touches.length; wVV++) {
                myply.VWn(NWV, Nv, Nv.touches[wVV]);
                if (bagbutt.open !== 0) {
                    var MVvmv = myply.state;
                    myply.VWv(NWV, myply.NVMMW);
                    myply.state = MVvmv;
                    var NV = SERVG.ME.inventory;
                    var NwvVw = 0;
                    for (var place = 10; place < NV.length; place++) {
                        if (NV[place][0] !== 0) {
                            if (inventory[place].mw() === 1) {
                                NwvVw = 1;
                                break;
                            }
                        }
                    }
                    if (NwvVw === 1) {
                        VNn(NWV);
                        continue;
                    }
                }
                if ((SERVG.ME.mmM.vmm === 0) && (NmW === 0)) {
                    var nVm = win.Math.floor(NWV.clientX * wN.options.MMw);
                    var nmW = win.Math.floor(NWV.clientY * wN.options.WWvvm);
                    switch (SERVG.ME.mvn) {
                        case 2:
                            if (((((SERVG.ME.mwMmN === 1) && (nVm > windowobjects.mmNWn)) && (nmW > windowobjects.vmwNV)) && (nVm < (windowobjects.mmNWn + windowobjects.vwVnW))) && (nmW < (windowobjects.vmwNV + windowobjects.mnNnW))) {
                                nvnNv = 1;
                                nNw.keyCode = 70;
                                nNw.charCode = 70;
                                NmN(nNw);
                                continue;
                            }
                            case 0:
                                if ((((nVm > windowobjects.mNNwM) && (nmW > windowobjects.nNwMM)) && (nVm < (windowobjects.mNNwM + windowobjects.vwVnW))) && (nmW < (windowobjects.nNwMM + windowobjects.mnNnW))) {
                                    nvnNv = 1;
                                    nNw.keyCode = 69;
                                    nNw.charCode = 69;
                                    NmN(nNw);
                                    continue;
                                }
                                break;
                    }
                    if (nmW < (nwW - (70 * mn))) {
                        //alert(123);
                        var WMm = mWmwm * 1.5;
                        var nmV = mWmwm / 4;
                        if (nVm < mmw) {
                            var MVM = 30 * mn;
                            MWVNw = Vwv.angle(mmw - WMm, VvN + nmV, nVm, nmW);
                            NVNwm = win.Math.min(Vwv.NWN(nVm, nmW, mmw - WMm, VvN + nmV), 25);
                            if (nVm < ((mmw - WMm) - MVM)) {
                                mWM |= 1;
                                nNw.charCode = 37;
                                nNw.keyCode = 37;
                                vnW(nNw);
                            } else if (nVm > ((mmw - WMm) + MVM)) {
                                mWM |= 2;
                                nNw.charCode = 39;
                                nNw.keyCode = 39;
                                vnW(nNw);
                            }
                            if (nmW < ((VvN + nmV) - MVM)) {
                                mWM |= 4;
                                nNw.charCode = 38;
                                nNw.keyCode = 38;
                                vnW(nNw);
                            } else if (nmW > ((VvN + nmV) + MVM)) {
                                mWM |= 8;
                                nNw.charCode = 40;
                                nNw.keyCode = 40;
                                vnW(nNw);
                            }
                        } else if ((nVm < (nvn - (40 * mn))) || (nmW > (40 * mn))) {
                            NVN = 1;
                            NWV.clientX -= WMm / wN.options.MMw;
                            NWV.clientY -= nmV / wN.options.MMw;
                            if (SERVG.ME.wvM === 1) {
                                var vVMmn = win.Date.now();
                                if ((vVMmn - MMMvM) < 1000) {
                                    vmWNW = 1;
                                    NnVMv = NWV.clientX;
                                    WNmmw = NWV.clientY;
                                    VNn(NWV);
                                }
                                MMMvM = vVMmn;
                            } else {
                                vmWNW = 1;
                                NnVMv = NWV.clientX;
                                WNmmw = NWV.clientY;
                                VNn(NWV);
                            }
                        }
                        continue;
                    }
                }
                if ((NVN === 0) && (mWM === 0)) {
                    VNn(NWV);
                    NVN = 1;
                }
            }
        };;

        function nMN(Nv) {
            var nVm = win.Math.floor(Nv.changedTouches[0].clientX * wN.options.MMw);
            var nmW = win.Math.floor(Nv.changedTouches[0].clientY * wN.options.WWvvm);
            if (nvnNv === 1) nvnNv = 0;
            else if (NmW === 1) vNm(NWV);
            else if ((vmWNW === 1) && (nVm >= mmw)) {
                vmWNW = 0;
                NWV.clientX = NnVMv;
                NWV.clientY = WNmmw;
                vNm(NWV);
                return;
            } else if (((SERVG.ME.mmM.vmm === 0) && (nVm < mmw)) && (nmW < (nwW - (70 * mn)))) {
                if ((nVm < (240 * mn)) && (nmW < (160 * mn))) vNm(NWV);
            } else vNm(NWV);
            if (mWM !== 0) {
                if (mWM & 1) {
                    nNw.charCode = 37;
                    NmN(nNw);
                }
                if (mWM & 2) {
                    nNw.charCode = 39;
                    NmN(nNw);
                }
                if (mWM & 4) {
                    nNw.charCode = 38;
                    NmN(nNw);
                }
                if (mWM & 8) {
                    nNw.charCode = 40;
                    NmN(nNw);
                }
                mWM = 0;
            }
        };;

        function Www(Nv) {};;

        function vnv(Nv) {
            var NVN = 0;
            var mWVWv = 0;
            for (var wVV = 0; wVV < Nv.touches.length; wVV++) {
                myply.VWn(NWV, Nv, Nv.touches[wVV]);
                if (bagbutt.open !== 0) {
                    var NV = SERVG.ME.inventory;
                    var NwvVw = 0;
                    for (var place = 10; place < NV.length; place++) {
                        if (NV[place][0] !== 0) {
                            if (inventory[place].mw() === 1) {
                                NwvVw = 1;
                                break;
                            }
                        }
                    }
                    if (NwvVw === 1) {
                        wVv(NWV);
                        continue;
                    }
                }
                if ((SERVG.ME.mmM.vmm === 0) && (NmW === 0)) {
                    var nVm = win.Math.floor(NWV.clientX * wN.options.MMw);
                    var nmW = win.Math.floor(NWV.clientY * wN.options.WWvvm);
                    if (nmW < (nwW - (70 * mn))) {
                        var WMm = mWmwm * 1.5;
                        var nmV = mWmwm / 4;
                        if (nVm < mmw) {
                            mWVWv = 1;
                            var VNM = 0;
                            var MVM = 30 * mn;
                            MWVNw = Vwv.angle(mmw - WMm, VvN + nmV, nVm, nmW);
                            NVNwm = win.Math.min(Vwv.NWN(nVm, nmW, mmw - WMm, VvN + nmV), 25);
                            if (nVm < ((mmw - WMm) - MVM)) VNM |= 1;
                            else if (nVm > ((mmw - WMm) + MVM)) VNM |= 2;
                            if (nmW < ((VvN + nmV) + -MVM)) VNM |= 4;
                            else if (nmW > ((VvN + nmV) + MVM)) VNM |= 8;
                            if (((VNM & 1) === 1) && ((mWM & 1) !== 1)) {
                                nNw.charCode = 37;
                                vnW(nNw);
                            } else if (((VNM & 1) !== 1) && ((mWM & 1) === 1)) {
                                nNw.charCode = 37;
                                NmN(nNw);
                            }
                            if (((VNM & 2) === 2) && ((mWM & 2) !== 2)) {
                                nNw.charCode = 39;
                                vnW(nNw);
                            } else if (((VNM & 2) !== 2) && ((mWM & 2) === 2)) {
                                nNw.charCode = 39;
                                NmN(nNw);
                            }
                            if (((VNM & 4) === 4) && ((mWM & 4) !== 4)) {
                                nNw.charCode = 38;
                                vnW(nNw);
                            } else if (((VNM & 4) !== 4) && ((mWM & 4) === 4)) {
                                nNw.charCode = 38;
                                NmN(nNw);
                            }
                            if (((VNM & 8) === 8) && ((mWM & 8) !== 8)) {
                                nNw.charCode = 40;
                                vnW(nNw);
                            } else if (((VNM & 8) !== 8) && ((mWM & 8) === 8)) {
                                nNw.charCode = 40;
                                NmN(nNw);
                            }
                            mWM = VNM;
                            continue;
                        } else if ((nVm < (nvn - (40 * mn))) || (nmW > (40 * mn))) {
                            NVN = 1;
                            NWV.clientX -= WMm / wN.options.MMw;
                            NWV.clientY -= nmV / wN.options.MMw;
                            NnVMv = NWV.clientX;
                            WNmmw = NWV.clientY;
                            wVv(NWV);
                        }
                    }
                }
                if ((NVN === 0) && (mWM === 0)) {
                    wVv(NWV);
                    NVN = 1;
                }
            }
            if ((mWVWv === 0) && (mWM !== 0)) {
                if (mWM & 1) {
                    nNw.charCode = 37;
                    NmN(nNw);
                }
                if (mWM & 2) {
                    nNw.charCode = 39;
                    NmN(nNw);
                }
                if (mWM & 4) {
                    nNw.charCode = 38;
                    NmN(nNw);
                }
                if (mWM & 8) {
                    nNw.charCode = 40;
                    NmN(nNw);
                }
                mWM = 0;
            }
        };;

        function MmNNN() {
            if (vNv === 0) win.addEventListener('mousedown', VNn, false);
            if (vNv === 0) win.addEventListener('mouseup', vNm, false);
            if (vNv === 0) win.addEventListener('mousemove', wVv, false);
            if (vNv === 0) win.addEventListener('keyup', NmN, false);
            if (vNv === 0) win.addEventListener('keydown', vnW, false);
            if (vNv === 1) win.addEventListener('touchstart', WwW, false);
            if (vNv === 1) win.addEventListener('touchend', nMN, false);
            if (vNv === 1) win.addEventListener('touchcancel', Www, false);
            if (vNv === 1) win.addEventListener('touchmove', vnv, false);
        };;

        function VVwMW() {
            if (vNv === 0) win.removeEventListener('mousedown', VNn, false);
            if (vNv === 0) win.removeEventListener('mouseup', vNm, false);
            if (vNv === 0) win.removeEventListener('mousemove', wVv, false);
            if (vNv === 0) win.removeEventListener('keyup', NmN, false);
            if (vNv === 0) win.removeEventListener('keydown', vnW, false);
            if (vNv === 1) win.removeEventListener('touchstart', WwW, false);
            if (vNv === 1) win.removeEventListener('touchend', nMN, false);
            if (vNv === 1) win.removeEventListener('touchcancel', Www, false);
            if (vNv === 1) win.removeEventListener('touchmove', vnv, false);
        };;
        return {
            NVv: NVv,
            vnV: vnV,
            mnN: mnN,
            update: WMM,
            NM: NM
        };
    })();
    var nmmVv = (function() {
        function Wnn(Mnn) {};;

        function NvwNv() {
            NVv(windowobjects);
        };;

        function NvN() {
            NvwNv();
        };;
        var NNN = 0;
        var nMwNn = {
            src: "img/adblocker-msg.png",
            W: {
                m: 0
            }
        };
        var VmVNw = 0;
        var VwvVv = -1;
        var WwwvV = null;
        var WMwMN = {
            W: null
        };
        var wNnwN = null;
        var nwWMv = {
            W: null
        };
        var WMWVW = -1;
        var MnvWv = {
            W: null
        };
        var MNn = null;
        var vvWmM = -1;
        var VMnMw = null;
        var vMMnW = {
            W: null
        };

        function nmNnw() {
            var Wv = mNw.mv.x;
            var wM = mNw.mv.y;
            var wVw = Wv / mn;
            var VVm = wM / mn;
            if ((MNn === null) || (WMWVW !== SERVG.ME.exp)) {
                WMWVW = SERVG.ME.exp;
                MNn = vM.wNm(WMWVW + "", "'Viga', sans-serif", "#FFFFFF", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12);
                MnvWv.W = MNn;
                MnvWv.W.m = 1;
            }
            wN.WM(MnvWv, wVw + 280, VVm + 117, 0, 0, 0, 1);
            if ((WwwvV === null) || (VwvVv !== SERVG.ME.level)) {
                VwvVv = SERVG.ME.level;
                WwwvV = vM.wNm(VwvVv + "", "'Viga', sans-serif", "#FFFFFF", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12);
                wNnwN = vM.wNm(win.Math.floor(VwvVv / 2), "'Viga', sans-serif", "#FFFFFF", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12);
                WMwMN.W = WwwvV;
                WMwMN.W.m = 1;
                nwWMv.W = wNnwN;
                nwWMv.W.m = 1;
            }
            wN.WM(WMwMN, wVw + 108, VVm + 117, 0, 0, 0, 1);
            wN.WM(nwWMv, wVw + 288, VVm + 147, 0, 0, 0, 1);
            if ((VMnMw === null) || (vvWmM !== SERVG.ME.nWwnN)) {
                vvWmM = SERVG.ME.nWwnN;
                VMnMw = vM.wNm(vvWmM + "", "'Viga', sans-serif", "#FFFFFF", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12);
                vMMnW.W = VMnMw;
                vMMnW.W.m = 1;
            }
            wN.WM(vMMnW, wVw + 453, VVm + 117, 0, 0, 0, 1);
            var inventory = windowobjects.inventory;
            var NV = SERVG.ME.inventory;
            var vvv = NV.length;
            var MVM = 50 * mn;
            var Nmn = wM + (182 * mn);
            var wwn = Wv + (80 * mn);
            var WnVvn = mn;
            mn = mn - (0.3 * mn);
            for (var place = 0; place < vvv; place++) {
                var wm = inventory[place];
                if (NV[place][0] !== 0) Mw.vmmMn(wm, NV[place], wwn, Nmn, windowobjects.vwn, windowobjects.WMn);
                wwn += MVM;
            }
            mn = WnVvn;
            if (wmw.NwnNN === 1) {
                var Vw = WNW.mWV.vvw((VmVNw > 500) ? ((1000 - VmVNw) / 500) : (VmVNw / 500));
                Mm.globalAlpha = 0.7;
                wN.WM(nMwNn, wVw + 288, VVm + 193, 0, 0, 0, 1 + (0.04 * Vw));
                Mm.globalAlpha = 1;
                VmVNw = (VmVNw + mV) % 1000;
            }
        };;
        var VMN = 0;
        var mNw;
        var wnM;
        var vWv;

        function vnV() {
            mNw = vM.mVV(541, 324, "img/scoreboardnew.png");
            wnM = vM.vMM(123, 35, ["img/play-again-button-out.png", "img/play-again-button-in.png", "img/play-again-button-click.png"]);
            vWv = vM.vMM(198, 35, ["img/back-main-page-button-out.png", "img/back-main-page-button-in.png", "img/back-main-page-button-click.png"]);
        };;
        var MVv;
        var NWV = new myply.vNnMv;
        var nNw = new keys.VmwWV;
        var VWm = 500;
        var WWN = 0;
        var VNvnM = function(mMn) {
            return WNW.mWV.MWnmm(mMn, WNW.mWV.wWM, 0.05);
        };
        var Nmv = 500;
        var mwm = 0;
        var WVWWm = function(mMn) {
            return WNW.mWV.MWnmm(mMn, WNW.mWV.wMn, 0.05);
        };
        var WwM = 0;
        var MNw = 0;
        var mwn = win.undefined;

        function mnN() {
            nv.Wnn = Wnn;
            nv.NvN = NvN;
            SERVG.ME.wvM = 0;
            SERVG.ME.id = 0;
            Mw.vVwvn(0);
            Mw.NvwNm();
            for (var place = 0; place < SERVG.ME.inventory.length; place++) {
                for (var vv = 0; vv < 4; vv++) SERVG.ME.inventory[place][vv] = 0;
            }
            var MWMwV = mvv[win.Math.min(mvv.length - 1, SERVG.ME.level)];
            for (var place = 0; place < MWMwV.length; place++) {
                var wv = MWMwV[place];
                if (wv.id !== 0) windowobjects.inventory[place].MVN(items[wv.id].img.src, items[wv.id].img.W);
                var NV = SERVG.ME.inventory[place];
                NV[1] = wv.nM;
                NV[2] = 0;
                NV[3] = wv.Z;
                NV[0] = wv.id;
            }
            VMN = 5000;
            if (Vnw.NmNvv("admin") === null) {
                win["YMPB"]["refresh"]();
            }
            wN.MNwmM(nmmVv);
            MNw = Nmv;
            WwM = Nmv;
            mwn = WVWWm;
            mwm = 1;
            WMM();
        };;

        function NVv(wMN) {
            wmw.MVwVM.display = "none";
            MVv = wMN;
            VVwMW();
            MNw = VWm;
            WwM = VWm;
            mwn = VNvnM;
            WWN = 1;
        };;

        function WMM() {
            var vMm = 0;
            var wwv = 0;
            if (MNw > 0) {
                wwv = nwW;
                var vnw = mwn(1 - (MNw / WwM));
                if (vnw === 1) MNw = 0;
                if (mwm === 1) vnw = 1 - win.Math.abs(vnw);
                vMm *= vnw;
                wwv *= vnw;
            }
            mNw.mv.x = (mmw - win.Math.floor(270 * mn)) - vMm;
            mNw.mv.y = win.Math.max(0, (VvN - win.Math.floor(162 * mn)) + win.Math.floor(-135 * mn)) - wwv;
            wnM.mv.x = ((mmw - win.Math.floor(61 * mn)) + win.Math.floor(-100 * mn)) - vMm;
            wnM.mv.y = win.Math.max(0, (VvN - win.Math.floor(17 * mn)) + win.Math.floor(-35 * mn)) - wwv;
            vWv.mv.x = ((mmw - win.Math.floor(99 * mn)) + win.Math.floor(100 * mn)) - vMm;
            vWv.mv.y = wnM.mv.y;
            var mVvwv = win.Math.min(mn, 1);
            win.document.getElementById("trevda").style.top = win.Math.floor((VvN - 125) + (140 * mVvwv)) + "px";
            win.document.getElementById("trevda").style.transform = ("scale(" + mVvwv) + ")";
            win.document.getElementById("trevda").style.left = win.Math.floor(mmw - (325 * mVvwv)) + "px";
        };;

        function NM() {
            if (MMVwV() === 0) return;
            Mm.clearRect(0, 0, nvn, nwW);
            Mw.VMMWm();
            if (MNw > 0) {
                NNN = mwn(1 - (MNw / WwM));
                if (mwm === 1) NNN = 1 - win.Math.abs(NNN);
                NNN = 1 - NNN;
            }
            Mm.globalAlpha = 0.3 * NNN;
            Mm.fillStyle = "#000000";
            Mm.fillRect(0, 0, nvn, nwW);
            Mm.globalAlpha = 1;
            mNw.NM();
            vWv.NM();
            nmNnw();
            Mw.vMNVm();
            vWn.nwwnv();
            nv.mNvvW(myNickname, 0);
            if (VMN > 0) {
                VMN = win.Math.max(0, VMN - mV);
                wN.WM(adswait[win.Math.floor(VMN / 1000)], (wnM.mv.x / mn) + 61.5, (wnM.mv.y / mn) + 17.75, 0, 0, 0, 1);
            } else wnM.NM();
        };;

        function MMVwV() {
            if (WWN === 1) {
                WMM();
                if (MNw < 0) {
                    WWN = 0;
                    wnM.NNv(vM.Wmm);
                    vWv.NNv(vM.Wmm);
                    MVv.mnN();
                    return 0;
                }
                MNw -= mV;
            } else if (mwm === 1) {
                WMM();
                if (MNw < 0) {
                    mwm = 0;
                    if (SERVG.ME.WMnWN !== 1) wmw.MVwVM.display = "inline-block";
                    win.document.getElementById("bod").style.backgroundColor = "#46664d";
                    MmNNN();
                }
                MNw -= mV;
            }
            return 1;
        };;

        function VNn(Nv) {
            myply.VWv(Nv, myply.NVMMW);
            var vnm = 0;
            if (wnM.mw() === 1) {
                vnm = 1;
            }
            if (vWv.mw() === 1) {
                vnm = 1;
            }
        };;

        function vNm(Nv) {
            myply.VWv(Nv, myply.MnNNW);
            var vnm = 0;
            //wnM.mw() === 1
            if (true) {
                vnm = 1;
                if (VMN <= 0) {
                    wmw.VVMVn();
                    audio.VnV(audio.ww.play, 1, 0);
                }
                return;
            }
            if (vWv.mw() === 1) {
                vnm = 1;
                if (((nv.state & nv.nMV.WWvNw) === 0) && ((nv.state & nv.nMV.mWWwm) === 0)) {
                    NVv(wmw);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                }
            }
        };;

        function wVv(Nv) {
            myply.VWv(Nv, myply.wwwmw);
            var vnm = 0;
            if (wnM.mw() === 1) {
                vnm = 1;
            }
            if (vWv.mw() === 1) {
                vnm = 1;
            }
        };;

        function WwW(Nv) {
            if (Nv.touches.length > 0) {
                myply.VWn(NWV, Nv, Nv.touches[0]);
                VNn(NWV);
            }
        };;

        function nMN(Nv) {
            vNm(NWV);
        };;

        function Www(Nv) {
            if (Nv.touches.length > 0) {
                myply.VWn(NWV, Nv, Nv.touches[0]);
                vNm(NWV);
            }
        };;

        function vnv(Nv) {
            if (Nv.touches.length > 0) {
                myply.VWn(NWV, Nv, Nv.touches[0]);
                wVv(NWV);
            }
        };;

        function MmNNN() {
            if (vNv === 0) win.addEventListener('mousedown', VNn, false);
            if (vNv === 0) win.addEventListener('mouseup', vNm, false);
            if (vNv === 0) win.addEventListener('mousemove', wVv, false);
            if (vNv === 1) win.addEventListener('touchstart', WwW, false);
            if (vNv === 1) win.addEventListener('touchend', nMN, false);
            if (vNv === 1) win.addEventListener('touchcancel', Www, false);
            if (vNv === 1) win.addEventListener('touchmove', vnv, false);
        };;

        function VVwMW() {
            if (vNv === 0) win.removeEventListener('mousedown', VNn, false);
            if (vNv === 0) win.removeEventListener('mouseup', vNm, false);
            if (vNv === 0) win.removeEventListener('mousemove', wVv, false);
            if (vNv === 1) win.removeEventListener('touchstart', WwW, false);
            if (vNv === 1) win.removeEventListener('touchend', nMN, false);
            if (vNv === 1) win.removeEventListener('touchcancel', Www, false);
            if (vNv === 1) win.removeEventListener('touchmove', vnv, false);
        };;
        return {
            NVv: NVv,
            vnV: vnV,
            mnN: mnN,
            update: WMM,
            NM: NM
        };
    })();
    var WvvMV = (function() {
        function Wnn(Mnn) {};;

        function NvwNv() {
            NVv(windowobjects);
        };;

        function NvN() {
            NvwNv();
        };;
        var NNN = 0;
        var vWvVM = -1;
        var VmvNV = null;
        var vnvvM = {
            W: null
        };
        var mvNVM = -1;
        var mmvMV = {
            W: null
        };
        var NmwnM = null;
        var vvWmM = -1;
        var VMnMw = null;
        var vMMnW = {
            W: null
        };

        function nmNnw() {
            var Wv = mNw.mv.x;
            var wM = mNw.mv.y;
            var wVw = Wv / mn;
            var VVm = wM / mn;
            if ((NmwnM === null) || (mvNVM !== SERVG.WVw)) {
                mvNVM = SERVG.WVw;
                NmwnM = vM.wNm("#" + win.Math.max(mvNVM, 1), "'Viga', sans-serif", "#FFFFFF", 60, 140, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12);
                mmvMV.W = NmwnM;
                mmvMV.W.m = 1;
            }
            wN.WM(mmvMV, wVw + 207, VVm + 93, 0, 0, 0, 1);
            if ((VmvNV === null) || (vWvVM !== SERVG.ME.VmNwm)) {
                vWvVM = SERVG.ME.VmNwm;
                var vMWwM = win.Math.floor((win.Date.now() - SERVG.ME.VmNwm) / 1000);
                var wWvWM = win.Math.floor(vMWwM / 60);
                var NNvMn = vMWwM % 60;
                VmvNV = vM.wNm((((((wWvWM < 10) ? "0" : "") + wWvWM) + ":") + ((NNvMn < 10) ? "0" : "")) + NNvMn, "'Viga', sans-serif", "#FFFFFF", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12);
                vnvvM.W = VmvNV;
                vnvvM.W.m = 1;
            }
            wN.WM(vnvvM, wVw + 110, VVm + 100, 0, 0, 0, 1);
            if ((VMnMw === null) || (vvWmM !== SERVG.ME.nWwnN)) {
                vvWmM = SERVG.ME.nWwnN;
                VMnMw = vM.wNm(vvWmM + "", "'Viga', sans-serif", "#FFFFFF", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12);
                vMMnW.W = VMnMw;
                vMMnW.W.m = 1;
            }
            wN.WM(vMMnW, wVw + 309, VVm + 100, 0, 0, 0, 1);
        };;
        var VMN = 0;
        var mNw;
        var wnM;
        var vWv;

        function vnV() {
            mNw = vM.mVV(414, 207, "img/scoreboard-br.png");
            wnM = vM.vMM(123, 35, ["img/play-again-button-out.png", "img/play-again-button-in.png", "img/play-again-button-click.png"]);
            vWv = vM.vMM(198, 35, ["img/back-main-page-button-out.png", "img/back-main-page-button-in.png", "img/back-main-page-button-click.png"]);
        };;
        var MVv;
        var NWV = new myply.vNnMv;
        var nNw = new keys.VmwWV;
        var VWm = 500;
        var WWN = 0;
        var VNvnM = function(mMn) {
            return WNW.mWV.MWnmm(mMn, WNW.mWV.wWM, 0.05);
        };
        var Nmv = 500;
        var mwm = 0;
        var WVWWm = function(mMn) {
            return WNW.mWV.MWnmm(mMn, WNW.mWV.wMn, 0.05);
        };
        var WwM = 0;
        var MNw = 0;
        var mwn = win.undefined;

        function mnN() {
            nv.Wnn = Wnn;
            nv.NvN = NvN;
            SERVG.ME.wvM = 0;
            SERVG.ME.id = 0;
            Mw.vVwvn(0);
            Mw.NvwNm();
            VMN = 5000;
            win["YMPB"]["refresh"]();
            wN.MNwmM(WvvMV);
            MNw = Nmv;
            WwM = Nmv;
            mwn = WVWWm;
            mwm = 1;
            WMM();
        };;

        function NVv(wMN) {
            wmw.MVwVM.display = "none";
            MVv = wMN;
            VVwMW();
            MNw = VWm;
            WwM = VWm;
            mwn = VNvnM;
            WWN = 1;
        };;

        function WMM() {
            var vMm = 0;
            var wwv = 0;
            if (MNw > 0) {
                wwv = nwW;
                var vnw = mwn(1 - (MNw / WwM));
                if (vnw === 1) MNw = 0;
                if (mwm === 1) vnw = 1 - win.Math.abs(vnw);
                vMm *= vnw;
                wwv *= vnw;
            }
            mNw.mv.x = (mmw - win.Math.floor(207 * mn)) - vMm;
            mNw.mv.y = win.Math.max(0, (VvN - win.Math.floor(103 * mn)) + win.Math.floor(-135 * mn)) - wwv;
            wnM.mv.x = ((mmw - win.Math.floor(61 * mn)) + win.Math.floor(-100 * mn)) - vMm;
            wnM.mv.y = win.Math.max(0, (VvN - win.Math.floor(17 * mn)) + win.Math.floor(-70 * mn)) - wwv;
            vWv.mv.x = ((mmw - win.Math.floor(99 * mn)) + win.Math.floor(70 * mn)) - vMm;
            vWv.mv.y = wnM.mv.y;
            var mVvwv = mn;
            win.document.getElementById("trevda").style.top = win.Math.floor((VvN - 125) + (130 * mVvwv)) + "px";
            win.document.getElementById("trevda").style.transform = ("scale(" + mVvwv) + ")";
        };;

        function NM() {
            if (MMVwV() === 0) return;
            Mm.clearRect(0, 0, nvn, nwW);
            Mw.VMMWm();
            if (MNw > 0) {
                NNN = mwn(1 - (MNw / WwM));
                if (mwm === 1) NNN = 1 - win.Math.abs(NNN);
                NNN = 1 - NNN;
            }
            Mm.globalAlpha = 0.3 * NNN;
            Mm.fillStyle = "#000000";
            Mm.fillRect(0, 0, nvn, nwW);
            Mm.globalAlpha = 1;
            mNw.NM();
            vWv.NM();
            nmNnw();
            Mw.vMNVm();
            vWn.nwwnv();
            if (VMN > 0) {
                VMN = win.Math.max(0, VMN - mV);
                wN.WM(adswait[win.Math.floor(VMN / 1000)], (wnM.mv.x / mn) + 61.5, (wnM.mv.y / mn) + 17.75, 0, 0, 0, 1);
            } else wnM.NM();
        };;

        function MMVwV() {
            if (WWN === 1) {
                WMM();
                if (MNw < 0) {
                    WWN = 0;
                    wnM.NNv(vM.Wmm);
                    vWv.NNv(vM.Wmm);
                    MVv.mnN();
                    return 0;
                }
                MNw -= mV;
            } else if (mwm === 1) {
                WMM();
                if (MNw < 0) {
                    mwm = 0;
                    wmw.MVwVM.display = "inline-block";
                    win.document.getElementById("bod").style.backgroundColor = "#46664d";
                    MmNNN();
                }
                MNw -= mV;
            }
            return 1;
        };;

        function VNn(Nv) {
            myply.VWv(Nv, myply.NVMMW);
            var vnm = 0;
            if (wnM.mw() === 1) {
                vnm = 1;
            }
            if (vWv.mw() === 1) {
                vnm = 1;
            }
        };;

        function vNm(Nv) {
            myply.VWv(Nv, myply.MnNNW);
            var vnm = 0;
            if (wnM.mw() === 1) {
                vnm = 1;
                if (VMN <= 0) {
                    wmw.VVMVn();

                    audio.VnV(audio.ww.play, 1, 0);
                }
                return;
            }
            if (vWv.mw() === 1) {
                vnm = 1;
                if (((nv.state & nv.nMV.WWvNw) === 0) && ((nv.state & nv.nMV.mWWwm) === 0)) {
                    NVv(wmw);
                    audio.VnV(audio.ww.button, 1, 0);
                    return;
                }
            }
        };;

        function wVv(Nv) {
            myply.VWv(Nv, myply.wwwmw);
            var vnm = 0;
            if (wnM.mw() === 1) {
                vnm = 1;
            }
            if (vWv.mw() === 1) {
                vnm = 1;
            }
        };;

        function WwW(Nv) {
            if (Nv.touches.length > 0) {
                myply.VWn(NWV, Nv, Nv.touches[0]);
                VNn(NWV);
            }
        };;

        function nMN(Nv) {
            vNm(NWV);
        };;

        function Www(Nv) {
            if (Nv.touches.length > 0) {
                myply.VWn(NWV, Nv, Nv.touches[0]);
                vNm(NWV);
            }
        };;

        function vnv(Nv) {
            if (Nv.touches.length > 0) {
                myply.VWn(NWV, Nv, Nv.touches[0]);
                wVv(NWV);
            }
        };;

        function MmNNN() {
            if (vNv === 0) win.addEventListener('mousedown', VNn, false);
            if (vNv === 0) win.addEventListener('mouseup', vNm, false);
            if (vNv === 0) win.addEventListener('mousemove', wVv, false);
            if (vNv === 1) win.addEventListener('touchstart', WwW, false);
            if (vNv === 1) win.addEventListener('touchend', nMN, false);
            if (vNv === 1) win.addEventListener('touchcancel', Www, false);
            if (vNv === 1) win.addEventListener('touchmove', vnv, false);
        };;

        function VVwMW() {
            if (vNv === 0) win.removeEventListener('mousedown', VNn, false);
            if (vNv === 0) win.removeEventListener('mouseup', vNm, false);
            if (vNv === 0) win.removeEventListener('mousemove', wVv, false);
            if (vNv === 1) win.removeEventListener('touchstart', WwW, false);
            if (vNv === 1) win.removeEventListener('touchend', nMN, false);
            if (vNv === 1) win.removeEventListener('touchcancel', Www, false);
            if (vNv === 1) win.removeEventListener('touchmove', vnv, false);
        };;
        return {
            NVv: NVv,
            vnV: vnV,
            mnN: mnN,
            update: WMM,
            NM: NM
        };
    })();


    // MAP EDITOR \/ \/ \/ \/
    var mapeditor = (function() {
        var NmW = 0;
        var bordmapwin = 0;
        var settingwin = 0;
        var MNnnv = 0;
        var nMNmW = wN.wvv("img/inv-empty.png");
        var WwvNM = [nMNmW, nMNmW, nMNmW];
        var Wnw = [];
        var NWw = 0;

        function MVWMn() {
            zoombutton.show();
            unzoombutton.show();
            SERVG.ME.id = 1;
            SERVG.Mvnvn = 2;
            SERVG.Vnn = 0;
            SERVG.ME.MwV = 0;
            SERVG.ME.Wvv[place] = 0;
            SERVG.ME.wvM = 1;
            SERVG.ME.wNw = 0;
            SERVG.ME.vVVnm = [
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1]
            ];
            SERVG.MnW.MWw.value = SERVG.MnW.MWw.WWw;
            SERVG.MnW.MWw.vww = -1;
            SERVG.VwvMN([0, win.document.getElementById("nicknameInput").value]);
            SERVG.MVMwn(0, 0);
            Mw.reset(win.undefined, 0, 0.07);
            Mw.scale = 0;
            nNM.NWnwm();
            SERVG.ME.nvMwN = 0;
            SERVG.ME.putableimg = 0;
            vmV = 0;
            mnnMn(1, mnW, 550, 550, 21 << 8, 0);
        };;

        function MVVMv(NWNVm) {
            nVN();
            NmW = 1;
            if (NWNVm === 1) craftwin = 1;
            else if (NWNVm === 2) containerwin = 1;
        };;

        function nVN() {
            NmW = 0;
            closebutt.NNv(vM.Wmm);
            bordmapwin = 0;
            settingwin = 0;
            craftwin = 0;
            containerwin = 0;
            teamwin = 0;
            SERVG.MNNMM();
        };;
        var nmMMm = 0;
        var closebutt = vM.vMM(43, 43, ["img/close-box-out.png", "img/close-box-in.png", "img/close-box-click.png"]);
        var highpartout = [wN.wvv("img/high-particules-out.png"), wN.wvv("img/high-particules-in.png"), wN.wvv("img/high-particules-click.png")];
        var wVwnm = vM.vMM(54, 42, null, highpartout);
        var vWmmV = [wN.wvv("img/low-particules-out.png"), wN.wvv("img/low-particules-in.png"), wN.wvv("img/low-particules-click.png")];
        var VnWMV = vM.vMM(54, 42, null, vWmmV);
        var vVvNM = [wN.wvv("img/no-particules-out.png"), wN.wvv("img/no-particules-in.png"), wN.wvv("img/no-particules-click.png")];
        var wwMwv = vM.vMM(54, 42, null, vVvNM);
        var VVVMw = [wN.wvv("img/high-resolution-out.png"), wN.wvv("img/high-resolution-in.png"), wN.wvv("img/high-resolution-click.png")];
        var wWNnw = vM.vMM(54, 42, null, VVVMw);
        var wmnmv = [wN.wvv("img/medium-resolution-out.png"), wN.wvv("img/medium-resolution-in.png"), wN.wvv("img/medium-resolution-click.png")];
        var nvwMN = vM.vMM(54, 42, null, wmnmv);
        var vmVnn = [wN.wvv("img/low-resolution-out.png"), wN.wvv("img/low-resolution-in.png"), wN.wvv("img/low-resolution-click.png")];
        var MNVVn = vM.vMM(54, 42, null, vmVnn);
        var NwVwn = [wN.wvv("img/azerty-button-out.png"), wN.wvv("img/azerty-button-in.png"), wN.wvv("img/azerty-button-click.png")];
        var VmvmN = vM.vMM(81, 33, null, NwVwn);
        var NMnMN = [wN.wvv("img/qwerty-button-out.png"), wN.wvv("img/qwerty-button-in.png"), wN.wvv("img/qwerty-button-click.png")];
        var WMVVn = vM.vMM(87, 33, null, NMnMN);
        var soundonbutt = [wN.wvv("img/sound-on-out.png"), wN.wvv("img/sound-on-in.png"), wN.wvv("img/sound-on-click.png")];
        var soundoffbutt = [wN.wvv("img/sound-off-out.png"), wN.wvv("img/sound-off-in.png"), wN.wvv("img/sound-off-click.png")];
        var wvNNV = vM.vMM(51, 36, null, soundonbutt);
        var WVnnn = vM.vMM(51, 36, null, soundoffbutt);
        var NmVWV = vM.vMM(51, 36, null, soundonbutt);
        var vVMWm = vM.vMM(51, 36, null, soundoffbutt);
        var mWM = 0;
        var MWVNw = 0;
        var NVNwm = 0;
        var MMMvM = 0;
        var vmWNW = 0;
        var NnVMv = 0;
        var WNmmw = 0;
        var nvnNv = 0;
        var vmV = 0;

        function mnnMn(mysocketid, vV, Wv, wM, nNN, Mnn) {
            var MW = nNM.get(mysocketid, vmV, vmV, vV);
            mvMMV(MW, mysocketid, vmV, vmV, vV, Wv, wM, Wv, wM, nNN, 0, Mnn);
            vmV++;
        };;

        function wwMmV(MWwVN) {
            MVWMn();
            MWwVN = MWwVN.split("!b=");
            MWwVN.shift();
            for (var place = 0; place < MWwVN.length; place++) {
                var Nn = MWwVN[place].split(":");
                if (Nn.length > 4) Vnvmv(Nn[0], Nn[1], Nn[3], Nn[2], Nn[4]);
                else Vnvmv(Nn[0], 0, Nn[2], Nn[1], Nn[3]);
            }
        };;

        function Vnvmv(NNWVv, nvN, place, vv, WN) {
            NNWVv = win.Number(NNWVv) >>> 0;
            nvN = win.Number(nvN) >>> 0;
            place = win.Number(place) >>> 0;
            vv = win.Number(vv) >>> 0;
            WN = win.Number(WN) >>> 0;
            if (((WN > 3) || (place >= nmn.height)) || (vv >= nmn.height)) return;
            var Nn = items[NNWVv];
            if (((Nn === win.undefined) || (Nn.nvN === win.undefined)) || ((Nn.nvN > 0) && (Nn.Nn.length <= nvN))) return;
            var WN = (Nn.Mvw === 1) ? 0 : WN;
            var Wv = (Nn.Wwv[WN] + 50) + (100 * vv);
            var wM = (Nn.nWn[WN] + 50) + (100 * place);
            var vV = 0;
            switch ((Nn.nvN === 0) ? Nn.WvV : Nn.nvN[nvN].WvV) {
                case 0:
                    vV = wNnwm;
                    break;
                case 1:
                    vV = nnvNN;
                    break;
                case 2:
                    vV = NWWvM;
                    break;
                default:
                    vV = MNvmw;
                    break;
            }
            nWMWn(1, vV, Wv, wM, WN, 1 + ((Nn.nvN === 0) ? 0 : (nvN << 5)), Nn.id);
        };;

        function nWMWn(mysocketid, vV, Wv, wM, WN, Mnn, nvN) {
            var MW = nNM.get(mysocketid, vmV, vmV, vV);
            mvMMV(MW, mysocketid, vmV, vmV, vV, Wv, wM, Wv, wM, (nvN << 7) + (WN << 5), 0, Mnn);
            var WMM = VVM[vV].update;
            if (WMM !== win.undefined) WMM(MW, Wv, wM);
            vmV++;
        };;

        function wMNww(vV) {
            var NvV = "";
            var Nvw = nNM.Wvm[vV];
            var wWv = nNM.border[vV];
            var wVN = wWv.border;
            for (place = 0; place < wVN; place++) {
                var player = Nvw[wWv.nnN[place]];
                var wv = items[player.nNN >> 7];
                NvV += ("!b=" + wv.id) + ":";
                if (wv.nvN !== 0) NvV += player.nvN + ":";
                NvV += (((player.vv + ":") + player.place) + ":") + ((player.nNN >> 5) & 3);
            }
            return NvV;
        };;

        function nwmMw(vV, Wv, wM) {
            var Nvw = nNM.Wvm[vV];
            var wWv = nNM.border[vV];
            var wVN = wWv.border;
            for (place = 0; place < wVN; place++) {
                var Nn = Nvw[wWv.nnN[place]];
                if ((((Nn.x >= Wv) && (Nn.x <= (Wv + 100))) && (Nn.y >= wM)) && (Nn.y <= (wM + 100))) {
                    nNM.remove(Nn.mysocketid, Nn.id, Nn.mvN, vV, Nn.nNN);
                    return;
                }
            }
        };;
        

        function vnMVv() {
            if ((myply.state === myply.NVMMW) && (SERVG.ME.click === 0)) {
                if (SERVG.ME.wvM === 1) {
                    SERVG.ME.click = -1;
                    if (SERVG.ME.nwVMm === 1) {
                        if ((((SERVG.ME.Vmm !== -1) && (SERVG.ME.NNV !== -1)) && (SERVG.ME.Vmm !== nmn.width)) && (SERVG.ME.NNV !== nmn.height)) Vnvmv(SERVG.ME.putableimg, SERVG.ME.mWmnv, SERVG.ME.NNV, SERVG.ME.Vmm, SERVG.ME.nvMwN);
                    } else {
                        var Wv = 100 * SERVG.ME.Vmm;
                        var wM = 100 * SERVG.ME.NNV;
                        nwmMw(wNnwm, Wv, wM);
                        nwmMw(nnvNN, Wv, wM);
                        nwmMw(NWWvM, Wv, wM);
                        nwmMw(MNvmw, Wv, wM);
                    }
                }
            } else if (myply.state === myply.MnNNW) {
                if (SERVG.ME.wvM === 1) {
                    nmMMm = 0;
                    SERVG.ME.click = 0;
                }
            }
        };;
        var NnMMn = win.Math.sqrt(2) / 2;

        function nNvvV() {
            var nn = 0;
            if (keys.leftgo() === 1) nn |= 1;
            if (keys.rightgo() === 1) nn |= 2;
            if (keys.downgo() === 1) nn |= 4;
            if (keys.straightgo() === 1) nn |= 8;
            if (nn > 0) {
                var mysocketid = SERVG.socket[1].nnmnv;
                if (mysocketid === -1) return;
                var ME = nNM.Wvm[mnW][mysocketid];
                WvvVn = (((nn & 3) && (nn & 12)) ? NnMMn : 1) * ((keys.shiftgo() === 0) ? (mV * 1.5) : (mV * 11));
                if (nn & 1) ME.rx = ME.x - WvvVn;
                else if (nn & 2) ME.rx = ME.x + WvvVn;
                if (nn & 8) ME.ry = ME.y - WvvVn;
                else if (nn & 4) ME.ry = ME.y + WvvVn;
                ME.rx = win.Math.max(0, win.Math.min(ME.rx, nmn.width * 100));
                ME.ry = win.Math.max(0, win.Math.min(ME.ry, nmn.height * 100));
                ME.wnw = ME.rx;
                ME.WVM = ME.ry;
            }
        };;

        function wWNmN() {
            var Wv = mapbuildingbutton.mv.x - (5 * mn);
            var wM = mapbuildingbutton.mv.y + (74 * mn);
            var MVM = 45 * mn;
            for (var place = 0; place < NWw; place++) {
                var wm = Wnw[place];
                wm.mv.x = Wv + ((place % 8) * MVM);
                wm.mv.y = wM + (win.Math.floor(place / 8) * MVM);
                wm.NM();
            }
        };;

        function nvvmM() {
            if (Nnw <= 0) Nnw = 3000;
            else if (Nnw <= 500) Nnw = 3000 - Nnw;
            else if (Nnw <= 2500) Nnw = 2500;
            var NvV = "";
            NvV += wMNww(wNnwm);
            NvV += wMNww(nnvNN);
            NvV += wMNww(NWWvM);
            NvV += wMNww(MNvmw);
            var vMV = win.document.createElement('textarea');
            vMV["value"] = NvV;
            win.document["body"]["appendChild"](vMV);
            vMV["select"]();
            win.document["execCommand"]('copy');
            win.document["body"]["removeChild"](vMV);
        };;

        function nnWMw() {
            if (Nnw > 0) {
                Nnw -= mV;
                if (Nnw > 2500) Mm.globalAlpha = WNW.mWV.vvw((3000 - Nnw) / 500);
                else if (Nnw < 500) Mm.globalAlpha = WNW.mWV.vvw(Nnw / 500);
                Mm.drawImage(VWWvn, copypastebutton.mv.x - (85 * mn), copypastebutton.mv.y - (40 * mn), VWWvn.Wvw * mn, VWWvn.mNm * mn);
                Mm.globalAlpha = 1;
            }
            if (NVVNW[SERVG.ME.mmm] === win.undefined) NVVNW[SERVG.ME.mmm] = [];
            if (NVVNW[SERVG.ME.mmm][SERVG.ME.NWM] === win.undefined) NVVNW[SERVG.ME.mmm][SERVG.ME.NWM] = vM.wNm(((("(" + SERVG.ME.mmm) + ",") + SERVG.ME.NWM) + ")", "'Viga', sans-serif", "#FFFFFF", 52, 455, "#000000", 22, 22, win.undefined, win.undefined, 0.4, win.undefined, "#000000", 15.6);
            var W = NVVNW[SERVG.ME.mmm][SERVG.ME.NWM];
            Mm.drawImage(W, 5 * mn, zoombutton.mv.y - (42 * mn), W.Wvw * mn, W.mNm * mn);
        };
        var VWWvn = null;
        var Nnw = 0;
        var NVVNW = [];
        var vVnNn = 0;
        var settingbox;
        var bordermap;
        var minimap;
        var fullscreenimg;
        var settingsimg;
        var minimapbutt;
        var logicbutton;
        var mapexplobutton;
        var maproadbutton;
        var mapfurniturebutton;
        var mapbuildingbutton;
        var zoombutton;
        var unzoombutton;
        var mapdeletebutton;
        var importbutton;
        var copypastebutton;
        var homebutton;
        var zoombutton;
        var unzoombutton;

        function vnV() {
            VWWvn = vM.wNm("Copied to clipboard", "'Viga', sans-serif", "#FFFFFF", 40, 350, "#000000", 18, 18, win.undefined, win.undefined, 0.6);
            for (place = 0; place < 64; place++) Wnw.push(vM.vMM(40, 40, null, WwvNM));
            settingbox = vM.mVV(269, 267, "img/settings-box.png");
            bordermap = vM.mVV(412, 412, "img/borderBigMinimap2.png");
            minimap = vM.mVV(128, 128, "img/minimap.png");
            fullscreenimg = vM.vMM(40, 40, ["img/full-screen-out.png", "img/full-screen-in.png", "img/full-screen-click.png"]);
            settingsimg = vM.vMM(40, 40, ["img/settings-out.png", "img/settings-in.png", "img/settings-click.png"]);
            minimapbutt = vM.vMM(40, 40, ["img/minimap-button-out.png", "img/minimap-button-in.png", "img/minimap-button-click.png"]);
            logicbutton = vM.vMM(67, 67, ["img/logic-button-out.png", "img/logic-button-in.png", "img/logic-button-click.png"]);
            mapexplobutton = vM.vMM(67, 67, ["img/map-explosive-button-out.png", "img/map-explosive-button-in.png", "img/map-explosive-button-click.png"]);
            maproadbutton = vM.vMM(67, 67, ["img/map-road-button-out.png", "img/map-road-button-in.png", "img/map-road-button-click.png"]);
            mapfurniturebutton = vM.vMM(67, 67, ["img/map-furniture-button-out.png", "img/map-furniture-button-in.png", "img/map-furniture-button-click.png"]);
            mapbuildingbutton = vM.vMM(67, 67, ["img/map-building-button-out.png", "img/map-building-button-in.png", "img/map-building-button-click.png"]);
            zoombutton = vM.vMM(46.5, 46.5, ["img/zoom-button-out.png", "img/zoom-button-in.png", "img/zoom-button-click.png"]);
            unzoombutton = vM.vMM(46.5, 46.5, ["img/unzoom-button-out.png", "img/unzoom-button-in.png", "img/unzoom-button-click.png"]);
            mapdeletebutton = vM.vMM(40, 40, ["img/map-delete-button-out.png", "img/map-delete-button-in.png", "img/map-delete-button-click.png"]);
            importbutton = vM.vMM(46.5, 46.5, ["img/import-button-out.png", "img/import-button-in.png", "img/import-button-click.png"]);
            copypastebutton = vM.vMM(46.5, 46.5, ["img/copy-paste-button-out.png", "img/copy-paste-button-in.png", "img/copy-paste-button-click.png"]);
            homebutton = vM.vMM(60, 60, ["img/home-button-out.png", "img/home-button-in.png", "img/home-button-click.png"]);
        };;
        var MVv;
        var NWV = new myply.vNnMv;
        var nNw = new keys.VmwWV;
        var VWm = 1000;
        var WWN = 0;
        var VNvnM = WNW.mWV.wWM;
        var Nmv = 1000;
        var mwm = 0;
        var WVWWm = WNW.mWV.wMn;
        var WwM = 0;
        var MNw = 0;
        var mwn = win.undefined;

        function mnN() {
            win.document.getElementById("bod").style.backgroundColor = "#46664D";
            nmMMm = 0;
            vWn.nMvWM();
            if (vVnNn === 0) {
                vVnNn = 1;
                var vnvwV = items[item.NvMvM].nvN;
                for (var place = 0; place < vnvwV.length; place++) {
                    var wv = vnvwV[place];
                    wv.img = {
                        src: [wv.Nn.src, "img/useless.png", "img/useless.png"],
                        W: [{
                            m: 0
                        }, {
                            m: 0
                        }, {
                            m: 0
                        }]
                    };
                }
                var vnvwV = items[item.MMnVW].nvN;
                for (var place = 0; place < vnvwV.length; place++) {
                    var wv = vnvwV[place];
                    wv.img = {
                        src: [wv.Nn.src, "img/useless.png", "img/useless.png"],
                        W: [{
                            m: 0
                        }, {
                            m: 0
                        }, {
                            m: 0
                        }]
                    };
                }
            }
            MVWMn();
            wN.MNwmM(mapeditor);
            MNw = Nmv;
            WwM = Nmv;
            mwn = WVWWm;
            mwm = 1;
            WMM();
        };;

        function NVv(wMN) {
            nVN();
            vWn.NvwNv();
            MVv = wMN;
            VVwMW();
            MNw = VWm;
            WwM = VWm;
            mwn = VNvnM;
            WWN = 1;
        };;

        function WMM() {
            var vMm = 0;
            var wwv = 0;
            if (MNw > 0) {
                wwv = nwW;
                var vnw = mwn(1 - (MNw / WwM));
                if (vnw === 1) MNw = 0;
                if (mwm === 1) vnw = 1 - win.Math.abs(vnw);
                vMm *= vnw;
                wwv *= vnw;
            }
            settingbox.mv.x = (mmw - win.Math.floor(134 * mn)) + vMm;
            settingbox.mv.y = win.Math.max(0, VvN - win.Math.floor(133 * mn)) + wwv;
            bordermap.mv.x = (mmw - win.Math.floor(206 * mn)) + vMm;
            bordermap.mv.y = win.Math.max(0, VvN - win.Math.floor(206 * mn)) + wwv;
            minimap.mv.x = win.Math.floor(5 * mn) - vMm;
            minimap.mv.y = win.Math.floor(5 * mn) - wwv;
            fullscreenimg.mv.x = minimap.mv.x + win.Math.floor(126 * mn);
            fullscreenimg.mv.y = minimap.mv.y;
            settingsimg.mv.x = fullscreenimg.mv.x;
            settingsimg.mv.y = fullscreenimg.mv.y + win.Math.floor(44.5 * mn);
            minimapbutt.mv.x = settingsimg.mv.x;
            minimapbutt.mv.y = settingsimg.mv.y + win.Math.floor(44.5 * mn);
            logicbutton.mv.x = ((nvn - win.Math.floor(67 * mn)) + win.Math.floor(-5 * mn)) - vMm;
            logicbutton.mv.y = win.Math.floor(5 * mn) - wwv;
            mapexplobutton.mv.x = logicbutton.mv.x + win.Math.floor(-70 * mn);
            mapexplobutton.mv.y = win.Math.floor(5 * mn) - wwv;
            maproadbutton.mv.x = mapexplobutton.mv.x + win.Math.floor(-70 * mn);
            maproadbutton.mv.y = win.Math.floor(5 * mn) - wwv;
            mapfurniturebutton.mv.x = maproadbutton.mv.x + win.Math.floor(-70 * mn);
            mapfurniturebutton.mv.y = win.Math.floor(5 * mn) - wwv;
            mapbuildingbutton.mv.x = mapfurniturebutton.mv.x + win.Math.floor(-70 * mn);
            mapbuildingbutton.mv.y = win.Math.floor(5 * mn) - wwv;
            zoombutton.mv.x = win.Math.floor(5 * mn);
            zoombutton.mv.y = (nwW - win.Math.floor(46.5 * mn)) + win.Math.floor(-5 * mn);
            unzoombutton.mv.x = zoombutton.mv.x + win.Math.floor(50 * mn);
            unzoombutton.mv.y = (nwW - win.Math.floor(46.5 * mn)) + win.Math.floor(-5 * mn);
            mapdeletebutton.mv.x = minimap.mv.x + win.Math.floor(89 * mn);
            mapdeletebutton.mv.y = minimap.mv.y + win.Math.floor(126 * mn);
            importbutton.mv.x = (nvn - win.Math.floor(46.5 * mn)) + win.Math.floor(-5 * mn);
            importbutton.mv.y = (nwW - win.Math.floor(46.5 * mn)) + win.Math.floor(-5 * mn);
            copypastebutton.mv.x = importbutton.mv.x + win.Math.floor(-50 * mn);
            copypastebutton.mv.y = (nwW - win.Math.floor(46.5 * mn)) + win.Math.floor(-5 * mn);
            homebutton.mv.x = minimap.mv.x;
            homebutton.mv.y = minimap.mv.y + win.Math.floor(126 * mn);
        };;

        function NM() {
            if (MMVwV() === 0) return;
            vnMVv();
            nNvvV();
            Mm.clearRect(0, 0, nvn, nwW);
            SERVG.NNNMv();
            Mw.VMMWm();
            Mw.MvV(minimap.mv.x, minimap.mv.y);
            minimap.NM();
            fullscreenimg.NM();
            settingsimg.NM();
            minimapbutt.NM();
            logicbutton.NM();
            mapexplobutton.NM();
            maproadbutton.NM();
            mapfurniturebutton.NM();
            mapbuildingbutton.NM();
            zoombutton.NM();
            unzoombutton.NM();
            mapdeletebutton.NM();
            importbutton.NM();
            copypastebutton.NM();
            homebutton.NM();
            nnWMw();
            wWNmN();
            if (NmW === 1) {
                if (bordmapwin === 1) Mw.NNMwm(bordermap, closebutt);
                else if (settingwin === 1) Mw.MnwNw(settingbox, wWNnw, nvwMN, MNVVn, VmvmN, WMVVn, wvNNV, WVnnn, NmVWV, vVMWm, closebutt, wVwnm, VnWMV, wwMwv);
            } else if (vNv === 1) {
                if ((((keys.leftgo() + keys.rightgo()) + keys.straightgo()) + keys.downgo()) >= 1) {
                    Mm.globalAlpha = 0.3;
                    var Wv = nvm - (VNwMw * 1.5);
                    var wM = MMwnm + (VNwMw / 4);
                    wN.VWVVm(Mm, Wv, wM, 60);
                    wN.mvWVv(Mm, "#000000");
                    wN.VWVVm(Mm, Wv + ((win.Math.cos(MWVNw) * NVNwm) * mn), wM + ((win.Math.sin(MWVNw) * NVNwm) * mn), 30);
                    wN.mvWVv(Mm, "#FFFFFF");
                    Mm.globalAlpha = 1;
                }
                if (vmWNW === 1) {
                    Mm.globalAlpha = 0.3;
                    var Wv = nvm + (VNwMw * 1.5);
                    var wM = MMwnm + (VNwMw / 4);
                    wN.VWVVm(Mm, Wv, wM, 60);
                    wN.mvWVv(Mm, "#000000");
                    wN.VWVVm(Mm, Wv + ((win.Math.cos(myply.angle) * 25) * mn), wM + ((win.Math.sin(myply.angle) * 25) * mn), 30);
                    wN.mvWVv(Mm, "#FFFFFF");
                    Mm.globalAlpha = 1;
                }
            }
            vWn.nwwnv();
        };;

        function MMVwV() {
            if (WWN === 1) {
                WMM();
                if (MNw < 0) {
                    WWN = 0;
                    fullscreenimg.NNv(vM.Wmm);
                    settingsimg.NNv(vM.Wmm);
                    minimapbutt.NNv(vM.Wmm);
                    logicbutton.NNv(vM.Wmm);
                    mapexplobutton.NNv(vM.Wmm);
                    maproadbutton.NNv(vM.Wmm);
                    mapfurniturebutton.NNv(vM.Wmm);
                    mapbuildingbutton.NNv(vM.Wmm);
                    zoombutton.NNv(vM.Wmm);
                    unzoombutton.NNv(vM.Wmm);
                    mapdeletebutton.NNv(vM.Wmm);
                    importbutton.NNv(vM.Wmm);
                    copypastebutton.NNv(vM.Wmm);
                    homebutton.NNv(vM.Wmm);
                    MVv.mnN();
                    return 0;
                }
                MNw -= mV;
            } else if (mwm === 1) {
                WMM();
                if (MNw < 0) {
                    mwm = 0;
                    MmNNN();
                }
                MNw -= mV;
            }
            return 1;
        };;


        function VNn(Nv) {
            myply.VWv(Nv, myply.NVMMW);
            var vnm = 0;
            if (fullscreenimg.mw() === 1) {
                vnm = 1;
            }
            if (settingsimg.mw() === 1) {
                vnm = 1;
            }
            if (minimapbutt.mw() === 1) {
                vnm = 1;
            }
            if (logicbutton.mw() === 1) {
                vnm = 1;
            }
            if (mapexplobutton.mw() === 1) {
                vnm = 1;
            }
            if (maproadbutton.mw() === 1) {
                vnm = 1;
            }
            if (mapfurniturebutton.mw() === 1) {
                vnm = 1;
            }
            if (mapbuildingbutton.mw() === 1) {
                vnm = 1;
            }
            if (zoombutton.mw() === 1) {
                vnm = 1;
            }
            if (unzoombutton.mw() === 1) {
                vnm = 1;
            }
            if (mapdeletebutton.mw() === 1) {
                vnm = 1;
            }
            if (importbutton.mw() === 1) {
                vnm = 1;
            }
            if (copypastebutton.mw() === 1) {
                vnm = 1;
            }
            if (homebutton.mw() === 1) {
                vnm = 1;
            }
            if (NmW === 1) {
                closebutt.mw();
                if (settingwin === 1) {
                    VmvmN.mw();
                    WMVVn.mw();
                    wWNnw.mw();
                    nvwMN.mw();
                    MNVVn.mw();
                    wvNNV.mw();
                    WVnnn.mw();
                    NmVWV.mw();
                    vVMWm.mw();
                    VnWMV.mw();
                    wVwnm.mw();
                    wwMwv.mw();
                }
            } else {
                for (var place = 0; place < NWw; place++) {
                    if (Wnw[place].mw() === 1) vnm = 1;
                }
            }
            if ((vnm === 0) && (NmW === 0)) {
                nmMMm = 1;
                if (SERVG.ME.click === -1) SERVG.ME.click = 0;
            } else {
                if (SERVG.ME.click === 0) SERVG.ME.click = -1;
            }
        };;

        function vNm(Nv) {
            myply.VWv(Nv, myply.MnNNW);
            var vnm = 0;
            if (fullscreenimg.mw() === 1) {
                vnm = 1;
                if (MNnnv === 0) {
                    MNnnv = 1;
                    wN.MvMvW();
                    if (SERVG.nVM === 0) VMM.style.backgroundColor = "#3D5942";
                    else VMM.style.backgroundColor = "#0B2129";
                    audio.VnV(audio.ww.button, 1, 0);
                } else {
                    MNnnv = 0;
                    wN.WWNvM();
                    audio.VnV(audio.ww.button, 1, 0);
                }
            }
            if (settingsimg.mw() === 1) {
                vnm = 1;
                if (settingwin === 0) {
                    nVN();
                    NmW = 1;
                    settingwin = 1;
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                } else {
                    nVN();
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                }
            }
            if (minimapbutt.mw() === 1) {
                vnm = 1;
                if (bordmapwin === 0) {
                    nVN();
                    NmW = 1;
                    bordmapwin = 1;
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                } else {
                    nVN();
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                }
            }
            if (logicbutton.mw() === 1) {
                vnm = 1;
                NWw = 0;
                for (var place = 1; place < items.length; place++) {
                    var wv = items[place];
                    if (wv.behavior === vWN.cable) {
                        Wnw[NWw].MVN(wv.img.src, wv.img.W);
                        Wnw[NWw].vmM = wv.id;
                        NWw++;
                    }
                }
                audio.VnV(audio.ww.button, 1, 0);
            }
            if (mapexplobutton.mw() === 1) {
                vnm = 1;
                NWw = 0;
                for (var place = 1; place < items.length; place++) {
                    var wv = items[place];
                    if ((((wv.id === item.landmine) || (wv.id === item.c4bomb)) || (wv.id === item.woodespike)) || (wv.id === item.dynamite)) {
                        Wnw[NWw].MVN(wv.img.src, wv.img.W);
                        Wnw[NWw].vmM = wv.id;
                        NWw++;
                    }
                }
                audio.VnV(audio.ww.button, 1, 0);
            }
            if (maproadbutton.mw() === 1) {
                vnm = 1;
                NWw = 0;
                var vnvwV = items[item.NvMvM].nvN;
                for (var place = 0; place < vnvwV.length; place++) {
                    var wv = vnvwV[place];
                    Wnw[NWw].MVN(wv.img.src, wv.img.W);
                    Wnw[NWw].vmM = item.NvMvM;
                    Wnw[NWw].nVWnM = place;
                    NWw++;
                }
                audio.VnV(audio.ww.button, 1, 0);
            }
            if (mapfurniturebutton.mw() === 1) {
                vnm = 1;
                NWw = 0;
                var vnvwV = items[item.MMnVW].nvN;
                for (var place = 0; place < vnvwV.length; place++) {
                    var wv = vnvwV[place];
                    Wnw[NWw].MVN(wv.img.src, wv.img.W);
                    Wnw[NWw].vmM = item.MMnVW;
                    Wnw[NWw].nVWnM = place;
                    NWw++;
                }
                audio.VnV(audio.ww.button, 1, 0);
            }
            if (mapbuildingbutton.mw() === 1) {
                vnm = 1;
                NWw = 0;
                for (var place = 1; place < items.length; place++) {
                    var wv = items[place];
                    if (((((wv.Mvw === 1) || (wv.VWN === 1)) || (wv.WNv === 1)) || (wv.mwV === 1)) || (wv.VVmmM === 1)) {
                        Wnw[NWw].MVN(wv.img.src, wv.img.W);
                        Wnw[NWw].vmM = wv.id;
                        NWw++;
                    }
                }
                audio.VnV(audio.ww.button, 1, 0);
            }

            // scale in map editor
            if (zoombutton.mw() === 1) {
                vnm = 1;
                if (Mw.scale < 1.5) {
                    Mw.scale += 0.1;
                    audio.VnV(audio.ww.button, 1, 0);
                    unzoombutton.show();
                    if (Mw.scale >= 1.5) zoombutton.vnN();
                }
            }
            if (unzoombutton.mw() === 1) {
                vnm = 1;
                if (Mw.scale > -0.95) {
                    if (Mw.scale < 0) Mw.scale -= 0.05;
                    else Mw.scale -= 0.1;
                    audio.VnV(audio.ww.button, 1, 0);
                    zoombutton.show();
                    if (Mw.scale <= -0.95) unzoombutton.vnN();
                }
            }


            if (mapdeletebutton.mw() === 1) {
                vnm = 1;
                MVWMn();
                audio.VnV(audio.ww.button, 1, 0);
            }
            if (importbutton.mw() === 1) {
                vnm = 1;
                audio.VnV(audio.ww.open, 1, 0);
                var MWwVN = win["prompt"]("Please enter your code here", "");
                audio.VnV(audio.ww.open, 1, 0);
                if ((MWwVN != null) && (MWwVN != "")) wwMmV(MWwVN);
            }
            if (copypastebutton.mw() === 1) {
                vnm = 1;
                audio.VnV(audio.ww.button, 1, 0);
                nvvmM();
            }
            if (homebutton.mw() === 1) {
                vnm = 1;
                mapeditor.NVv(wmw);
                audio.VnV(audio.ww.play, 1, 0);
            }
            if (NmW === 1) {
                if (closebutt.mw() === 1) {
                    nVN();
                    audio.VnV(audio.ww.open, 1, 0);
                    return;
                }
                if (settingwin === 1) {
                    WMVVn.NNv(vM.Wmm);
                    VmvmN.NNv(vM.Wmm);
                    wWNnw.NNv(vM.Wmm);
                    nvwMN.NNv(vM.Wmm);
                    MNVVn.NNv(vM.Wmm);
                    wvNNV.NNv(vM.Wmm);
                    WVnnn.NNv(vM.Wmm);
                    NmVWV.NNv(vM.Wmm);
                    vVMWm.NNv(vM.Wmm);
                    wVwnm.NNv(vM.Wmm);
                    VnWMV.NNv(vM.Wmm);
                    wwMwv.NNv(vM.Wmm);
                    if (VmvmN.mw() === 1) {
                        keys.azer();
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (WMVVn.mw() === 1) {
                        keys.wasd();
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (wWNnw.mw() === 1) {
                        wN.NmmvM(1);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (nvwMN.mw() === 1) {
                        wN.NmmvM(2);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (MNVVn.mw() === 1) {
                        wN.NmmvM(3);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (wvNNV.mw() === 1) {
                        audio.Vnwmn(1);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (WVnnn.mw() === 1) {
                        audio.Vnwmn(0);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (NmVWV.mw() === 1) {
                        audio.wNnMM(1);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (vVMWm.mw() === 1) {
                        audio.wNnMM(0);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (VnWMV.mw() === 1) {
                        Mw.wvmnm(1);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (wVwnm.mw() === 1) {
                        Mw.wvmnm(2);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    } else if (wwMwv.mw() === 1) {
                        Mw.wvmnm(0);
                        audio.VnV(audio.ww.button, 1, 0);
                        return;
                    }
                    var MMMnn = settingbox.mv;
                    if ((((myply.nVm < MMMnn.x) || (myply.nVm > (MMMnn.x + (234 * mn)))) || (myply.nmW < MMMnn.y)) || (myply.nmW > (MMMnn.y + (232 * mn)))) {
                        nVN();
                        audio.VnV(audio.ww.open, 1, 0);
                        return;
                    }
                } else if (bordmapwin === 1) {
                    var mNMnn = bordermap.mv;
                    if ((((myply.nVm < mNMnn.x) || (myply.nVm > (mNMnn.x + (412 * mn)))) || (myply.nmW < mNMnn.y)) || (myply.nmW > (mNMnn.y + (412 * mn)))) {
                        nVN();
                        audio.VnV(audio.ww.open, 1, 0);
                        return;
                    }
                }
            } else {
                for (var place = 0; place < NWw; place++) {
                    if (Wnw[place].mw() === 1) {
                        audio.VnV(audio.ww.button, 1, 0);
                        SERVG.ME.putableimg = Wnw[place].vmM;
                        SERVG.ME.mWmnv = Wnw[place].nVWnM;
                        if (SERVG.ME.putableimg === item.NvMvM) SERVG.ME.nvMwN = 0;
                    }
                }
            }
        };;
        //MAP EDITOR UP UP /\ /\ /\ /\




        function wVv(Nv) {
            myply.VWv(Nv, myply.wwwmw);
            var vnm = 0;
            if (fullscreenimg.mw() === 1) {
                vnm = 1;
            }
            if (settingsimg.mw() === 1) {
                vnm = 1;
            }
            if (minimapbutt.mw() === 1) {
                vnm = 1;
            }
            if (logicbutton.mw() === 1) {
                vnm = 1;
            }
            if (mapexplobutton.mw() === 1) {
                vnm = 1;
            }
            if (maproadbutton.mw() === 1) {
                vnm = 1;
            }
            if (mapfurniturebutton.mw() === 1) {
                vnm = 1;
            }
            if (mapbuildingbutton.mw() === 1) {
                vnm = 1;
            }
            if (zoombutton.mw() === 1) {
                vnm = 1;
            }
            if (unzoombutton.mw() === 1) {
                vnm = 1;
            }
            if (mapdeletebutton.mw() === 1) {
                vnm = 1;
            }
            if (importbutton.mw() === 1) {
                vnm = 1;
            }
            if (copypastebutton.mw() === 1) {
                vnm = 1;
            }
            if (homebutton.mw() === 1) {
                vnm = 1;
            }
            if (NmW === 1) {
                closebutt.mw();
                if (settingwin === 1) {
                    VmvmN.mw();
                    WMVVn.mw();
                    wWNnw.mw();
                    nvwMN.mw();
                    MNVVn.mw();
                    wvNNV.mw();
                    WVnnn.mw();
                    NmVWV.mw();
                    vVMWm.mw();
                    VnWMV.mw();
                    wVwnm.mw();
                    wwMwv.mw();
                }
            } else {
                for (var place = 0; place < NWw; place++) Wnw[place].mw();
            }
        };;

        function NmN(Nv) {
            keys.WvMvV(Nv);
            if (Nv.keyCode === 77) {
                if (bordmapwin === 0) {
                    nVN();
                    NmW = 1;
                    bordmapwin = 1;
                    audio.VnV(audio.ww.open, 1, 0);
                } else {
                    nVN();
                    audio.VnV(audio.ww.open, 1, 0);
                }
            } else if ((Nv.keyCode === 27) && (NmW === 1)) {
                audio.VnV(audio.ww.open, 1, 0);
                nVN();
            } else if (Nv.keyCode === 82) {
                if ((SERVG.ME.wvM === 1) && (SERVG.ME.putableimg !== item.NvMvM)) SERVG.ME.nvMwN = (SERVG.ME.nvMwN + 1) % 4;
            }
        };;

        function vnW(Nv) {
            keys.mwMVV(Nv);
            if ((((Nv.keyCode === 37) || (Nv.keyCode === 38)) || (Nv.keyCode === 39)) || (Nv.keyCode === 40)) {
                Nv.preventDefault();
                return false;
            }
        };;

        function WwW(Nv) {
            var NVN = 0;
            for (var wVV = 0; wVV < Nv.touches.length; wVV++) {
                myply.VWn(NWV, Nv, Nv.touches[wVV]);
                if (NmW === 0) {
                    var nVm = win.Math.floor(NWV.clientX * wN.options.MMw);
                    var nmW = win.Math.floor(NWV.clientY * wN.options.WWvvm);
                    if (nmW < (nwW - (70 * mn))) {
                        var WMm = mWmwm * 1.5;
                        var nmV = mWmwm / 4;
                        if (nVm < mmw) {
                            var MVM = 30 * mn;
                            MWVNw = Vwv.angle(mmw - WMm, VvN + nmV, nVm, nmW);
                            NVNwm = win.Math.min(Vwv.NWN(nVm, nmW, mmw - WMm, VvN + nmV), 25);
                            if (nVm < ((mmw - WMm) - MVM)) {
                                mWM |= 1;
                                nNw.charCode = 37;
                                nNw.keyCode = 37;
                                vnW(nNw);
                            } else if (nVm > ((mmw - WMm) + MVM)) {
                                mWM |= 2;
                                nNw.charCode = 39;
                                nNw.keyCode = 39;
                                vnW(nNw);
                            }
                            if (nmW < ((VvN + nmV) - MVM)) {
                                mWM |= 4;
                                nNw.charCode = 38;
                                nNw.keyCode = 38;
                                vnW(nNw);
                            } else if (nmW > ((VvN + nmV) + MVM)) {
                                mWM |= 8;
                                nNw.charCode = 40;
                                nNw.keyCode = 40;
                                vnW(nNw);
                            }
                        } else if ((nVm < (nvn - (40 * mn))) || (nmW > (40 * mn))) {
                            NVN = 1;
                            NWV.clientX -= WMm / wN.options.MMw;
                            NWV.clientY -= nmV / wN.options.MMw;
                            if (SERVG.ME.wvM === 1) {
                                var vVMmn = win.Date.now();
                                if ((vVMmn - MMMvM) < 1000) {
                                    vmWNW = 1;
                                    NnVMv = NWV.clientX;
                                    WNmmw = NWV.clientY;
                                    VNn(NWV);
                                }
                                MMMvM = vVMmn;
                            } else {
                                vmWNW = 1;
                                NnVMv = NWV.clientX;
                                WNmmw = NWV.clientY;
                                VNn(NWV);
                            }
                        }
                        continue;
                    }
                }
                if ((NVN === 0) && (mWM === 0)) {
                    VNn(NWV);
                    NVN = 1;
                }
            }
        };;

        function nMN(Nv) {};;

        function Www(Nv) {
            var nVm = win.Math.floor(Nv.changedTouches[0].clientX * wN.options.MMw);
            var nmW = win.Math.floor(Nv.changedTouches[0].clientY * wN.options.WWvvm);
            if (nvnNv === 1) nvnNv = 0;
            else if (NmW === 1) vNm(NWV);
            else if ((vmWNW === 1) && (nVm >= mmw)) {
                vmWNW = 0;
                NWV.clientX = NnVMv;
                NWV.clientY = WNmmw;
                vNm(NWV);
                return;
            } else if (((SERVG.ME.mmM.vmm === 0) && (nVm < mmw)) && (nmW < (nwW - (70 * mn)))) {
                if ((nVm < (240 * mn)) && (nmW < (160 * mn))) vNm(NWV);
            } else vNm(NWV);
            if (mWM !== 0) {
                if (mWM & 1) {
                    nNw.charCode = 37;
                    NmN(nNw);
                }
                if (mWM & 2) {
                    nNw.charCode = 39;
                    NmN(nNw);
                }
                if (mWM & 4) {
                    nNw.charCode = 38;
                    NmN(nNw);
                }
                if (mWM & 8) {
                    nNw.charCode = 40;
                    NmN(nNw);
                }
                mWM = 0;
            }
        };;

        function vnv(Nv) {
            var NVN = 0;
            var mWVWv = 0;
            for (var wVV = 0; wVV < Nv.touches.length; wVV++) {
                myply.VWn(NWV, Nv, Nv.touches[wVV]);
                if ((SERVG.ME.mmM.vmm === 0) && (NmW === 0)) {
                    var nVm = win.Math.floor(NWV.clientX * wN.options.MMw);
                    var nmW = win.Math.floor(NWV.clientY * wN.options.WWvvm);
                    if (nmW < (nwW - (70 * mn))) {
                        var WMm = mWmwm * 1.5;
                        var nmV = mWmwm / 4;
                        if (nVm < mmw) {
                            mWVWv = 1;
                            var VNM = 0;
                            var MVM = 30 * mn;
                            MWVNw = Vwv.angle(mmw - WMm, VvN + nmV, nVm, nmW);
                            NVNwm = win.Math.min(Vwv.NWN(nVm, nmW, mmw - WMm, VvN + nmV), 25);
                            if (nVm < ((mmw - WMm) - MVM)) VNM |= 1;
                            else if (nVm > ((mmw - WMm) + MVM)) VNM |= 2;
                            if (nmW < ((VvN + nmV) + -MVM)) VNM |= 4;
                            else if (nmW > ((VvN + nmV) + MVM)) VNM |= 8;
                            if (((VNM & 1) === 1) && ((mWM & 1) !== 1)) {
                                nNw.charCode = 37;
                                vnW(nNw);
                            } else if (((VNM & 1) !== 1) && ((mWM & 1) === 1)) {
                                nNw.charCode = 37;
                                NmN(nNw);
                            }
                            if (((VNM & 2) === 2) && ((mWM & 2) !== 2)) {
                                nNw.charCode = 39;
                                vnW(nNw);
                            } else if (((VNM & 2) !== 2) && ((mWM & 2) === 2)) {
                                nNw.charCode = 39;
                                NmN(nNw);
                            }
                            if (((VNM & 4) === 4) && ((mWM & 4) !== 4)) {
                                nNw.charCode = 38;
                                vnW(nNw);
                            } else if (((VNM & 4) !== 4) && ((mWM & 4) === 4)) {
                                nNw.charCode = 38;
                                NmN(nNw);
                            }
                            if (((VNM & 8) === 8) && ((mWM & 8) !== 8)) {
                                nNw.charCode = 40;
                                vnW(nNw);
                            } else if (((VNM & 8) !== 8) && ((mWM & 8) === 8)) {
                                nNw.charCode = 40;
                                NmN(nNw);
                            }
                            mWM = VNM;
                            continue;
                        } else if ((nVm < (nvn - (40 * mn))) || (nmW > (40 * mn))) {
                            NVN = 1;
                            NWV.clientX -= WMm / wN.options.MMw;
                            NWV.clientY -= nmV / wN.options.MMw;
                            NnVMv = NWV.clientX;
                            WNmmw = NWV.clientY;
                            wVv(NWV);
                        }
                    }
                }
                if ((NVN === 0) && (mWM === 0)) {
                    wVv(NWV);
                    NVN = 1;
                }
            }
            if ((mWVWv === 0) && (mWM !== 0)) {
                if (mWM & 1) {
                    nNw.charCode = 37;
                    NmN(nNw);
                }
                if (mWM & 2) {
                    nNw.charCode = 39;
                    NmN(nNw);
                }
                if (mWM & 4) {
                    nNw.charCode = 38;
                    NmN(nNw);
                }
                if (mWM & 8) {
                    nNw.charCode = 40;
                    NmN(nNw);
                }
                mWM = 0;
            }
        };;

        function MmNNN() {
            if (vNv === 0) win.addEventListener('mousedown', VNn, false);
            if (vNv === 0) win.addEventListener('mouseup', vNm, false);
            if (vNv === 0) win.addEventListener('mousemove', wVv, false);
            if (vNv === 0) win.addEventListener('keyup', NmN, false);
            if (vNv === 0) win.addEventListener('keydown', vnW, false);
            if (vNv === 1) win.addEventListener('touchstart', WwW, false);
            if (vNv === 1) win.addEventListener('touchend', nMN, false);
            if (vNv === 1) win.addEventListener('touchcancel', Www, false);
            if (vNv === 1) win.addEventListener('touchmove', vnv, false);
        };;

        function VVwMW() {
            if (vNv === 0) win.removeEventListener('mousedown', VNn, false);
            if (vNv === 0) win.removeEventListener('mouseup', vNm, false);
            if (vNv === 0) win.removeEventListener('mousemove', wVv, false);
            if (vNv === 0) win.removeEventListener('keyup', NmN, false);
            if (vNv === 0) win.removeEventListener('keydown', vnW, false);
            if (vNv === 1) win.removeEventListener('touchstart', WwW, false);
            if (vNv === 1) win.removeEventListener('touchend', nMN, false);
            if (vNv === 1) win.removeEventListener('touchcancel', Www, false);
            if (vNv === 1) win.removeEventListener('touchmove', vnv, false);
        };;
        return {
            NVv: NVv,
            vnV: vnV,
            mnN: mnN,
            update: WMM,
            NM: NM
        };
    })();
    // MAP EDITOR /\/ /\ /\ /\


    var NMW = 1;
    var wMM = {};
    wMM.MMvVn = NMW++;
    wMM.vwWVn = NMW++;
    wMM.VWwWM = NMW++;
    wMM.Vwmwn = NMW++;
    wMM.wNWmV = NMW++;
    wMM.vnvMn = NMW++;
    wMM.MwwMM = NMW++;
    wMM.wvMWm = NMW++;
    wMM.NWnVN = NMW++;
    wMM.vWWNm = NMW++;
    wMM.VnWMW = NMW++;
    wMM.nmWVN = NMW++;
    wMM.MvVmM = NMW++;
    wMM.WmvMn = NMW++;
    wMM.VWVNW = NMW++;
    var NVwvn = [{}, {
        id: wMM.MMvVn,
        src: "img/road-T0B0L0R1.png",
        W: {
            m: 0
        },
        MvV: {
            x: 0,
            y: 0,
            WVv: 28,
            w: 28
        },
        Mww: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ],
        alt: [wMM.MMvVn]
    }, {
        id: wMM.vwWVn,
        src: "img/road-T0B0L1R0.png",
        W: {
            m: 0
        },
        MvV: {
            x: 28,
            y: 0,
            WVv: 28,
            w: 28
        },
        Mww: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ],
        alt: [wMM.vVNmn, wMM.VvNnM]
    }, {
        id: wMM.VWwWM,
        src: "img/road-T0B0L1R1.png",
        W: {
            m: 0
        },
        MvV: {
            x: 56,
            y: 0,
            WVv: 28,
            w: 28
        },
        Mww: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ],
        alt: [wMM.wNMVw, wMM.VNVvm, wMM.mWvMm, wMM.MNvnM, wMM.VvnnVWm, wMM.NmwnW, wMM.mvMWN, wMM.NVwVw]
    }, {
        id: wMM.Vwmwn,
        src: "img/road-T0B1L0R0.png",
        W: {
            m: 0
        },
        MvV: {
            x: 84,
            y: 0,
            WVv: 28,
            w: 28
        },
        Mww: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ],
        alt: [wMM.vwmNN, wMM.nmWNV]
    }, {
        id: wMM.wNWmV,
        src: "img/road-T0B1L0R1.png",
        W: {
            m: 0
        },
        MvV: {
            x: 56,
            y: 28,
            WVv: 28,
            w: 28
        },
        Mww: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ]
    }, {
        id: wMM.vnvMn,
        src: "img/road-T0B1L1R0.png",
        W: {
            m: 0
        },
        MvV: {
            x: 0,
            y: 56,
            WVv: 28,
            w: 28
        },
        Mww: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ]
    }, {
        id: wMM.MwwMM,
        src: "img/road-T0B1L1R1.png",
        W: {
            m: 0
        },
        MvV: {
            x: 112,
            y: 0,
            WVv: 28,
            w: 28
        },
        Mww: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ]
    }, {
        id: wMM.wvMWm,
        src: "img/road-T1B0L0R0.png",
        W: {
            m: 0
        },
        MvV: {
            x: 28,
            y: 28,
            WVv: 28,
            w: 28
        },
        Mww: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ]
    }, {
        id: wMM.NWnVN,
        src: "img/road-T1B0L0R1.png",
        W: {
            m: 0
        },
        MvV: {
            x: 56,
            y: 56,
            WVv: 28,
            w: 28
        },
        Mww: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ]
    }, {
        id: wMM.vWWNm,
        src: "img/road-T1B0L1R0.png",
        W: {
            m: 0
        },
        MvV: {
            x: 84,
            y: 56,
            WVv: 28,
            w: 28
        },
        Mww: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ]
    }, {
        id: wMM.VnWMW,
        src: "img/road-T1B0L1R1.png",
        W: {
            m: 0
        },
        MvV: {
            x: 84,
            y: 28,
            WVv: 28,
            w: 28
        },
        Mww: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ]
    }, {
        id: wMM.nmWVN,
        src: "img/road-T1B1L0R0.png",
        W: {
            m: 0
        },
        MvV: {
            x: 112,
            y: 56,
            WVv: 28,
            w: 28
        },
        Mww: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ]
    }, {
        id: wMM.MvVmM,
        src: "img/road-T1B1L0R1.png",
        W: {
            m: 0
        },
        MvV: {
            x: 112,
            y: 28,
            WVv: 28,
            w: 28
        },
        Mww: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ]
    }, {
        id: wMM.WmvMn,
        src: "img/road-T1B1L1R0.png",
        W: {
            m: 0
        },
        MvV: {
            x: 0,
            y: 28,
            WVv: 28,
            w: 28
        },
        Mww: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ]
    }, {
        id: wMM.VWVNW,
        src: "img/road-T1B1L1R1.png",
        W: {
            m: 0
        },
        MvV: {
            x: 28,
            y: 56,
            WVv: 28,
            w: 28
        },
        Mww: [
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ],
        alt: [wMM.wmMVw, wMM.vnWNW]
    }];
    try {
        if (VwM !== win.undefined) {
            VwM.wMM = wMM;
            VwM.NVwvn = NVwvn;
        }
    } catch (vNn) {}

        // OPTIONS 1
        var Mw = (function() {
            var wmn = 100;      // [map] building positioning scale - dont change
            var nwn = wmn / 2;  // offset of colliding from walls  - dont change its just visual
            var VNvvM = 1;
            var NVmMW = 13;
            var WnWvv = 9;
            var WwmVw = 100;    // how far cursor vision goes
            var WMNWw = 0.025;  // vision cursor speed
            var NMmmm = 0;  // vision sclale ins building; near wall when you stend in corner
            var VmNmN = 0.01;   // how fast the focus of changing vision scale is
            var NmMvvvN = 0.008;
            var NMv = 0;
            var WMwnW = 0;
            var mmVNm = 0;
            var wWw = 0;
            var NnvWw = 3;
            var nwMnv = 0;
            var vnvWWnW = 0;
            var vvVMV = 0;
            var VnvWV = 0;
            var vvNWNnN = 450;
            var vWw = 410;
            var wvNVM = vWw;
            var wVNMN = 412 / 8;
            var NnWnv = 0;
            var bordermapbig = "img/borderBigMinimap2.png";
            var maparrowicon = "img/arrow-minimap.png";
            var maparrowicon2 = "img/arrow-minimap2.png";
            var houseicon = "img/house-icon.png";
            var cityicon = "img/city-icon.png";
            var emptyinventoryicon = "img/inv-empty.png";
            var looticon = "img/loot.png";
            var lootmobileicon = "img/loot-mobile.png";
            var loot2icon = "img/loot2.png";
            var timericon = "img/timer.png";
            var craftgrid = "img/craft-grid.png";
            var timerarrow = "img/timer-arrow.png";
            var timerlights = "img/timer-lights.png";
            var hintrotate = "img/hint-rotate.png";
            var useicon = "img/day-unusable.png";
            var MMVnVmV = "img/day-unusable.png";
            var dayclock = "img/day-clock.png";
            var nightclock = "img/night-clock.png";
            var clockhand = "img/clock-hand.png";
            var clockhandrad = "img/clock-hand-radiation.png";
            var dayclockhand = "img/day-clock-hand.png";
            var craftgauge = "img/craft-gauge.png";
            var strokebonus = "img/stroke-bonus.png";
            var wrongtool = "img/wrong-tool.png";
            var handtool = "img/hand-tool.png";
            var arrowcraft = "img/arrow-craft.png";
            var unlockskill = "img/unlock-skills.png";
            var serverfull = "img/server-full.png";
            var serverold = "img/server-old.png";
            var clientold = "img/client-old.png";
            var serverwrong = "img/server-wrong.png";
            var invbox = "img/invitation-box.png";
            var timebox = "img/time-box.png";
            var rankbox = "img/rank-box.png";
            var toxicalert = "img/toxic-alert.png";
            var radalert = "img/radiation-alert.png";
            var Mvvwv = 500;    // position scale of minnimap in left up corner
            var mVmWm = 256;
            var NNmnW = mVmWm * 2;
            var mMmvV = 500;
            var WWn = win.Math.floor(mVmWm / 2);
            var nWWwM = win.Math.floor(WWn / 2);
            var NVvVm = "img/alert";
            var Vwwmw = 699;
            var nvnwM = 738;
            var NVWvm = "#70BD56";
            var wmvWn = "#e58833";
            var WNwVW = "#55B7BC";
            var VNvVn = "#d7c83a";
            var wwWvN = "#FFFFFF";
            var Mvnwm = 3000;
            var mmWWw = 500;
            var WWMnN = 2500;
            var WNVNM = win.Math.PI * 2;
            var Mwwnm = 165 * (win.Math.PI / 180);
            var Mvv = win.Math.PI / 2;
            var mWvNn = win.Math.PI / SERVG.Mnvww;
            var key_a = 1;
            var key_d = 2;
            var key_w = 4;
            var key_s = 8;
            var MMn = 16;
            var nNn = 32;
            var Nvn = 64;
            var nwM = 128;
            var mMwmm = 0;
            var NVW = 1;
            var mWn = 2;
            var WMN = 4;
            var wwm = 8;
            var MwnMm = 0;
            var NNvnn = 1;
            var MnVmm = 2;
            var WnmmN = 3;
            var vNw = [
                [],
                [],
                [],
                []
            ];
            vNw[MwnMm][mMwmm] = 0;
            vNw[MwnMm][NVW] = 3;
            vNw[MwnMm][mWn] = 6;
            vNw[MwnMm][WMN | wwm] = 9;
            vNw[MwnMm][WMN] = 4;
            vNw[MwnMm][wwm] = 5;
            vNw[MwnMm][NVW | WMN] = 27;
            vNw[MwnMm][NVW | wwm] = 20;
            vNw[MwnMm][mWn | WMN] = 7;
            vNw[MwnMm][mWn | wwm] = 28;
            vNw[MwnMm][(NVW | WMN) | wwm] = 24;
            vNw[MwnMm][(mWn | WMN) | wwm] = 29;
            vNw[MnVmm][mMwmm] = 0;
            vNw[MnVmm][NVW] = 3;
            vNw[MnVmm][mWn] = 6;
            vNw[MnVmm][WMN | wwm] = 9;
            vNw[MnVmm][WMN] = 4;
            vNw[MnVmm][wwm] = 5;
            vNw[MnVmm][NVW | WMN] = 27;
            vNw[MnVmm][NVW | wwm] = 20;
            vNw[MnVmm][mWn | WMN] = 7;
            vNw[MnVmm][mWn | wwm] = 28;
            vNw[MnVmm][(NVW | WMN) | wwm] = 24;
            vNw[MnVmm][(mWn | WMN) | wwm] = 29;
            vNw[NNvnn][mMwmm] = 11;
            vNw[NNvnn][NVW] = 12;
            vNw[NNvnn][mWn] = 17;
            vNw[NNvnn][WMN | wwm] = 10;
            vNw[NNvnn][WMN] = 19;
            vNw[NNvnn][wwm] = 18;
            vNw[NNvnn][NVW | WMN] = 34;
            vNw[NNvnn][NVW | wwm] = 22;
            vNw[NNvnn][mWn | WMN] = 23;
            vNw[NNvnn][mWn | wwm] = 33;
            vNw[NNvnn][(NVW | WMN) | wwm] = 35;
            vNw[NNvnn][(mWn | WMN) | wwm] = 32;
            vNw[WnmmN][mMwmm] = 11;
            vNw[WnmmN][NVW] = 15;
            vNw[WnmmN][mWn] = 14;
            vNw[WnmmN][WMN | wwm] = 10;
            vNw[WnmmN][WMN] = 19;
            vNw[WnmmN][wwm] = 18;
            vNw[WnmmN][NVW | WMN] = 37;
            vNw[WnmmN][NVW | wwm] = 16;
            vNw[WnmmN][mWn | WMN] = 23;
            vNw[WnmmN][mWn | wwm] = 38;
            vNw[WnmmN][(NVW | WMN) | wwm] = 36;
            vNw[WnmmN][(mWn | WMN) | wwm] = 39;
            var WMV = [];
            WMV[0] = 0;
            WMV[key_a] = 3;
            WMV[key_d] = 4;
            WMV[key_w] = 2;
            WMV[key_s] = 1;
            WMV[key_a | key_w] = 17;
            WMV[key_a | key_d] = 5;
            WMV[key_a | key_s] = 18;
            WMV[key_d | key_w] = 16;
            WMV[key_d | key_s] = 19;
            WMV[key_w | key_s] = 6;
            WMV[(key_a | key_w) | key_s] = 10;
            WMV[(key_a | key_w) | key_d] = 9;
            WMV[(key_s | key_w) | key_d] = 11;
            WMV[(key_a | key_s) | key_d] = 8;
            WMV[((key_a | key_w) | key_d) | key_s] = 7;
            WMV[(key_s | key_d) | MMn] = 12;
            WMV[(key_s | key_a) | nNn] = 13;
            WMV[(key_w | key_a) | nwM] = 14;
            WMV[(key_w | key_d) | Nvn] = 15;
            WMV[((key_w | key_s) | key_d) | MMn] = 20;
            WMV[(((key_w | key_s) | key_d) | key_a) | MMn] = 21;
            WMV[((key_a | key_s) | key_d) | MMn] = 22;
            WMV[(((key_w | key_s) | key_d) | key_a) | Nvn] = 23;
            WMV[((key_a | key_w) | key_d) | Nvn] = 24;
            WMV[((key_w | key_s) | key_d) | Nvn] = 25;
            WMV[((key_w | key_s) | key_a) | nwM] = 26;
            WMV[(((key_w | key_s) | key_d) | key_a) | nwM] = 27;
            WMV[((key_w | key_d) | key_a) | nwM] = 28;
            WMV[((key_s | key_d) | key_a) | nNn] = 29;
            WMV[(((key_w | key_s) | key_d) | key_a) | nNn] = 30;
            WMV[((key_w | key_s) | key_a) | nNn] = 31;
            WMV[((((((key_w | key_s) | key_d) | key_a) | nNn) | MMn) | nwM) | Nvn] = 32;
            WMV[((((key_w | key_s) | key_d) | key_a) | nNn) | nwM] = 33;
            WMV[((((key_w | key_s) | key_d) | key_a) | nNn) | MMn] = 34;
            WMV[((((key_w | key_s) | key_d) | key_a) | nNn) | Nvn] = 35;
            WMV[((((key_w | key_s) | key_d) | key_a) | MMn) | nwM] = 36;
            WMV[((((key_w | key_s) | key_d) | key_a) | Nvn) | MMn] = 37;
            WMV[((((key_w | key_s) | key_d) | key_a) | Nvn) | nwM] = 38;
            WMV[(((key_w | key_s) | key_d) | Nvn) | MMn] = 39;
            WMV[(((key_w | key_s) | key_a) | nwM) | nNn] = 40;
            WMV[(((key_d | key_s) | key_a) | MMn) | nNn] = 41;
            WMV[(((key_d | key_w) | key_a) | Nvn) | nwM] = 42;
            WMV[(((((key_w | key_s) | key_d) | key_a) | nNn) | nwM) | Nvn] = 43;
            WMV[(((((key_w | key_s) | key_d) | key_a) | MMn) | nwM) | Nvn] = 44;
            WMV[(((((key_w | key_s) | key_d) | key_a) | nNn) | MMn) | Nvn] = 45;
            WMV[(((((key_w | key_s) | key_d) | key_a) | nNn) | MMn) | nwM] = 46;
            var vMNWw = 0;
            var wVmnN = 1;
            var nWNMn = 2;
            var wnNWM = 600;
            var place, vv;
            var wvm = 0;
            var NNw = 0;
            var NmM = 0;
            var WWV = 0;
            var NVVWM = 0;
            var WVNMV = 0;
            var vvWnv = 0;
            var Nvmmn = 0;
            var vwMWM = VmNmN;
            var WvmnV = 0;
            var wWWNM = 0;
            var vMnmV = [];
            for (place = 0; place < 20; place++) vMnmV[place] = {
                m: 0
            };
            var NwMVW = nWNMn;
            var vMnnw = [];
            var NwV = [];
            var wWmnn = NVmMW;
            var VmvVW = WnWvv;
            var NwVwM = NVmMW * wmn;
            var wNwMv = WnWvv * wmn;
            var NmWnM = [];
            var nNMVM = {
                m: 0
            };
            var NvwMN = {
                m: 0
            };
            var wnW = {
                nn: 0,
                WMw: 0,
                src: arrowcraft,
                W: {
                    m: 0
                }
            };
            var wvV = {
                nn: 0,
                WMw: 0,
                src: unlockskill,
                W: {
                    m: 0
                }
            };
            var wMMMW = {
                src: timebox,
                W: {
                    m: 0
                }
            };
            var WvWnV = {
                src: rankbox,
                W: {
                    m: 0
                }
            };
            var WWmMW = {
                src: toxicalert,
                W: {
                    m: 0
                }
            };
            var MvvNN = 0;
            var VmWNN = {
                src: radalert,
                W: {
                    m: 0
                }
            };
            var WNmVW = 0;
            var econtainericon = {
                src: "img/e-furniture.png",
                W: {
                    m: 0
                }
            };
            var vMnmm = wN.wvv("img/toxic-area2.png");
            var VmnwN = wN.wvv("img/toxic-area3.png");
            var wVVVn = [];
            var WVw = [];
            var wmvVw = {
                m: 0
            };
            var WwwWM = {
                m: 0
            };
            var nMWVv = {
                m: 0
            };
            var VWvVN = {
                m: 0
            };
            var NNmMN = [0, 0, 0, 0];
            var WwmVM = NMmmm;
            var WvnvV = [];
            var wVVMw = 0;
            var timer = {
                m: 0
            };
            var arrow = {
                m: 0
            };
            var lights = {
                m: 0
            };
            var WMWvN = mMmvV;
            var wWNmv = {
                m: 0
            };
            var wNvNm = {
                m: 0
            };
            var vvNWN = {
                src: strokebonus,
                W: {
                    m: 0
                }
            };
            var VnwNw = 0;
            var NmWvw = {
                src: wrongtool,
                W: {
                    m: 0
                }
            };
            var vwnWv = {
                src: handtool,
                W: {
                    m: 0
                }
            };
            var vnVmM = 12000;
            var wMVMm = 12000;
            var wVMNN = [];
            for (place = 0; place < 10; place++) {
                wVMNN[place] = [];
                for (vv = 0; vv < 3; vv++) wVMNN[place][vv] = {
                    m: 0
                };
            };
            var WMw = [];
            for (place = 0; place < 8; place++) {
                WMw[place] = [];
                for (vv = 0; vv < 2; vv++) WMw[place][vv] = {
                    m: 0
                };
            }
            var arrowiconmap2 = {
                src: maparrowicon,
                W: {
                    m: 0
                }
            };
            var arrowiconmap = {
                src: maparrowicon2,
                W: {
                    m: 0
                }
            };
            var MvV = {
                m: 0
            };
            var houseiconmap = {
                src: houseicon,
                W: {
                    m: 0
                }
            };
            var cityiconmap = {
                src: cityicon,
                W: {
                    m: 0
                }
            };
            var WmVNn = {
                src: nightclock,
                W: {
                    m: 0
                }
            };
            var nvvVW = {
                src: dayclock,
                W: {
                    m: 0
                }
            };
            var nMmvV = {
                src: clockhand,
                W: {
                    m: 0
                }
            };
            var VWmVV = {
                src: dayclockhand,
                W: {
                    m: 0
                }
            };
            var wmmvv = {
                src: clockhandrad,
                W: {
                    m: 0
                }
            };
            var MnNnW = {
                src: serverfull,
                W: {
                    m: 0
                }
            };
            var VVvnW = {
                src: serverold,
                W: {
                    m: 0
                }
            };
            var WWwmW = {
                src: clientold,
                W: {
                    m: 0
                }
            };
            var nWvvv = {
                src: serverwrong,
                W: {
                    m: 0
                }
            };
            var teambox = {
                m: 0
            };
            var wwvmV = [];
            for (place = 0; place < 20; place++) wwvmV.push({
                m: 0
            });
            var nwV = win.document.createElement('canvas');
            var nVMnw = nwV.getContext('2d');
            nwV.width = vWw;
            nwV.height = wvNVM;
            nwV.m = 1;
            nwV.Wvw = nwV.width / 2;
            nwV.mNm = nwV.height / 2;
            var MWNMV = {
                W: nwV
            };
            var VnMNv = win.document.createElement('canvas');
            var VnmnV = VnMNv.getContext('2d');
            VnMNv.width = vWw;
            VnMNv.height = wvNVM;
            VnMNv.m = 1;
            VnMNv.Wvw = nwV.width / 2;
            VnMNv.mNm = nwV.height / 2;
            var MMvWn = {
                W: VnMNv
            };
            var mWWwn = 0;
    
            function mwNmN() {
                if (SERVG.ME.wMwmv === 8) {
                    nVMnw.clearRect(0, 0, vWw, wvNVM);
                    VnmnV.clearRect(0, 0, vWw, wvNVM);
                    for (var place = 0; place < 8; place++) {
                        for (var vv = 0; vv < 8; vv++) {
                            var wVvnN = SERVG.ME.Mwwnw[place][vv];
                            if (wVvnN === 7) nVMnw.drawImage(vMnmm, 2 + (vv * wVNMN), (place * wVNMN) + 1, vMnmm.Wvw, vMnmm.mNm);
                            else nVMnw.drawImage(VmnwN, 2 + (vv * wVNMN), (place * wVNMN) + 1, vMnmm.Wvw, vMnmm.mNm);
                        }
                    }
                } else {
                    nVMnw.drawImage(VnMNv, 0, 0);
                    VnmnV.clearRect(0, 0, vWw, wvNVM);
                    for (var nMm = 0; nMm < 12; nMm++) {
                        var MWW = SERVG.ME.vVVnm[nMm];
                        var place = MWW[0];
                        var vv = MWW[1];
                        if (place === -1) continue;
                        VnmnV.drawImage(vMnmm, 2 + (vv * wVNMN), (place * wVNMN) + 1, vMnmm.Wvw, vMnmm.mNm);
                    }
                };
            };;
            var NmNmm = win.document.createElement('canvas');
            var Vwvwn = NmNmm.getContext('2d');
            NmNmm.width = Vwwmw;
            NmNmm.height = nvnwM;
            WMnvM = [];
            for (var place = 0; place < 9; place++) WMnvM[place] = 0;
            var MNW = 0;
            for (place = 0; place < WnWvv; place++) {
                vMnnw[place] = [];
                for (var vv = 0; vv < NVmMW; vv++) vMnnw[place][vv] = 0;
            }
            var mWvnN = win.document.createElement("canvas");
            var nwnVW = mWvnN.getContext("2d");
            mWvnN.width = 280;
            mWvnN.height = 148;
            var mwwNm = -1;
            var wmvMm = [];
            var nmMMW = [];
            var MwV = win.document.createElement("canvas");
            var MnmmM = MwV.getContext("2d");
            MwV.width = 280;
            MwV.height = 50;
            var wmmVm = -1;
            var MmWMv = win.document.createElement("canvas");
            var NnMwN = MmWMv.getContext("2d");
            MmWMv.width = 420;
            MmWMv.height = 148;
            var MMNWW = -1;
    
            function MmmnN() {
                this.mVN = 0;
                this.MMNVm = 0;
                this.MmvNw = 0;
                this.NMn = 0;
                this.Mvw = 0;
                this.MNW = 0;
                this.nNNwM = 0;
                this.mysocketid = 0;
                this.wMV = 0;
                this.nww = 0;
                this.place = 0;
                this.b = [];
                this.rotate = 0;
                for (var place = 0; place < 3; place++) this.b.push({
                    type: 0,
                    nnN: 0
                });
            };;
    
            function wmNMv(player, WN) {
                if ((player.Mmm > 0) || (player.vwW !== 0)) return 0;
                var place = player.place;
                var vv = player.vv;
                var vV = player.nNN >> 7;
                var Wn = 0;
                switch (WN) {
                    case 0:
                        if ((place + 1) < wWw) {
                            var VMV = NwV[place + 1][vv];
                            if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                                if (VMV.rotate === 1) Wn += NVW;
                                else if (VMV.rotate === 3) Wn += mWn;
                            }
                        }
                        if ((vv - 1) >= 0) {
                            var VMV = NwV[place][vv - 1];
                            if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 3) || (VMV.rotate === 0))) Wn += WMN;
                        }
                        if ((vv + 1) < NMv) {
                            var VMV = NwV[place][vv + 1];
                            if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 1) || (VMV.rotate === 0))) Wn += wwm;
                        }
                        break;
                    case 1:
                        if ((vv - 1) >= 0) {
                            var VMV = NwV[place][vv - 1];
                            if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                                if (VMV.rotate === 0) Wn += mWn;
                                else if (VMV.rotate === 2) Wn += NVW;
                            }
                        }
                        if ((place - 1) >= 0) {
                            var VMV = NwV[place - 1][vv];
                            if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 0) || (VMV.rotate === 1))) Wn += WMN;
                        }
                        if ((place + 1) < wWw) {
                            var VMV = NwV[place + 1][vv];
                            if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 2) || (VMV.rotate === 1))) Wn += wwm;
                        }
                        break;
                    case 2:
                        if ((place - 1) >= 0) {
                            var VMV = NwV[place - 1][vv];
                            if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                                if (VMV.rotate === 1) Wn += mWn;
                                else if (VMV.rotate === 3) Wn += NVW;
                            }
                        }
                        if ((vv - 1) >= 0) {
                            var VMV = NwV[place][vv - 1];
                            if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 3) || (VMV.rotate === 2))) Wn += wwm;
                        }
                        if ((vv + 1) < NMv) {
                            var VMV = NwV[place][vv + 1];
                            if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 1) || (VMV.rotate === 2))) Wn += WMN;
                        }
                        break;
                    case 3:
                        if ((vv + 1) < NMv) {
                            var VMV = NwV[place][vv + 1];
                            if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                                if (VMV.rotate === 0) Wn += NVW;
                                else if (VMV.rotate === 2) Wn += mWn;
                            }
                        }
                        if ((place - 1) >= 0) {
                            var VMV = NwV[place - 1][vv];
                            if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 0) || (VMV.rotate === 3))) Wn += wwm;
                        }
                        if ((place + 1) < wWw) {
                            var VMV = NwV[place + 1][vv];
                            if (((VMV.mVN === MNW) && (VMV.Mvw === vV)) && ((VMV.rotate === 2) || (VMV.rotate === 3))) Wn += WMN;
                        }
                        break;
                }
                return vNw[WN][Wn];
            };;
    
            function Wwmwm(player) {
                if ((player.Mmm > 0) || (player.vwW !== 0)) return 0;       //debug here triger on sight instant
                var place = player.place;
                var vv = player.vv;
                var vV = player.nNN >> 7;
                var Wn = 0;
                var N = 0,
                    mMn = 0,
                    M = 0,
                    MNMWN = 0;
                if ((place - 1) >= 0) {
                    var VMV = NwV[place - 1][vv];
                    if (VMV.MMNVm === MNW) {
                        mMn = 1;
                        Wn += key_w;
                    }
                }
                if ((place + 1) < wWw) {
                    var VMV = NwV[place + 1][vv];
                    if (VMV.MMNVm === MNW) {
                        Wn += key_s;
                        M = 1;
                    }
                }
                if ((vv - 1) >= 0) {
                    var VMV = NwV[place][vv - 1];
                    if (VMV.MMNVm === MNW) {
                        Wn += key_a;
                        MNMWN = 1;
                    }
                }
                if ((vv + 1) < NMv) {
                    var VMV = NwV[place][vv + 1];
                    if (VMV.MMNVm === MNW) {
                        Wn += key_d;
                        N = 1;
                    }
                }
                if ((N + mMn) === 2) {
                    var VMV = NwV[place - 1][vv + 1];
                    if (VMV.MMNVm === MNW) Wn += Nvn;
                }
                if ((MNMWN + mMn) === 2) {
                    var VMV = NwV[place - 1][vv - 1];
                    if (VMV.MMNVm === MNW) Wn += nwM;
                }
                if ((M + N) === 2) {
                    var VMV = NwV[place + 1][vv + 1];
                    if (VMV.MMNVm === MNW) Wn += MMn;
                }
                if ((M + MNMWN) === 2) {
                    var VMV = NwV[place + 1][vv - 1];
                    if (VMV.MMNVm === MNW) Wn += nNn;
                }
                console.log(player.place);
                return WMV[Wn];
            };;
    
            function WwmwN(player) {
                if ((player.Mmm > 0) || (player.vwW !== 0)) return 0;
                var place = player.place;
                var vv = player.vv;
                var Mvw = items[player.nNN >> 7];
                var vV = Mvw.vVwVM;
                var Wn = 0;
                var N = 0,
                    mMn = 0,
                    M = 0,
                    MNMWN = 0;
                if ((place - 1) >= 0) {
                    var VMV = NwV[place - 1][vv];
                    if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                        mMn = 1;
                        Wn += key_w;
                    }
                }
                if ((place + 1) < wWw) {
                    var VMV = NwV[place + 1][vv];
                    if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                        Wn += key_s;
                        M = 1;
                    }
                }
                if ((vv - 1) >= 0) {
                    var VMV = NwV[place][vv - 1];
                    if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                        Wn += key_a;
                        MNMWN = 1;
                    }
                }
                if ((vv + 1) < NMv) {
                    var VMV = NwV[place][vv + 1];
                    if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) {
                        Wn += key_d;
                        N = 1;
                    }
                }
                if ((N + mMn) === 2) {
                    var VMV = NwV[place - 1][vv + 1];
                    if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) Wn += Nvn;
                }
                if ((MNMWN + mMn) === 2) {
                    var VMV = NwV[place - 1][vv - 1];
                    if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) Wn += nwM;
                }
                if ((M + N) === 2) {
                    var VMV = NwV[place + 1][vv + 1];
                    if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) Wn += MMn;
                }
                if ((M + MNMWN) === 2) {
                    var VMV = NwV[place + 1][vv - 1];
                    if ((VMV.mVN === MNW) && (VMV.Mvw === vV)) Wn += nNn;
                }
                var Wn = WMV[Wn];
                NwV[place][vv].MmvNw = Mvw.MmvNw[Wn];
                return Wn;
            };;
    
            function mnwmm(player) {
                var vV = player.nNN >> 7;
                if (((items[vV].VWN !== 1) || (player.Mmm > 0)) || (player.Vvm > 0)) return;
                var VMV = NwV[player.place][player.vv];
                VMV.mVN = MNW;
                VMV.Mvw = vV;
                VMV.rotate = (player.nNN >> 5) & 3;
            };;
    
            function VWVVw(player) {
                var vV = player.nNN >> 7;
                if (((items[vV].Mvw !== 1) || (player.Mmm > 0)) || (player.Vvm > 0)) return;
                var VMV = NwV[player.place][player.vv];
                VMV.mVN = MNW;
                VMV.Mvw = items[vV].vVwVM;
                if (SERVG.ME.mmm === player.vv) {
                    var NWN = win.Math.max(1, win.Math.abs(SERVG.ME.NWM - player.place));
                    if (SERVG.ME.NWM < player.place) NNmMN[0] = WwmVM / NWN;
                    else NNmMN[1] = WwmVM / NWN;
                } else if (SERVG.ME.NWM === player.place) {
                    var NWN = win.Math.max(1, win.Math.abs(SERVG.ME.mmm - player.vv));
                    if (SERVG.ME.mmm < player.vv) NNmMN[2] = WwmVM / NWN;
                    else NNmMN[3] = WwmVM / NWN;
                }
            };;
    
            function wVnnN(player) {
                var vV = player.nNN >> 7;
                if (((items[vV].Mvw !== 1) || (player.Mmm > 0)) || (player.Vvm > 0)) return;
                var VMV = NwV[player.place][player.vv];
                VMV.MMNVm = MNW;
            };;
    
            function MmnMv(player, nnN) {
                var place = player.place;
                var vv = player.vv;
                var VMV = NwV[place][vv];
                if (VMV.MNW === MNW) {
                    if (VMV.place < 3) {
                        var M = VMV.b[VMV.place];
                        VMV.place += 1;
                        M.type = player.type;
                        M.nnN = nnN;
                    }
                } else {
                    VMV.MNW = MNW;
                    var M = VMV.b[0];
                    VMV.place = 1;
                    M.type = player.type;
                    M.nnN = nnN;
                }
            };;
    
            function vision(wVNwM, MMnVM, VmNwV) {
                MmWMW = win.document.getElementById("bod").onresize;
                if (SERVG.Vnn === SERVG.VNVWN) {
                    nVMnw.clearRect(0, 0, vWw, vWw);
                    VnmnV.clearRect(0, 0, vWw, vWw);
                    MvvNN = 0;
                }
                WNmVW = 0;
                Mw.nwNWm = 0;
                Mw.WwnNw = 0;
                if (wVNwM !== win.undefined) WMWvN = 0;
                else WMWvN = mMmvV;
                if (VmNwV !== win.undefined) vwMWM = VmNwV;
                else vwMWM = VmNmN;
                if (MMnVM !== win.undefined) WwmVM = MMnVM;
                else WwmVM = NMmmm;
                NmM = 0;
                WWV = 0;
                SERVG.ME.x = 0;
                SERVG.ME.y = 0;
                SERVG.ME.NWM = 0;
                SERVG.ME.mmm = 0;
                wnW.WMw = 0;
                wnW.nn = 0;
                wvV.WMw = 0;
                wvV.nn = 0;
                VwmMm.id = -1;
                VwmMm.mvN = -1;
                var vW = clint.getItem("particles");
                if (vW !== null) NwMVW = win.Number(vW);
                WmN = "";
                nNmVw = null;
                nmn.width = 150;
                nmn.height = 150;
                Mw.nnmMW = (nmn.width * 100) / 255;
                NMv = nmn.width;
                wWw = nmn.height;
                WMwnW = wmn * NMv;
                mmVNm = wmn * wWw;
                nwMnv = 824 / WMwnW;
                vvVMV = 824 - mVmWm;
                VnvWV = vvVMV + WWn;
                NnWnv = WMwnW / 8;
                SERVG.mmMMM(NMv, wWw);
                for (var place = 0; place < wWw; place++) {
                    NwV[place] = [];
                    for (var vv = 0; vv < NMv; vv++) NwV[place][vv] = new MmmnN;
                }
                var vvv = nNM.Wvm[0].length;
                for (place = 0; place < vvv; place++) WvnvV[place] = null;
            };;
    
            // items count text
            function textnumberitem(wm, NV, Wv, wM, vwn, WMn) {
                wm.mv.x = Wv;
                wm.mv.y = wM;
                wm.NM();
                var wv = items[NV[0]];
                var nM = NV[1];
                if (nM > 1) {
                    if (vwn[nM] === win.undefined) {
                        vwn[nM] = {
                            W: vM.wNm("x" + nM, "'Black Han Sans', sans-serif", "#ffffff", 30, 250, win.undefined, 15, 12, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12)
                        };
                        vwn[nM].W.m = 1;
                    }
                    wN.WM(vwn[nM], (Wv / mn) + 53, (wM / mn) + 55, -0.5, 0, 0, 1);
                }
                if ((wv.vMv !== win.undefined) && (wv.mMVwm === win.undefined)) {
                    var nM = NV[3];
                    if (WMn[nM] === win.undefined) {
                        WMn[nM] = {
                            W: vM.wNm("x" + nM, "'Black Han Sans', sans-serif", "#FFFF00", 30, 250, win.undefined, 15, 12, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12)
                        };
                        WMn[nM].W.m = 1;
                    }
                    wN.WM(WMn[nM], (Wv / mn) + 53, (wM / mn) + 55, -0.5, 0, 0, 1);
                }
                if (wv.vWVMV !== win.undefined) {
                    var VWNwv = win.Math.floor(NV[3] / 12.8);
                    var W = wwvmV[VWNwv];
                    if(W != null){
                        if (W.m !== 1) {
                        wwvmV[VWNwv] = wN.wvv(("img/rotten" + VWNwv) + ".png", W);
                    } else Mm.drawImage(W, Wv + (0.5 * mn), wM, (mn * W.width) / 2, (mn * W.height) / 2);
                    }
                }
            };;
            //Отрисовка описания предмета в инвентаре
            function NMMwN(Wn, Wv, wM) {
                if (wmvMm[Wn] === win.undefined) {
                    wmvMm[Wn] = win.document.createElement("canvas");
                    nmMMW[Wn] = wmvMm[Wn].getContext("2d");
                    var mWwVV = wmvMm[Wn];
                    var Nvmwn = nmMMW[Wn];
                    mWwVV.width = 400;
                    mWwVV.height = 148;
                    Nvmwn.clearRect(0, 0, 400, 148);
                    wN.vWNWw(Nvmwn, 0, 0, 400, 148, 10);
                    Nvmwn.fillStyle = "#000000";
                    Nvmwn.globalAlpha = 0.5;
                    Nvmwn.fill();
                    Nvmwn.globalAlpha = 1;
                    itemstatsfunc(nmMMW[Wn], Wn);
                }
                var vN = mn * 74;
                Mm.drawImage(wmvMm[Wn], Wv, wM, mn * 190, vN);
            };;
    
            function mmnMw(vwn, WMn, MmV, bagbutt) {
                if (SERVG.ME.GHOUL !== 0) return;
                var inventory = windowobjects.inventory;
                if (nNMVM.m !== 1) {
                    nNMVM = wN.wvv(emptyinventoryicon, nNMVM);
                    return;
                }
                var NV = SERVG.ME.inventory;
                var vvv = NV.length;
                var WW = (nNMVM.width * mn) / 2;
                var vN = (nNMVM.height * mn) / 2;
                var wwn = win.Math.max(300 * mn, (nvn - (WW * vvv)) / 2);
                var Nmn = (nwW - vN) - (5 * mn);
                var Wv = wwn;
                var wM = Nmn;
                var MVM = (5 * mn) + WW;
                if (vvv > 10) {
                    bagbutt.mv.x = nvn - (69 * mn);
                    bagbutt.mv.y = nwW - (68 * mn);
                    bagbutt.NM();
                    if (bagbutt.open === 0) vvv = 10;
                }
                for (var place = 0; place < vvv; place++) {
                    var wm = inventory[place];
                    if (NV[place][0] === 0) {
                        wm.mv.x = Wv;
                        wm.mv.y = wM;
                        Mm.drawImage(nNMVM, Wv, wM, WW, vN);
                    } else textnumberitem(wm, NV[place], Wv, wM, vwn, WMn);
                    if (place === 9) {
                        Wv = bagbutt.mv.x - (5 * mn);
                        wM = bagbutt.mv.y - MVM;
                    } else if (place === 12) {
                        Wv -= MVM;
                        wM = bagbutt.mv.y - MVM;
                    } else if (place > 9) wM -= MVM;
                    else Wv += MVM;
                }
                var mmM = SERVG.ME.mmM;
                if (((mmM.vmm === 1) && (myply.state === myply.NVMMW)) && (Vwv.NWN(mmM.x, mmM.y, myply.x, myply.y) > (4 * mn))) {
                    var wv = NV[mmM.id][0];
                    if (wv > 0) {
                        var W = items[wv].img.W[0];
                        if (W.m === 0) W = NWVnn[wv].img.W[0];
                        Mm.globalAlpha = 0.7;
                        var WW = 68 * mn;
                        Mm.drawImage(W, (myply.x * mn) - (WW / 2), (myply.y * mn) - (WW / 2), WW, WW);
                        Mm.globalAlpha = 1;
                    }
                } else if ((MmV !== -1) && (NV[MmV][0] !== 0)) {
                    if (MmV < 10) NMMwN(NV[MmV][0], wwn + (MVM * MmV), Nmn - (79 * mn));
                    else if (MmV < 13) NMMwN(NV[MmV][0], bagbutt.mv.x - (200 * mn), bagbutt.mv.y + (MVM * (-1 + ((10 - MmV) % 3))));
                    else NMMwN(NV[MmV][0], (bagbutt.mv.x - (200 * mn)) - MVM, bagbutt.mv.y + (MVM * (-1 + ((10 - MmV) % 3))));
                }
            };;
    
            function wvvwW(Wv, wM) {
                var vMN = SERVG.ME.level;
                if (NmWnM[vMN] === win.undefined) {
                    NmWnM[vMN] = {
                        W: vM.wNm("" + vMN, "'Black Han Sans', sans-serif", "#ffffff", 44, 250, win.undefined, 18, 15, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 15)
                    };
                    NmWnM[vMN].W.m = 1;
                }
                wN.WM(NmWnM[vMN], (Wv / mn) + 234, (wM / mn) + 79, 0, 0, 0, 1);
                var MWw = SERVG.MnW.MWw;
                var vW = 1 - (MWw.nnw / MWw.WWw);
                wN.WM(wmmvv, 38 + (Wv / mn), 37 + (wM / mn), win.Math.PI * vW, 0, 0, 1);
            };;
            
            function wmMMm(Wv, wM) {
                var health = SERVG.MnW.health;
                var vW = health.nnw / health.WWw;
                HP = health.nnw;
                wN.fillRect(Mm, (Wv / mn) + 14, (wM / mn) + 71, vW * 189, 16, NVWvm);
                var vVv = SERVG.MnW.vVv;
                var vW = vVv.nnw / vVv.WWw;
                wN.fillRect(Mm, (Wv / mn) + 13, (wM / mn) + 162, 54, -vW * 63, wmvWn);
                var vNN = SERVG.MnW.vNN;
                var vW = vNN.nnw / vNN.WWw;
                wN.fillRect(Mm, (Wv / mn) + 81, (wM / mn) + 162, 54, -vW * 63, WNwVW);
                var nvv = SERVG.MnW.nvv;
                var vW = nvv.nnw / nvv.WWw;
                wN.fillRect(Mm, (Wv / mn) + 150, (wM / mn) + 162, 54, -vW * 63, VNvVn);
                var mMv = SERVG.MnW.mMv;
                var vW = mMv.nnw / mMv.WWw;
                wN.fillRect(Mm, (Wv / mn) + 226, (wM / mn) + 172, 16, -vW * 77, wwWvN);
                var wVnVV = SERVG.NvVVW();
                var W;
                var wnvmV;
                if (wVnVV >= 10000000) {
                    if (WmVNn.m !== 1) {
                        WmVNn = wN.wvv(nightclock, WmVNn);
                        return;
                    }
                    wVnVV -= 10000000;
                    W = WmVNn;
                    wnvmV = nMmvV;
                } else {
                    if (nvvVW.m !== 1) {
                        nvvVW = wN.wvv(dayclock, nvvVW);
                        return;
                    }
                    W = nvvVW;
                    wnvmV = VWmVV;
                }
                var WW = (mn * W.width) / 2;
                var vN = (mn * W.height) / 2;
                Mm.drawImage(W, Wv + (100 * mn), wM + (14 * mn), WW, vN);
                wN.WM(wnvmV, 144.5 + (Wv / mn), (wM / mn) + 56, wVnVV * mWvNn, 0, 0, 1);
            };;
    
            // you in leaderboard
            function WnnwN(Wv, wM) {
                var leaderboard = SERVG.leaderboard;
                var socket = SERVG.socket;
                var nWnWm = -1;
                if (SERVG.WnNNv === 1) {
                    nWnWm = 1;
                    SERVG.WnNNv = 0;
                    Vwvwn.clearRect(0, 0, Vwwmw, nvnwM);
                    for (var place = 0;
                        (place < leaderboard.length) && (leaderboard[place] !== 0); place++) {
                        var ME = socket[leaderboard[place]];
                        if (SERVG.ME.id === leaderboard[place]) nWnWm = 0;
                        if (ME.nick === 0) break;
                        if (ME.vMNnW === null) {
                            if (ME.id === SERVG.ME.id) ME.vMNnW = vM.wNm(ME.nick, "'Viga', sans-serif", "#D6C823", 40, 350, win.undefined, 0, 12);
                            else ME.vMNnW = vM.wNm(ME.nick, "'Viga', sans-serif", "#ffffff", 40, 350, win.undefined, 0, 12);
                        }
                        if (ME.MNn === null) {
                            if (ME.id === SERVG.ME.id) ME.MNn = vM.wNm(ME.wMWWv, "'Viga', sans-serif", "#D6C823", 40, 150, win.undefined, 5, 12);
                            else ME.MNn = vM.wNm(ME.wMWWv, "'Viga', sans-serif", "#ffffff", 40, 150, win.undefined, 5, 12);
                        }
                        if ((ME.vMNnW.width !== 0) && (ME.vMNnW.height !== 0)) Vwvwn.drawImage(ME.vMNnW, 90, 114 + (place * 50), ME.vMNnW.width, ME.vMNnW.height);
                        Vwvwn.drawImage(ME.MNn, 484, 114 + (place * 50), ME.MNn.width, ME.MNn.height);
                        var W = karma[ME.VwVVw].W;
                        if (W.m === 1) Vwvwn.drawImage(W, 612, 114 + (place * 50), W.width, W.height);
                    }
                    SERVG.ME.MnWnn = nWnWm;
                    if (nWnWm === 1) {
                        var W = karma[SERVG.ME.VwVVw].W;
                        if (W.m === 1) Vwvwn.drawImage(W, 375, 645, W.width * 1.5, W.height * 1.5);
                    }
                }
                var mW = SERVG.ME.exp;
                if ((nWnWm === 1) || ((SERVG.ME.MnWnn === 1) && (mW !== SERVG.ME.WMWVW))) {
                    var ME = socket[SERVG.ME.id];
                    Vwvwn.clearRect(480, 657, 112, 60);
                    if (mW !== SERVG.ME.WMWVW) {
                        SERVG.ME.WMWVW = mW;
                        ME.MNn = vM.wNm(WNW.nVvNM(mW), "'Viga', sans-serif", "#ffffff", 40, 150, win.undefined, 5, 12);
                    }
                    Vwvwn.drawImage(ME.MNn, 484, 662, ME.MNn.width, ME.MNn.height);
                }
                Mm.drawImage(NmNmm, Wv, wM, (Vwwmw / 3) * mn, (nvnwM / 3) * mn);
            };;
    
    
            // MAP FUNC
            function mapfunc(vWvWN, closebutt) {        
                var WW = vWw * mn;
                var vN = wvNVM * mn;
                var Wv = mmw - (WW / 2);
                var wM = win.Math.max(VvN - (vN / 2), 0);
                var wVw = Wv / mn;
                var VVm = wM / mn;
                var mvMnV = vWw / WMwnW;
                var textnumberitem = wvNVM / mmVNm;
                closebutt.mv.x = win.Math.floor((Wv + WW) + (0 * mn));
                closebutt.mv.y = win.Math.floor(wM + (0 * mn));
                vWvWN.NM();
    
    
    
                var wmWvV = SERVG.ME.wmWvV;
                var vvv = wmWvV.length / 2;
                // BUILDINGS ON MAP
                if (vvv > 0) {
                    Nmn = win.Math.floor((wM / mn) + win.Math.min(win.Math.max(10, wmWvV[0] * textnumberitem), 400));
                    wwn = win.Math.floor((Wv / mn) + win.Math.min(win.Math.max(10, wmWvV[1] * mvMnV), 400));
                    wN.WM(cityiconmap, wwn, Nmn, 0, 0, 0, 1);
                    for (var place = 1; place < vvv; place++) {
                        Nmn = win.Math.floor((wM / mn) + win.Math.min(win.Math.max(10, wmWvV[place * 2] * textnumberitem), 400));
                        wwn = win.Math.floor((Wv / mn) + win.Math.min(win.Math.max(10, wmWvV[1 + (place * 2)] * mvMnV), 400));
                        wN.WM(houseiconmap, wwn, Nmn, 0, 0, 0, 1);
                    }
                }
    
                // dont know, when deleted nothing change
                if (SERVG.Vnn === SERVG.VNVWN) {
                    var wwwmm = wVw + (vWw / 2);
                    var vnvWw = VVm + (wvNVM / 2);
                    wN.WM(MWNMV, wwwmm, vnvWw, 0, 0, 0, 2);
                    Mm.globalAlpha = (mWWwn > 600) ? WNW.mWV.vvw((1200 - mWWwn) / 600) : WNW.mWV.vvw(mWWwn / 600);
                    wN.WM(MMvWn, wwwmm, vnvWw, 0, 0, 0, 2);
                    Mm.globalAlpha = 1;
                }
                
                closebutt.NM();   //dunno
    
    
                //GHOUL MODE ------ ------
                // last 5 person on ghould mode visible 
                if ((SERVG.ME.clan !== -1) || (SERVG.ME.GHOUL !== 0) && (SERVG.WVw < 6)) {
                    var socket = nNM.Wvm[mnW];
                    for (var place = 0; place < SERVG.ME.nnnVN; place++) {  // check SERVG.ME.nnnVN
                        var nmmvN = SERVG.ME.MVmNm[place];
                        if (nmmvN.wmWMV < 0) continue;
                        var ME = SERVG.socket[nmmvN.id];
                        var wwn = win.Math.floor(wVw + win.Math.min(win.Math.max(10, ME.rx * mvMnV), 400)); // 400 is the map square if you
                        var Nmn = win.Math.floor(VVm + win.Math.min(win.Math.max(10, ME.ry * mvMnV), 400));
                        var wW;
                        if (MNW === (ME.MNW + 1)) wW = socket[ME.nnmnv].angle;
                        else wW = ME.x % WNVNM;
                        wN.WM(arrowiconmap, wwn, Nmn, wW, 0, 0, 1);
                        Mm.fillStyle = "#FFFF00";
                        Mm.fillText(ME.nick, wwn, Nmn + 4);
                    }
                }
    
                //myself in map     Wv and wM are the map size position?    the NmM and WWV are my position in that moment
                var wwn = win.Math.floor((Wv / mn) + win.Math.min(win.Math.max(10, NmM * mvMnV), 400));
                var Nmn = win.Math.floor((wM / mn) + win.Math.min(win.Math.max(10, WWV * textnumberitem), 400));
                wN.WM(arrowiconmap2, wwn, Nmn, myply.angle, 0, 0, 1);
    
                //karma guy in map
                if (SERVG.ME.VvWnm > 0) {
                    var ME = SERVG.socket[SERVG.ME.karmaplayerid];  // karmaplayerid is id of the guy karma in map
                    wN.WM(karma[ME.VwVVw], win.Math.floor(wVw + win.Math.min(win.Math.max(10, ME.rx * mvMnV), 400)), win.Math.floor(VVm + win.Math.min(win.Math.max(10, ME.ry * mvMnV), 400)), 0, 0, 0, 1.25);
                }
                
    
            };;
    
    
    
            function MMWWn() {
                if (wmw.VNVVN > 0) {
                    if (wmw.VNVVN > 2500) Mm.globalAlpha = WNW.mWV.vvw((3000 - wmw.VNVVN) / 500);
                    else if (wmw.VNVVN > 500) Mm.globalAlpha = 1;
                    else Mm.globalAlpha = WNW.mWV.vvw(wmw.VNVVN / 500);
                    if (wmw.MWMMv === 0) wN.WM(WWwmW, nvm, WWwmW.W.mNm / 2, 0, 0, 0, 1);
                    else if (wmw.MWMMv === 1) wN.WM(VVvnW, nvm, VVvnW.W.mNm / 2, 0, 0, 0, 1);
                    else if (wmw.MWMMv === 2) wN.WM(MnNnW, nvm, MnNnW.W.mNm / 2, 0, 0, 0, 1);
                    else if (wmw.MWMMv === 3) wN.WM(nWvvv, nvm, nWvvv.W.mNm / 2, 0, 0, 0, 1);
                    Mm.globalAlpha = 1;
                    wmw.VNVVN -= mV;
                }
            };;
    
            // team joining etc
            function nmwmn(Wv, wM) {
                if (teambox.m !== 1) {
                    teambox = wN.wvv(invbox, teambox);
                    return;
                }
                windowobjects.nVNMM.mv.x = Wv + (241 * mn);
                windowobjects.nVNMM.mv.y = wM + (6 * mn);
                windowobjects.nWvnm.mv.x = Wv + (290 * mn);
                windowobjects.nWvnm.mv.y = wM + (6 * mn);
                if ((SERVG.ME.wNw !== 0) || (SERVG.ME.wMnNv > 0)) {
                    if (SERVG.ME.wNw !== 0) {
                        if (SERVG.ME.wMnNv < 333) {
                            Mm.globalAlpha = SERVG.ME.wMnNv / 333;
                            SERVG.ME.wMnNv += mV;
                        }
                    } else {
                        Mm.globalAlpha = SERVG.ME.wMnNv / 333;
                        SERVG.ME.wMnNv = win.Math.max(0, SERVG.ME.wMnNv - mV);
                    }
                    var ME = SERVG.socket[SERVG.ME.wNw];
                    if (ME.mMw === null) ME.mMw = vM.wNm(ME.nick, "'Viga', sans-serif", "#FFFFFF", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12);
                    Mm.drawImage(teambox, Wv, wM, mn * teambox.Wvw, mn * teambox.mNm);
                    if ((ME.mMw.width !== 0) && (ME.mMw.height !== 0)) Mm.drawImage(ME.mMw, Wv + (20 * mn), wM + (6 * mn), ME.mMw.Wvw * mn, ME.mMw.mNm * mn);
                    windowobjects.nVNMM.NM();
                    windowobjects.nWvnm.NM();
                    if (SERVG.ME.wMnNv < 333) Mm.globalAlpha = 1;
                }
            };;
    
            function MnnvV(Wv, wM, wNWnn) {
                SERVG.ME.MnMWm -= mV;
                var nnW = win.Math.max(0, win.Math.floor(SERVG.ME.MnMWm / 1000));
                if (nnW < 3000) {
                    wN.WM(wMMMW, (Wv / mn) + 51, (wM / mn) + 145, 0, 0, 0, 1);
                    if (wVVVn[nnW] === win.undefined) {
                        if ((wNWnn === 1) && (wVVVn[nnW + 1] !== win.undefined)) wVVVn[nnW + 1] = win.undefined;
                        var wWvWM = win.Math.floor(nnW / 60);
                        var NNvMn = nnW % 60;
                        wVVVn[nnW] = {
                            W: vM.wNm((((((wWvWM < 10) ? "0" : "") + wWvWM) + ":") + ((NNvMn < 10) ? "0" : "")) + NNvMn, "'Viga', sans-serif", "#FF0000", 38, 100, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12)
                        };
                        wVVVn[nnW].W.m = 1;
                    }
                    wN.WM(wVVVn[nnW], (Wv / mn) + 60, (wM / mn) + 145, 0, 0, 0, 1);
                }
            };;
    
            function vmnWW(Wv, wM) {
                wN.WM(WvWnV, ((Wv / mn) + wvwNM) - 63, 25 + (wM / mn), 0, 0, 0, 1);
                if (WVw[SERVG.WVw] === win.undefined) {
                    WVw[SERVG.WVw] = {
                        W: vM.wNm("#" + SERVG.WVw, "'Viga', sans-serif", "#FFFFFF", 60, 140)
                    };
                    WVw[SERVG.WVw].W.m = 1;
                }
                wN.WM(WVw[SERVG.WVw], ((Wv / mn) + wvwNM) - 50, 25 + (wM / mn), 0, 0, 0, 1);
            };;
    
            // MINIMAP FUNCTION, the one on the corner
            function minimapfunc(Wv, wM) {
                nmwmn(Wv + (250 * mn), wM);
                if (MvV.m !== 1) {
                    MvV = wN.wvv(bordermapbig, MvV);
                    return;
                }
    
                var mnmvW = nwMnv * NmM;
                var vNwWN = nwMnv * WWV;
                var nVm = win.Math.min(win.Math.max(0, mnmvW - WWn), vvVMV);
                var nmW = win.Math.min(win.Math.max(0, vNwWN - WWn), vvVMV);
                var WW = WWn * mn;
                Mm.drawImage(MvV, nVm, nmW, mVmWm, mVmWm, Wv, wM, WW, WW);
                
                if (SERVG.Vnn === SERVG.VMnnw) {
                    if (SERVG.ME.GHOUL !== 0) vmnWW(-255, wM);
                    else MnnvV(Wv + 50, wM, 1);
                }
    
    
                if (SERVG.Vnn === SERVG.VNVWN) {
                    var wVvnN = SERVG.ME.Mwwnw[win.Math.floor(WWV / NnWnv)][win.Math.floor(NmM / NnWnv)];
                    if (((wVvnN !== 0) && (wVvnN < SERVG.ME.wMwmv)) && (SERVG.ME.wMwmv !== 8)) {
                        MvvNN = win.Math.min(1000, MvvNN + mV);
                        Mm.globalAlpha = WNW.mWV.wWM(MvvNN / 500);
                        wN.WM(WWmMW, nvm, 58, 0, 0, 0, 1);
                        Mm.globalAlpha = 1;
                    } else if (MvvNN > 0) {
                        MvvNN = win.Math.max(0, MvvNN - mV);
                        Mm.globalAlpha = WNW.mWV.wWM(MvvNN / 500);
                        wN.WM(WWmMW, nvm, 58, 0, 0, 0, 1);
                        Mm.globalAlpha = 1;
                    }
                    Mm.drawImage(MWNMV.W, nVm / 2, nmW / 2, WWn, WWn, Wv, wM, WW, WW);
                    Mm.globalAlpha = (mWWwn > 600) ? WNW.mWV.vvw((1200 - mWWwn) / 600) : WNW.mWV.vvw(mWWwn / 600);
                    mWWwn = (mWWwn + mV) % 1200;
                    Mm.drawImage(MMvWn.W, nVm / 2, nmW / 2, WWn, WWn, Wv, wM, WW, WW);
                    Mm.globalAlpha = 1;
                    vmnWW(0, wM);
                    MnnvV(Wv, wM, 0);
                } else if (SERVG.ME.GHOUL === 0) {
                    if (SERVG.MnW.MWw.vww === 1) {
                        WNmVW = win.Math.min(1000, WNmVW + mV);
                        Mm.globalAlpha = WNW.mWV.wWM(WNmVW / 500);
                        wN.WM(VmWNN, nvm, 58, 0, 0, 0, 1);
                        Mm.globalAlpha = 1;
                    } else if (WNmVW > 0) {
                        WNmVW = win.Math.max(0, WNmVW - mV);
                        Mm.globalAlpha = WNW.mWV.wWM(WNmVW / 500);
                        wN.WM(VmWNN, nvm, 58, 0, 0, 0, 1);
                        Mm.globalAlpha = 1;
                    }
                }
    
    
    
                if (nVm >= vvVMV) mnmvW = win.Math.min(((mnmvW - VnvWV) / 2) + nWWwM, WWn - 8);
                else if (mnmvW < WWn) mnmvW = win.Math.max(15, mnmvW / 2);
                else mnmvW = nWWwM;
                if (nmW >= vvVMV) vNwWN = win.Math.min(((vNwWN - VnvWV) / 2) + nWWwM, WWn - 8);
                else if (vNwWN < WWn) vNwWN = win.Math.max(15, vNwWN / 2);
                else vNwWN = nWWwM;
                var wVw = Wv / mn;
                var VVm = wM / mn;
    
    
    
                if ((SERVG.ME.clan !== -1) || ((SERVG.ME.GHOUL !== 0) && (SERVG.WVw < 6))) {
                    var socket = nNM.Wvm[mnW];
                    for (var place = 0; place < SERVG.ME.nnnVN; place++) {
                        var nmmvN = SERVG.ME.MVmNm[place];
                        if (nmmvN.wmWMV < 0) continue;
                        var ME = SERVG.socket[nmmvN.id];
                        var wW;
                        if (MNW === (ME.MNW + 1)) {
                            var WMv = socket[ME.nnmnv];
                            if (Vwv.MWV(ME.rx, ME.ry, WMv.x, WMv.y) < 1000) {
                                ME.rx = WMv.x;
                                ME.ry = WMv.y;
                            }
                            ME.x = WMv.x;
                            ME.y = WMv.y;
                            wW = WMv.angle;
                        } else var wW = ME.x % WNVNM;
                        var wwn = wVw + win.Math.max(15, win.Math.min(WWn - 15, (mnmvW - 3) + ((ME.rx - NmM) * nwMnv)));
                        var Nmn = VVm + win.Math.max(15, win.Math.min(WWn - 15, (vNwWN - 3) + ((ME.ry - WWV) * nwMnv)));
                        wN.WM(arrowiconmap, wwn, Nmn, wW, 0, 0, 1);
                    }
                }
    
    
                if (SERVG.ME.VvWnm > 0) {
                    var ME = SERVG.socket[SERVG.ME.karmaplayerid];
                    if (MNW === (ME.MNW + 1)) {
                        var socket = nNM.Wvm[mnW];
                        var WMv = socket[ME.nnmnv];
                        if (Vwv.MWV(ME.rx, ME.ry, WMv.x, WMv.y) < 1000) {
                            ME.rx = WMv.x;
                            ME.ry = WMv.y;
                        }
                        ME.x = WMv.x;
                        ME.y = WMv.y;
                    }
                    wN.WM(karma[ME.VwVVw], wVw + win.Math.max(15, win.Math.min(WWn - 15, (mnmvW - 3) + ((ME.rx - NmM) * nwMnv))), VVm + win.Math.max(15, win.Math.min(WWn - 15, (vNwWN - 3) + ((ME.ry - WWV) * nwMnv))), 0, 0, 0, 1.25);
                }
    
                var wwn = wVw + (mnmvW - 3);
                var Nmn = VVm + (vNwWN - 3);
                wN.WM(arrowiconmap2, wwn, Nmn, myply.angle, 0, 0, 1);
                if ((SERVG.ME.GHOUL === 0) && ((SERVG.ME.MwV > 0) || (wnW.WMw > 0))) {
                    var nn = (wnW.nn + mV) % 1000;
                    wnW.nn = nn;
                    if (wnW.nn < 500) Wv += 260 + (15 * WNW.mWV.vvw(nn / 500));
                    else Wv += 260 + (15 * WNW.mWV.vvw((1000 - nn) / 500));
                    Mm.globalAlpha = WNW.mWV.wWM(wnW.WMw);
                    wN.WM(wnW, Wv, wM + 31, 0, 0, 0, 1);
                    Mm.globalAlpha = 1;
                    if ((SERVG.ME.MwV <= 0) || (windowobjects.MvN() === 1)) wnW.WMw = win.Math.max(0, wnW.WMw - (mV / 500));
                    else if (wnW.WMw < 1) wnW.WMw = win.Math.min(1, wnW.WMw + (mV / 500));
                }
            };;
    
            
            var WmN = "";
            var nNmVw = null;
    
            function nwnwN(closebutt, VWwmm, mMnVm, wwVMn, NnvmN, mvNMv, WvvvV, Wwmvm) {
                var Wv = 0;
                var wM = 0;
                if (SERVG.ME.clan === -1) {
                    var WwmNM = 1;
                    if (windowobjects.WmN.length === 0) WwmNM = 0;
                    else {
                        for (var place = 0; place < SERVG.clans.length; place++) {
                            if (SERVG.clans[place].name === windowobjects.WmN) {
                                WwmNM = 0;
                                break;
                            }
                        }
                    }
                    SERVG.ME.WwmNM = WwmNM;
                    Wv = VWwmm.mv.x;
                    wM = VWwmm.mv.y;
                    VWwmm.NM();
                    closebutt.mv.x = Wv + (513 * mn);
                    closebutt.mv.y = wM + (2 * mn);
                    if (WmN !== windowobjects.WmN) {
                        WmN = windowobjects.WmN;
                        nNmVw = vM.wNm(WmN, "'Viga', sans-serif", "#FFFFFF", 30, 400);
                    }
                    if ((nNmVw !== null) && (WmN.length !== 0)) {
                        wN.fillRect(Mm, (Wv / mn) + 39, (wM / mn) + 14, 122, 16.5, "#000000");
                        Mm.drawImage(nNmVw, Wv + (35 * mn), wM + (14.5 * mn), nNmVw.Wvw * mn, nNmVw.mNm * mn);
                    }
                    NnvmN.mv.x = Wv + (172 * mn);
                    NnvmN.mv.y = wM + (6 * mn);
                    if ((WwmNM === 0) || ((win.Date.now() - SERVG.ME.mVVmv) < 30500)) {
                        NnvmN.NNv(vM.Wmm);
                        Mm.globalAlpha = 0.5;
                        NnvmN.NM();
                        Mm.globalAlpha = 1;
                    } else NnvmN.NM();
                    var vv = 0;
                    for (var place = 0; place < 18; place++) {
                        var clan = SERVG.clans[place];
                        if (clan.MvvWw === 0) continue;
                        if (clan.label === null) clan.label = vM.wNm(clan.name, "'Viga', sans-serif", "#FFFFFF", 30, 400);
                        Mm.drawImage(clan.label, Wv + ((20 + ((vv % 3) * 163)) * mn), wM + ((58.5 + (win.Math.floor(vv / 3) * 36)) * mn), clan.label.Wvw * mn, clan.label.mNm * mn);
                        var wm = windowobjects.join[vv];
                        wm.mv.x = Wv + ((84 + ((vv % 3) * 163)) * mn);
                        wm.mv.y = wM + ((48 + (win.Math.floor(vv / 3) * 36)) * mn);
                        if ((win.Date.now() - SERVG.ME.Mwnwv) < 10500) {
                            wm.NNv(vM.Wmm);
                            Mm.globalAlpha = 0.5;
                            wm.NM();
                            Mm.globalAlpha = 1;
                        } else wm.NM();
                        vv++;
                    }
                } else {
                    Wv = mMnVm.mv.x;
                    wM = mMnVm.mv.y;
                    var clan = SERVG.clans[SERVG.ME.clan];
                    if (clan.label === null) clan.label = vM.wNm(clan.name, "'Viga', sans-serif", "#FFFFFF", 30, 400);
                    Mm.drawImage(clan.label, Wv + (144 * mn), wM + (13 * mn), clan.label.Wvw * mn, clan.label.mNm * mn);
                    mMnVm.NM();
                    closebutt.mv.x = Wv + (512 * mn);
                    closebutt.mv.y = wM + (34.5 * mn);
                    if (SERVG.ME.VVvWM === 1) {
                        if (SERVG.ME.WnNvv === 0) {
                            mvNMv.mv.x = Wv + (259 * mn);
                            mvNMv.mv.y = wM + (5 * mn);
                            mvNMv.NM();
                        } else {
                            WvvvV.mv.x = Wv + (259 * mn);
                            WvvvV.mv.y = wM + (5 * mn);
                            WvvvV.NM();
                        }
                        Wwmvm.mv.x = Wv + (311.5 * mn);
                        Wwmvm.mv.y = wM + (5 * mn);
                        Wwmvm.NM();
                        var vv = 0;
                        for (var place = 0; place < SERVG.socket.length; place++) {
                            var ME = SERVG.socket[place];
                            if ((clan.mvN !== ME.wwV) || (ME.clan !== clan.id)) continue;
                            if (ME.mMw === null) ME.mMw = vM.wNm(ME.nick, "'Viga', sans-serif", "#FFFFFF", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12);
                            if ((ME.mMw.width !== 0) && (ME.mMw.height !== 0)) Mm.drawImage(ME.mMw, Wv + ((26 + ((vv % 3) * 166.5)) * mn), wM + ((53 + (win.Math.floor(vv / 3) * 29.5)) * mn), (ME.mMw.Wvw * mn) / 2.2, (ME.mMw.mNm * mn) / 2.2);
                            var wm = windowobjects.WvNMn[vv];
                            wm.mv.x = Wv + ((132 + ((vv % 3) * 166.5)) * mn);
                            wm.mv.y = wM + ((48.5 + (win.Math.floor(vv / 3) * 29.5)) * mn);
                            if (((win.Date.now() - SERVG.ME.Mwnwv) < 10500) || (ME.id === SERVG.ME.id)) {
                                wm.NNv(vM.Wmm);
                                Mm.globalAlpha = 0.5;
                                wm.NM();
                                Mm.globalAlpha = 1;
                            } else wm.NM();
                            vv++;
                        }
                    } else {
                        wwVMn.mv.x = Wv + (311.5 * mn);
                        wwVMn.mv.y = wM + (5 * mn);
                        wwVMn.NM();
                        var vv = 0;
                        for (var place = 0; place < SERVG.socket.length; place++) {
                            var ME = SERVG.socket[place];
                            if ((clan.mvN !== ME.wwV) || (ME.clan !== clan.id)) continue;
                            if (ME.mMw === null) ME.mMw = vM.wNm(ME.nick, "'Viga', sans-serif", "#FFFFFF", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12);
                            if ((ME.mMw.width !== 0) && (ME.mMw.height !== 0)) Mm.drawImage(ME.mMw, Wv + ((26 + ((vv % 3) * 166.5)) * mn), wM + ((53 + (win.Math.floor(vv / 3) * 29.5)) * mn), (ME.mMw.Wvw * mn) / 2.2, (ME.mMw.mNm * mn) / 2.2);
                            vv++;
                        }
                    }
                }
                closebutt.NM();
            };;
    
            // chestbox window function START
            function contwinfunc(chestbox, closebutt, vwn, WMn) {
                chestbox.NM();
                var Wv = chestbox.mv.x;
                var wM = chestbox.mv.y;
    
                closebutt.mv.x = Wv + (161 * mn);
                closebutt.mv.y = wM + (0 * mn);
                closebutt.NM();
    
                var mwV = SERVG.ME.mwV;
                var wwn;
                var Nmn = wM + (14 * mn);   // 14 - position up/down of items ins the box window
                var wm = windowobjects.mwV;
    
                for (var place = 0; place < 4; place++) {    // place is the visible item in box
                    if ((place % 2) === 0) {   // restristing items to be in a maximum of 2 in a row
                        wwn = Wv + (12.5 * mn);
                        if (place === 2) Nmn += 71 * mn;
                    } else wwn += 72 * mn;
                    if (mwV[place][0] === 0) continue; // if (mwV[place][0] === 1) will make items image stuck even after getting it out 
                    textnumberitem(wm[place], mwV[place], wwn, Nmn, vwn, WMn); // items count text
                }
            };;
            // chestbox window function END
    
            function vMwNm() {
                var mmMnV = wvm;
                if (mmMnV > 0) wN.fillRect(Mm, 0, 0, mmMnV, wwWnm, MwWmN);
                else mmMnV = 0;
                var wvnWn = NNw;
                if (wvnWn > 0) wN.fillRect(Mm, mmMnV, 0, wvwNM - mmMnV, wvnWn, MwWmN);
                else wvnWn = 0;
                var Mwwnn = (-wvm + wvwNM) - WMwnW;
                if (Mwwnn > 0) wN.fillRect(Mm, wvwNM - Mwwnn, wvnWn, Mwwnn, wwWnm - wvnWn, MwWmN);
                else Mwwnn = 0;
                var nNnMV = (-NNw + wwWnm) - mmVNm;
                if (nNnMV > 0) wN.fillRect(Mm, mmMnV, wwWnm - nNnMV, (wvwNM - mmMnV) - Mwwnn, nNnMV, MwWmN);
            };;
    
            function itemstatsfunc(wmvMm, Wn) {         // STATS function 21 = damage etc.
                var WvW = items[Wn];
                var NW = WvW.detail;
                var Mwv = vM.wNm(NW.name, "'Viga', sans-serif", "#D3BB43", 30, 400);
                wmvMm.drawImage(Mwv, 20, 20);
                Mwv = vM.wNm(NW.description, "'Viga', sans-serif", "#FFFFFF", 16, 400);
                wmvMm.drawImage(Mwv, 20, 68);
                if (WvW.mnw === 21) {
                    if (WvW.WWv > 0) {
                        Mwv = vM.wNm((("Damage: " + WvW.damage) + "/") + WvW.WWv, "'Viga', sans-serif", "#D3BB43", 24, 400);
                        wmvMm.drawImage(Mwv, 20, 101);
                    } else {
                        Mwv = vM.wNm("Life: " + WvW.health, "'Viga', sans-serif", "#D3BB43", 24, 400);
                        wmvMm.drawImage(Mwv, 20, 101);
                    }
                } else if ((WvW.mnw !== win.undefined) && (WvW.mnw !== 0)) {
                    var NvV = "";
                    var nV = VVM[mnW].mNMNW[WvW.mnw];
                    if (nV.damage !== win.undefined) {
                        NvV = "Damage: " + ((nV.vNNwv === win.undefined) ? nV.damage : nV.vNNwv);
                    } else {
                        if (nV.vVv !== 0) NvV += ("Food: " + nV.vVv) + " ";
                        if (nV.mNW < 0) NvV += ("Damage: " + nV.mNW) + " ";
                        else if (nV.mNW > 0) NvV += ("Heal: " + nV.mNW) + " ";
                        if (nV.www !== 0) NvV += "Energy: " + nV.www;
                    }
                    Mwv = vM.wNm(NvV, "'Viga', sans-serif", "#D3BB43", 24, 400);
                    wmvMm.drawImage(Mwv, 20, 101);
                } else if (WvW.nwm !== win.undefined) {} else {
                    Mwv = vM.wNm("Cannot be equipped", "'Viga', sans-serif", "#FFFFFF", 17, 400);
                    wmvMm.drawImage(Mwv, 20, 108);
                }
            };;
    
            function MnNVv(craftbox, closebutt, wnV, NwnNV, VvvwN, nvmnM, NNm, vwvvm, vwn, WMn, VWNWV, WmWwW, WwMvM, NWmNn) {
                craftbox.NM();
                var Wv = craftbox.mv.x;
                var wM = craftbox.mv.y;
                var wVw = Wv / mn;
                var VVm = wM / mn;
                closebutt.mv.x = Wv + (594 * mn);
                closebutt.mv.y = wM + (0 * mn);
                closebutt.NM();
                var vVN = SERVG.ME.vVN;
                var NmWNV = SERVG.ME.NmWNV;
                var nww = SERVG.ME.nVV;
                var MWW = SERVG.ME.Vvw;
                for (var place = 0; place < wnV.length; place++) {
                    var wm = wnV[place];
                    if (place === nww) wm.NNv(vM.Mwn);
                    wm.mv.x = ((10 * mn) + Wv) + ((place * 47) * mn);
                    wm.mv.y = wM - (40 * mn);
                    wm.NM();
                }
                var vv = 0;
                for (place = 0; place < NNm.length; place++) {
                    if ((place === MWW) && (SERVG.ME.VVn === 1)) {} else if ((place !== SERVG.ME.vWMmW) && (place !== 0)) continue;
                    var wm = NNm[place];
                    if (place === MWW) wm.NNv(vM.Mwn);
                    wm.mv.x = Wv - (40 * mn);
                    wm.mv.y = ((10 * mn) + wM) + ((vv * 43) * mn);
                    wm.NM();
                    vv++;
                }
                vwvvm.mv.x = Wv + (364 * mn);
                vwvvm.mv.y = wM + (27 * mn);
                vwvvm.NM();
                var nvV = windowobjects.nvV;
                var vvv = SERVG.ME.MNvMn;
                var WW = 49 * mn;
                var vN = 49 * mn;
                var MVM = 58 * mn;
                var mnMmm = 30 * mn;
                var NWNmV = 34 * mn;
                var Vw = 1;
                if (VnwNw < 500) {
                    Vw += 0.08 * WNW.mWV.wWM(VnwNw / 500);
                    VnwNw += mV;
                } else {
                    Vw += 0.08 * WNW.mWV.wMn(1 - ((VnwNw - 500) / 500));
                    VnwNw += mV;
                    if (VnwNw > 1000) VnwNw = 0;
                }
                Vw = win.Math.max(1, win.Math.min(1.08, Vw));
                for (place = 0; place < vvv; place++) {
                    var wm = nvV[place];
                    wm.mv.x = (mnMmm + Wv) + ((place % 5) * MVM);
                    wm.mv.y = (NWNmV + wM) + (win.Math.floor(place / 5) * MVM);
                    var MvmWv = vVN[place];
                    if (MvmWv === 0) {
                        Mm.globalAlpha = 0.45;
                        wm.NM();
                        Mm.globalAlpha = 1;
                    } else if (MvmWv === 2) {
                        wm.NNv(vM.vnwnw);
                        wm.NM();
                    } else {
                        Mm.globalAlpha = 0.6;
                        wN.WM(vvNWN, (wm.mv.x / mn) + 24.5, (wm.mv.y / mn) + 24.5, 0, 0, 0, Vw);
                        Mm.globalAlpha = 1;
                        wm.NM();
                    }
                }
                var Nnv = 0;
                if (SERVG.ME.nVV === -1) {
                    if (SERVG.ME.VVn === 1) {
                        NwnNV.mv.x = Wv + (454 * mn);
                        NwnNV.mv.y = wM + (153 * mn);
                        if (((SERVG.ME.vVN[SERVG.ME.VNwww] === 1) && (SERVG.ME.Nn.vvv < 4)) && (SERVG.ME.Nn.MNM !== 0)) NwnNV.NM();
                        else {
                            Mm.globalAlpha = 0.5;
                            NwnNV.NNv(vM.Wmm);
                            NwnNV.NM();
                            Mm.globalAlpha = 1;
                        }
                    } else if (SERVG.ME.WwVNv === 0) {
                        NwnNV.mv.x = Wv + (454 * mn);
                        NwnNV.mv.y = wM + (153 * mn);
                        if (SERVG.ME.vVN[SERVG.ME.VNwww] === 1) NwnNV.NM();
                        else {
                            Mm.globalAlpha = 0.5;
                            NwnNV.NNv(vM.Wmm);
                            NwnNV.NM();
                            Mm.globalAlpha = 1;
                        }
                    } else {
                        VvvwN.mv.x = Wv + (454 * mn);
                        VvvwN.mv.y = wM + (153 * mn);
                        VvvwN.NM();
                    }
                    if (wNvNm.m !== 1) {
                        wNvNm = wN.wvv(craftgauge, wNvNm);
                        return;
                    }
                    if (SERVG.ME.VVn === 1) {
                        if ((SERVG.ME.Nn.time !== 0) && (SERVG.ME.Nn.MNM !== 0)) {
                            Nnv = SERVG.ME.Nn.time - win.Date.now();
                            if (Nnv < 0) SERVG.ME.Nn.time = 0;
                            Nnv = WNW.mWV.vvw(1 - (Nnv / SERVG.ME.Nn.WWNVM));
                        }
                    } else if (SERVG.ME.WwVNv !== 0) {
                        Nnv = SERVG.ME.WwVNv - win.Date.now();
                        if (Nnv < 0) SERVG.ME.WwVNv = 0;
                        Nnv = WNW.mWV.vvw(1 - (Nnv / SERVG.ME.WNvWv));
                    }
                    Nnv = win.Math.min(1, win.Math.max(0, Nnv));
                    WW = (mn * wNvNm.width) / 2;
                    vN = (mn * wNvNm.height) / 2;
                    var vVWWN = Wv + (356 * mn);
                    var MMmnV = wM + (206 * mn);
                    Mm.fillStyle = "#A29742";
                    MVM = 3 * mn;
                    mnMmm = 2 * MVM;
                    Mm.fillRect(win.Math.floor(vVWWN + MVM), win.Math.floor(MMmnV + MVM), win.Math.floor((WW - mnMmm) * Nnv), win.Math.floor(vN - mnMmm));
                    Mm.drawImage(wNvNm, vVWWN, MMmnV, WW, vN);
                } else {
                    var nwVvN = SERVG.ME.vVN[SERVG.ME.VNwww];
                    nvmnM.mv.x = Wv + (454 * mn);
                    nvmnM.mv.y = wM + (153 * mn);
                    if (nwVvN === 1) nvmnM.NM();
                    else if (nwVvN === 0) {
                        Mm.globalAlpha = 0.5;
                        nvmnM.NNv(vM.Wmm);
                        nvmnM.NM();
                        Mm.globalAlpha = 1;
                        if (SERVG.ME.mMvww !== MMNWW) {
                            NnMwN.clearRect(0, 0, 420, 148);
                            MMNWW = SERVG.ME.mMvww;
                            var NW = items[MMNWW].detail;
                            var MwNwV = 20;
                            if (NW.level > SERVG.ME.level) {
                                var Nvm = vM.wNm(("Require level " + NW.level) + " or higher", "'Viga', sans-serif", "#D8BA3D", 30, 600);
                                NnMwN.drawImage(Nvm, 20, MwNwV);
                                MwNwV += 50;
                            }
                            if ((NW.WnNmW !== -1) && (SERVG.ME.WvMVw[NW.WnNmW] === win.undefined)) {
                                var Nvm = vM.wNm(("Unlock " + items[NW.WnNmW].detail.name) + " before", "'Viga', sans-serif", "#D8BA3D", 30, 600);
                                NnMwN.drawImage(Nvm, 20, MwNwV);
                                MwNwV += 50;
                            }
                            if (SERVG.ME.MwV < NW.wNvMv) {
                                var Nvm = vM.wNm((("Cost " + NW.wNvMv) + " skill point") + ((NW.wNvMv !== 1) ? "s" : ""), "'Viga', sans-serif", "#D8BA3D", 30, 600);
                                NnMwN.drawImage(Nvm, 20, MwNwV);
                            }
                        }
                        Mm.drawImage(MmWMv, Wv + (356 * mn), wM + (211 * mn), (mn * MmWMv.width) / 2, (mn * MmWMv.height) / 2);
                    } else {
                        nvmnM.NNv(vM.Mwn);
                        nvmnM.NM();
                    }
                }
                if (SERVG.ME.VVn === 1) {
                    var nM = SERVG.ME.Nn.MNM;
                    if (nM >= 0) {
                        var wm;
                        if (((MWW === station.smelter) || (MWW === station.extractor)) || (MWW === station.agitator)) wm = WmWwW;
                        else if (MWW === station.teslabench) wm = WwMvM;
                        else wm = VWNWV;
                        wm.mv.x = Wv + (532 * mn);
                        wm.mv.y = wM + (153 * mn);
                        if (SERVG.ME.Nn.MNM !== 255) wm.NM();
                        else {
                            Mm.globalAlpha = 0.5;
                            wm.NNv(vM.Wmm);
                            wm.NM();
                            Mm.globalAlpha = 1;
                        }
                        if (WMn[nM] === win.undefined) {
                            WMn[nM] = {
                                W: vM.wNm("x" + nM, "'Black Han Sans', sans-serif", "#FFFF00", 30, 250, win.undefined, 15, 12, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12)
                            };
                            WMn[nM].W.m = 1;
                        }
                        wN.WM(WMn[nM], (wm.mv.x / mn) + 42, (wm.mv.y / mn) + 42, -0.5, 0, 0, 0.9);
                    }
                    var NMV = windowobjects.NMV;
                    var WMnmM = SERVG.ME.Nn.mv;
                    vvv = SERVG.ME.Nn.vvv;
                    WW = 40 * mn;
                    vN = 40 * mn;
                    MVM = 62 * mn;
                    mnMmm = 356 * mn;
                    NWNmV = 237 * mn;
                    for (var place = 0; place < vvv; place++) {
                        var wm = NMV[place];
                        if (place === WMnmM) {
                            if (Nnv !== 0) {
                                Mm.globalAlpha = 0.6;
                                wN.WM(vvNWN, (wm.mv.x / mn) + 20, (wm.mv.y / mn) + 20, 0, 0, 0, 0.85 * win.Math.max(0.01, win.Math.min(1, Nnv)));
                                Mm.globalAlpha = 1;
                            }
                        } else if (place < WMnmM) {
                            Mm.globalAlpha = 0.6;
                            wN.WM(vvNWN, (wm.mv.x / mn) + 20, (wm.mv.y / mn) + 20, 0, 0, 0, Vw * 0.85);
                            Mm.globalAlpha = 1;
                        }
                        wm.mv.x = (mnMmm + Wv) + (place * MVM);
                        wm.mv.y = NWNmV + wM;
                        wm.NM();
                    }
                }
                var VnmwN = windowobjects.VnmwN;
                vvv = SERVG.ME.nWwmM;
                MVM = 45 * mn;
                mnMmm = 356 * mn;
                NWNmV = 151 * mn;
                for (var place = 0; place < vvv; place++) {
                    var wm = VnmwN[place];
                    wm.mv.x = (mnMmm + Wv) + (place * MVM);
                    wm.mv.y = NWNmV + wM;
                    wm.NM();
                }
                if (SERVG.ME.MwV !== wmmVm) {
                    MnmmM.clearRect(0, 0, 280, 50);
                    wmmVm = SERVG.ME.MwV;
                    var Nvm = vM.wNm("SKILL POINT: " + wmmVm, "'Viga', sans-serif", "#FFFFFF", 32, 400);
                    MnmmM.drawImage(Nvm, 24, 12);
                }
                Mm.drawImage(MwV, Wv + (455 * mn), wM + (378 * mn), (mn * MwV.width) / 2, (mn * MwV.height) / 2);
                if (SERVG.ME.mMvww !== mwwNm) {
                    nwnVW.clearRect(0, 0, 280, 148);
                    mwwNm = SERVG.ME.mMvww;
                    itemstatsfunc(nwnVW, mwwNm);
                }
                Mm.drawImage(mWvnN, Wv + (439 * mn), wM + (24 * mn), (mn * mWvnN.width) / 2, (mn * mWvnN.height) / 2);
                if ((SERVG.ME.MwV > 0) || (wvV.WMw > 0)) {
                    var nn = (wvV.nn + mV) % 1000;
                    wvV.nn = nn;
                    var Nmn = wM / mn;
                    if (wvV.nn < 500) Nmn += -62 - (15 * WNW.mWV.vvw(nn / 500));
                    else Nmn += -62 - (15 * WNW.mWV.vvw((1000 - nn) / 500));
                    Mm.globalAlpha = WNW.mWV.wWM(wvV.WMw);
                    wN.WM(wvV, 266 + (craftbox.mv.x / mn), Nmn, 0, 0, 0, 1);
                    Mm.globalAlpha = 1;
                    if (SERVG.ME.MwV <= 0) wvV.WMw = win.Math.max(0, wvV.WMw - (mV / 500));
                    else if (wvV.WMw < 1) wvV.WMw = win.Math.min(1, wvV.WMw + (mV / 500));
                }
                var WVn = windowobjects.WVn;
                vvv = SERVG.ME.nMnmW;
                WW = 40 * mn;
                vN = 40 * mn;
                MVM = 45 * mn;
                mnMmm = 356 * mn;
                NWNmV = 107 * mn;
                for (var place = 0; place < vvv; place++) {
                    var wm = WVn[place];
                    wm.mv.x = (mnMmm + Wv) + (place * MVM);
                    wm.mv.y = NWNmV + wM;
                    var nM = win.Math.abs(NmWNV[place]);
                    if (vwn[nM] === win.undefined) {
                        vwn[nM] = {
                            W: vM.wNm("x" + nM, "'Black Han Sans', sans-serif", "#ffffff", 30, 250, win.undefined, 15, 12, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12)
                        };
                        vwn[nM].W.m = 1;
                    }
                    if (NmWNV[place] < 0) {
                        Mm.globalAlpha = 0.45;
                        wm.NM();
                        wN.WM(vwn[nM], (wm.mv.x / mn) + 30, (wm.mv.y / mn) + 32, -0.5, 0, 0, 0.9);
                        Mm.globalAlpha = 1;
                    } else {
                        wm.NM();
                        wN.WM(vwn[nM], (wm.mv.x / mn) + 30, (wm.mv.y / mn) + 32, -0.5, 0, 0, 0.9);
                    }
                    if ((NWmNn === place) && (SERVG.ME.nNNWn[place] > 0)) NMMwN(SERVG.ME.nNNWn[place], wm.mv.x, wm.mv.y + (45 * mn));
                }
            };;
    
            function mWWmm(WWmVM, nmvnW, wMMmv, NNWVW, nMmMw, vNVNN, wvmWv, WmWnm, VNNMW, NVVwW, closebutt, WVVMw, vnNWN, MnvNV) {
                WWmVM.NM();
                var Wv = WWmVM.mv.x;
                var wM = WWmVM.mv.y;
                closebutt.mv.x = Wv + (265 * mn);
                closebutt.mv.y = wM + (0 * mn);
                closebutt.NM();
                nMmMw.mv.x = Wv + (87 * mn);
                nMmMw.mv.y = wM + (15 * mn);
                if (keys.VmMnn() === 1) nMmMw.NNv(vM.Mwn);
                nMmMw.NM();
                vNVNN.mv.x = Wv + (173 * mn);
                vNVNN.mv.y = wM + (15 * mn);
                if (keys.WwmNV() === 1) vNVNN.NNv(vM.Mwn);
                vNVNN.NM();
                NNWVW.mv.x = Wv + (87 * mn);
                NNWVW.mv.y = wM + (62 * mn);
                if (wN.options.wWMMM === 3) NNWVW.NNv(vM.Mwn);
                NNWVW.NM();
                wMMmv.mv.x = Wv + (147 * mn);
                wMMmv.mv.y = wM + (62 * mn);
                if (wN.options.wWMMM === 2) wMMmv.NNv(vM.Mwn);
                wMMmv.NM();
                nmvnW.mv.x = Wv + (207 * mn);
                nmvnW.mv.y = wM + (62 * mn);
                if (wN.options.wWMMM === 1) nmvnW.NNv(vM.Mwn);
                nmvnW.NM();
                wvmWv.mv.x = Wv + (87 * mn);
                wvmWv.mv.y = wM + (117 * mn);
                if (audio.options.nNmMV === 1) wvmWv.NNv(vM.Mwn);
                wvmWv.NM();
                WmWnm.mv.x = Wv + (147 * mn);
                WmWnm.mv.y = wM + (117 * mn);
                if (audio.options.nNmMV === 0) WmWnm.NNv(vM.Mwn);
                WmWnm.NM();
                VNNMW.mv.x = Wv + (87 * mn);
                VNNMW.mv.y = wM + (167 * mn);
                if (audio.options.VWVWW === 1) VNNMW.NNv(vM.Mwn);
                VNNMW.NM();
                NVVwW.mv.x = Wv + (147 * mn);
                NVVwW.mv.y = wM + (167 * mn);
                if (audio.options.VWVWW === 0) NVVwW.NNv(vM.Mwn);
                NVVwW.NM();
                MnvNV.mv.x = Wv + (87 * mn);
                MnvNV.mv.y = wM + (217 * mn);
                if (NwMVW === 0) MnvNV.NNv(vM.Mwn);
                MnvNV.NM();
                vnNWN.mv.x = Wv + (147 * mn);
                vnNWN.mv.y = wM + (217 * mn);
                if (NwMVW === 1) vnNWN.NNv(vM.Mwn);
                vnNWN.NM();
                WVVMw.mv.x = Wv + (207 * mn);
                WVVMw.mv.y = wM + (217 * mn);
                if (NwMVW === 2) WVVMw.NNv(vM.Mwn);
                WVVMw.NM();
            };;
    
            function VvVNw(player) {
                var ME = SERVG.socket[player.mysocketid];
                if (ME.text.length > 0) {
                    for (var place = 0;
                        (place < ME.text.length) && (place < 2); place++) {
                        if (!ME.label[place]) {
                            ME.label[place] = vM.wNm(ME.text[place], "'Viga', sans-serif", "#ffffff", 32, 1000, "#000000", 33, 19, win.undefined, win.undefined, 0.55, 5);
                            ME.WvWwv[place] = 0;
                            ME.MVNWv[place] = 0;
                        }
                        if (place === 1) ME.MVNWv[0] = WNW.mWV.vvw(ME.NMWMV) * 28;
                    }
                    wwmww = mV / 1000;
                    ME.WvWwv[0] += wwmww;
                    if (ME.text.length > 1) {
                        ME.NMWMV = win.Math.min(ME.NMWMV + wwmww, 1);
                        if ((ME.WvWwv[0] > 1) && (ME.NMWMV > 0.5)) ME.WvWwv[1] += wwmww;
                    }
                    for (var place = 0;
                        (place < ME.text.length) && (place < 2); place++) {
                        var WMw = ME.WvWwv[place];
                        if (WMw > 0) {
                            if (WMw < 0.25) Mm.globalAlpha = WMw * 4;
                            else if (WMw > 4.75) Mm.globalAlpha = win.Math.max((5 - WMw) * 5, 0);
                            else Mm.globalAlpha = 1;
                            var wM = 118;
                            var W = ME.label[place];
                            Mm.drawImage(W, 0, 0, W.width, W.height, ((wvm + player.x) - (W.width / 4)) * mn, (((NNw + player.y) - wM) - ME.MVNWv[place]) * mn, (W.width / 2) * mn, (W.height / 2) * mn);
                            Mm.globalAlpha = 1;
                        }
                    }
                    if (ME.WvWwv[0] > 5) {
                        ME.WvWwv.shift();
                        ME.text.shift();
                        ME.MVNWv.shift();
                        ME.label.shift();
                        ME.NMWMV = 0;
                    }
                }
            };;
            var myOldX = 0;
            var myOldY = 0;
            function degToRad(value) {
                return win.Math.PI * value / 180;
            }
            let myPlayer = null;
            //display of player names
            function mVwvw(player) {
                //TODO
                if(aimActive){
                myply.angle = aimAngle;
                }
                Mm.fillStyle = "yellow";
                var ME = SERVG.socket[player.mysocketid];
                if (((((player.nNN & 255) === 16) && (SERVG.ME.WMnWN !== 1)) && (player.mysocketid !== SERVG.ME.id)) && (((ME.clan === -1) || (SERVG.clans[ME.clan].mvN !== ME.wwV)) || (SERVG.ME.clan !== ME.clan))) return;
                if (ME.mMw === null){
                        ME.mMw = vM.wNm(ME.nick, "'Viga', sans-serif", "#FFFFFF", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#000000", 12);
                }
                var W = ME.mMw;
                var wM = 90;
                if (ME.clan === -1) Mm.drawImage(W, ((wvm + player.x) - (W.Wvw / 2)) * mn, ((NNw + player.y) - wM) * mn, W.Wvw * mn, W.mNm * mn);
                else if (ME.clan !== -1) {
                    var clan = SERVG.clans[ME.clan];
                    if (clan.mvN === ME.wwV) {
                        if (clan.WWMWm === null)
                        var vvnWm = 0;
                        if (((player.mysocketid === SERVG.ME.id) || (((SERVG.ME.clan !== -1) && (SERVG.ME.clan === SERVG.socket[player.mysocketid].clan)) && (SERVG.socket[player.mysocketid].wwV === SERVG.clans[SERVG.ME.clan].mvN)))) { vvnWm = 1;
                         clan.WWMWm = vM.wNm(("[" + clan.name) + "]", "'Viga', sans-serif", "#000000", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, clanColorBack, 12); //#699CBB
                     } else clan.WWMWm = vM.wNm(("[" + clan.name) + "]", "'Viga', sans-serif", "#FFFFFF", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, clanColor, 12); //#699CBB
                        var wvMMv = clan.WWMWm;
                        Mm.drawImage(wvMMv, ((((wvm + player.x) - (W.Wvw / 2)) - (wvMMv.Wvw / 2)) - 0.5) * mn, ((NNw + player.y) - wM) * mn, wvMMv.Wvw * mn, wvMMv.mNm * mn);
                        if ((W.width !== 0) && (W.height !== 0)) Mm.drawImage(W, (((wvm + player.x) - (W.Wvw / 2)) + (wvMMv.Wvw / 2)) * mn, ((NNw + player.y) - wM) * mn, W.Wvw * mn, W.mNm * mn);
                    } else ME.clan = -1;
                }
            };;
    
            
    
            function vmNmW(NMn, place, vv, wVNVN, vWMwn, NVWwM, MWMvm) {
                var Nn = NVwvn[NMn.typ];
                var W = Nn.W;
                if (W.m !== 1) {
                    Nn.W = wN.wvv(Nn.src, Nn.W);
                    return;
                }
                var nVNNn = NVWwM - NMn.place;
                var VwMWn = MWMvm - NMn.vv;
                var nNmvn = (place + Nn.Mww.length) - nVNNn;
                var VWMmV = (vv + Nn.Mww[0].length) - VwMWn;
                var nMNww = 0;
                var WvMwV = 0;
                for (var NWM = place, mmWMW = 0; NWM < nNmvn; NWM++, mmWMW++) {
                    if (NWM >= VmvVW) {
                        nMNww = Nn.Mww.length - mmWMW;
                        break;
                    }
                    for (var mmm = vv, mVvwm = 0; mmm < VWMmV; mmm++, mVvwm++) {
                        if (mmm >= wWmnn) {
                            WvMwV = Nn.Mww[0].length - mVvwm;
                            break;
                        } else vMnnw[NWM][mmm] = MNW;
                    }
                }
                var Wv = 0;
                var wM = 0;
                var vN = 0;
                var WW = 0;
                if ((nMNww !== 0) || (WvMwV !== 0)) {
                    Wv = (((NMn.vv + VwMWn) * wmn) + wvm) * mn;
                    wM = (((NMn.place + nVNNn) * wmn) + NNw) * mn;
                    nVNNn *= 32;
                    VwMWn *= 32;
                    vN = (W.height - (nMNww * 32)) + nVNNn;
                    WW = (W.width - (WvMwV * 32)) + VwMWn;
                } else {
                    Wv = (((NMn.vv + VwMWn) * wmn) + wvm) * mn;
                    wM = (((NMn.place + nVNNn) * wmn) + NNw) * mn;
                    nVNNn *= 32;
                    VwMWn *= 32;
                    vN = W.height - nVNNn;
                    WW = W.width - VwMWn;
                }
                Mm.drawImage(W, VwMWn, nVNNn, WW, vN, Wv, wM, (WW * 3) * mn, (vN * 3) * mn);
            };;
    
            function wNnvM() {
                WvmnV = wN.nWV(WvmnV, (((Mw.scale + NNmMN[0]) + NNmMN[1]) + NNmMN[2]) + NNmMN[3], vwMWM);
                wWWNM = mn;
                mn += WvmnV * mn;
                wvwNM = nvn / mn;
                wwWnm = nwW / mn;
            };;
    
            function WNVmM(){
                var socket = nNM.Wvm[mnW];
                var vWM = nNM.border[mnW];
                var vvv = vWM.border;
                for (var place = 0; place < vvv; place++) {
                    var ME = socket[vWM.nnN[place]];
                    if (ME.mysocketid === SERVG.ME.id) {
                        if (Vwv.MWV(SERVG.ME.x, SERVG.ME.y, ME.x, ME.y) < 1) WMWvN = win.Math.max(0, WMWvN - mV);
                        else WMWvN = mMmvV;
                        var wVn = VVM[mnW].mVNvN[ME.nNN & 255];
                        var MnW = SERVG.MnW;
                        if (wVn.MWw !== win.undefined) {
                            MnW.MWw.mNNmw = wVn.MWw;
                            MnW.vNN.mNNmw = wVn.wNV;
                        } else {
                            MnW.MWw.mNNmw = 0;
                            MnW.vNN.mNNmw = 0;
                        }
                        NmM = ME.x;
                        WWV = ME.y;
                        myID = ME.mysocketid;
                        SERVG.ME.x = ME.x;
                        SERVG.ME.y = ME.y;
                        SERVG.ME.NWM = ME.place;
                        SERVG.ME.mmm = ME.vv;
                        SERVG.ME.wvM = (VVM[mnW].mNMNW[(ME.nNN >> 8) & 255].type === 6) ? 1 : 0;
                        var vWwvm = win.Math.min(nwVmW, VNwMw);
                        if (myply.NWN > vWwvm) vWwvm = WwmVw * win.Math.min((myply.NWN - vWwvm) / vWwvm, 1);
                        else vWwvm = 0;
                        var Wv = vWwvm * win.Math.cos(myply.angle);
                        var wM = vWwvm * win.Math.sin(myply.angle);
                        vvWnv = wN.nWV(vvWnv, Wv, WMNWw);
                        Nvmmn = wN.nWV(Nvmmn, wM, WMNWw);
                        var nvVvv = 0;
                        var WvnMn = 0;
                        if (Mw.WwnNw > 0) {
                            Mw.WwnNw -= 1;
                            nvVvv += (win.Math.random() * 6) - 3;
                            WvnMn += (win.Math.random() * 6) - 3;
                        }
                        if (Mw.nwNWm > 0) {
                            Mw.nwNWm -= 1;
                            nvVvv += (win.Math.random() * 18) - 9;
                            WvnMn += (win.Math.random() * 18) - 9;
                        }
                        wvm = (((mmw / mn) - ME.x) - vvWnv) + nvVvv;
                        NNw = (((VvN / mn) - ME.y) - Nvmmn) + WvnMn;
                        NVVWM = ME.x + vvWnv;
                        WVNMV = ME.y + Nvmmn;
                        return;
                    }
                }
            };;
    
            function mNWNw() {
                for (var place = 0; place < SERVG.ME.Wvv.length; place++) {
                    if (SERVG.ME.Wvv[place] !== 0) return 0;
                }
                return 1;
            };
    
            function wmVNW() {
                if (SERVG.ME.wvM === 1) {
                    if ((SERVG.ME.Mww > 0) && ((SERVG.ME.VWVWw !== SERVG.ME.NWM) || (SERVG.ME.vNwMm !== SERVG.ME.mmm))) {
                        for (var place = 0; place < SERVG.ME.Wvv.length; place++) {
                            if (SERVG.ME.Wvv[place] === 0) {
                                SERVG.ME.Wvv[place] = SERVG.ME.Mww;
                                SERVG.ME.NVNMw[place] = SERVG.ME.VWVWw;
                                SERVG.ME.NmVnm[place] = SERVG.ME.vNwMm;
                                break;
                            }
                        }
                        SERVG.ME.Mww = 0;
                        SERVG.ME.VWVWw = SERVG.ME.NWM;
                        SERVG.ME.vNwMm = SERVG.ME.mmm;
                    }
                    SERVG.ME.Mww = win.Math.min(Mvvwv, SERVG.ME.Mww + mV);
                    for (var place = 0; place < SERVG.ME.Wvv.length; place++) SERVG.ME.Wvv[place] = win.Math.max(0, SERVG.ME.Wvv[place] - mV);
                } else if ((SERVG.ME.Mww === 0) && (mNWNw() === 1)) return;
                else {
                    SERVG.ME.Mww = win.Math.max(0, SERVG.ME.Mww - mV);
                    for (var place = 0; place < SERVG.ME.Wvv.length; place++) SERVG.ME.Wvv[place] = win.Math.max(0, SERVG.ME.Wvv[place] - mV);
                }
                if (wWNmv.m !== 1) {
                    wWNmv = wN.wvv(craftgrid, wWNmv);
                    return;
                }
                Mm.globalAlpha = SERVG.ME.Mww / Mvvwv;
                var wM = mn * (((SERVG.ME.VWVWw * wmn) + NNw) + nwn);
                var Wv = mn * (((SERVG.ME.vNwMm * wmn) + wvm) + nwn);
                var WW = (mn * wWNmv.width) / 2;
                var vN = (mn * wWNmv.height) / 2;
                Mm.drawImage(wWNmv, Wv - (WW / 2), wM - (vN / 2), WW, vN);
                Mm.globalAlpha = 1;
                for (var place = 0; place < SERVG.ME.Wvv.length; place++) {
                    if (SERVG.ME.Wvv[place] > 0) {
                        Mm.globalAlpha = SERVG.ME.Wvv[place] / Mvvwv;
                        var wM = mn * (((SERVG.ME.NVNMw[place] * wmn) + NNw) + nwn);
                        var Wv = mn * (((SERVG.ME.NmVnm[place] * wmn) + wvm) + nwn);
                        var WW = (mn * wWNmv.width) / 2;
                        var vN = (mn * wWNmv.height) / 2;
                        Mm.drawImage(wWNmv, Wv - (WW / 2), wM - (vN / 2), WW, vN);
                        Mm.globalAlpha = 1;
                    }
                }
            };;
    
            function wmMwV() {
                var wVNVN = win.Math.min(nmn.height - VmvVW, win.Math.max(0, (((WnWvv - VmvVW) / 2) + win.Math.floor((WVNMV / wmn) - (VmvVW / 2))) + 1));
                var vWMwn = win.Math.min(nmn.width - wWmnn, win.Math.max(0, (((NVmMW - wWmnn) / 2) + win.Math.floor((NVVWM / wmn) - (wWmnn / 2))) + 1));
                var vN = wVNVN + VmvVW;
                var WW = vWMwn + wWmnn;
                for (var place = wVNVN; place < vN; place++) {
                    for (var vv = vWMwn; vv < WW; vv++) {
                        var player = nmn.nWmMn[place][vv];
                    }
                }
            };;
            //Отрисовка значка состояния игрока
            function vWMWW(player) {
                var ME = SERVG.socket[player.mysocketid];
                if ((ME !== win.undefined) && (ME.nNnWn.length > 0)) {
                    if (ME.mvnvM >= Mvnwm) ME.mvnvM = 0;
                    var mN = ME.mvnvM;
                    var vMN = ME.position[0];
                    var vV = ME.nNnWn[0];
                    if (mN === 0) {
                        var NWN = Vwv.NWN(player.x, player.y, NmM, WWV);
                    }
                    ME.mvnvM += mV;
                    if (ME.mvnvM >= Mvnwm) {
                        ME.mvnvM = 0;
                        ME.position.shift();
                        ME.nNnWn.shift();
                    }
                    var W = wVMNN[vV][vMN];
                    if (W.m !== 1) {
                        wVMNN[vV][vMN] = wN.wvv((((NVvVm + vV) + "_") + vMN) + ".png", W);
                        return;
                    }
                    var nn = 0;
                    if (mN < mmWWw) {
                        var mwvWV = mN / mmWWw;
                        Mm.globalAlpha = mwvWV;
                        nn = 15 * (1 - mwvWV);
                    } else if (mN > WWMnN) {
                        var mwVvV = (Mvnwm - mN) / (Mvnwm - WWMnN);
                        Mm.globalAlpha = mwVvV;
                        nn = 40 * (mwVvV - 1);
                    }

                    Mm.drawImage(W, ((wvm + player.x) - 120) * mn, ((NNw + player.y) + (nn - 45)) * mn, (W.width * mn) / 2, (W.height * mn) / 2);
                    Mm.globalAlpha = 1;
                }
            };;
    
            function VvVnw(player) {
                var ME = SERVG.socket[player.mysocketid];
                for (var place = 0; place < ME.mNWvv.length; place++) {
                    var WMw = ME.mNWvv[place];
                    if ((place > 0) && (WMw.mN <= 0)) {
                        var vVVVn = ME.mNWvv[place - 1];
                        if ((vVVVn.mN > 500) || (vVVVn.mN <= 0)) continue;
                    }
                    if ((player.speed > VVM[mnW].speed) || (WMw.mN > 0)) {
                        var mVn = VVM[mnW].mNWvv;
                        var W = mVn.W;
                        if (W.m !== 1) {
                            mVn.W = wN.wvv(mVn.src, mVn.W);
                            return;
                        }
                        if (WMw.mN <= 0) {
                            WMw.mN = 750;
                            WMw.angle = win.Math.random() * WNVNM;
                            WMw.x = player.x;
                            WMw.y = player.y;
                            WMw.size = 1 + (win.Math.random() * 0.8);
                        } else WMw.mN -= mV;
                        var vW = WNW.mWV.VnvVv(win.Math.max(0, WMw.mN / 750));
                        var VwW = (((mn * (WMw.size + 1)) * vW) * W.width) / 7;
                        var Wvw = -VwW / 2;
                        Mm.save();
                        Mm.translate((wvm + WMw.x) * mn, (NNw + WMw.y) * mn);
                        Mm.rotate(WMw.angle);
                        Mm.globalAlpha = win.Math.max(0, vW * vW);
                        Mm.drawImage(W, Wvw, Wvw, VwW, VwW);
                        Mm.restore();
                    }
                }
            };;
    
            function Wvmnw(mVn, nV, wVn, player, Nm, Wv, wM) {
                var ME = SERVG.socket[player.mysocketid];
                var WMW = 0;
                var Wmv = ME.Wmv - Mw.MmW;
                var MNV = ME.MNV - Mw.MmW;
                if (Wmv > 0) {
                    if (MNV > 0) WMW = 3;
                    else if (ME.MNV > 0) WMW = 5;
                    else WMW = 1;
                } else if (MNV > 0) WMW = 2;
                else if (ME.MNV > 0) WMW = 4;
                var MMm = mVn.WnmmW[WMW];
                var NWn = 0;
                var Vmwnn = player.state & 254;
                var Nmm = nV.Mmv;
                var VnN = nV.mMM;
                if (Vmwnn === 4) {
                    if (ME.mWv === -1) {
                        var MNmnm = (player.nNN >> 8) & 255;
                        if ((audio.ww.Nnn[MNmnm] !== 0) && ((Mw.MmW - ME.MMvnN) > 800)) {
                            ME.MMvnN = Mw.MmW;
                            var VVmnw = win.Math.floor(win.Math.random() * nV.mVM);
                            audio.VnV(audio.ww.Nnn[MNmnm][VVmnw], nV.vnM, Vwv.NWN(SERVG.ME.x, SERVG.ME.y, player.x, player.y) / 4, nV.Mnv);
                        }
                        ME.mWv = 0;
                    }
                    if (ME.NmMVW === 1) ME.mWv = win.Math.max(0, ME.mWv - mV);
                    else ME.mWv = win.Math.min(nV.mnv, ME.mWv + mV);
                    var vW = ME.mWv / nV.mnv;
                    NWn = vW * nV.NWn;
                    if ((ME.mWv === 0) || (ME.mWv === nV.mnv)) ME.NmMVW *= -1;
                } else if (Vwv.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                    ME.mWv = -1;
                    ME.Vw = (ME.Vw + mV) % 1500;
                    if (ME.nn !== 0) {
                        if (ME.nn < 400) ME.nn = 800 - ME.nn;
                        ME.nn = ME.nn + mV;
                        if (ME.nn > 800) ME.nn = 0;
                    }
                } else {
                    ME.mWv = -1;
                    if (player.speed > VVM[mnW].speed) ME.nn = ME.nn + (mV * 1.9);
                    else ME.nn = ME.nn + mV;
                    if (ME.nn > 800) {
                        ME.orientation *= -1;
                        ME.nn = ME.nn % 800;
                    }
                    if (ME.Vw !== 0) {
                        if (ME.Vw < 750) ME.Vw = 1500 - ME.Vw;
                        ME.Vw = ME.Vw + mV;
                        if (ME.Vw > 1500) ME.Vw = 0;
                    }
                }
                var Vw = nV.Vw * ((ME.Vw < 750) ? (ME.Vw / 750) : (1 - ((ME.Vw - 750) / 750)));
                var nn = nV.nn * ((ME.nn < 400) ? (ME.nn / 400) : (1 - ((ME.nn - 400) / 400)));
                var MVn = (wVn.Mmv === win.undefined) ? MMm.Mmv : wVn.Mmv;
                wN.WM(MVn, Wv, wM, Nmm.angle + player.angle, ((Nmm.x + (nn * ME.orientation)) + NWn) + Vw, Nmm.y, Nm);
                MVn = (wVn.mMM === win.undefined) ? MMm.mMM : wVn.mMM;
                wN.WM(MVn, Wv, wM, -VnN.angle + player.angle, ((VnN.x + (nn * ME.orientation)) + NWn) + Vw, VnN.y, Nm);
                var wv = nV.nV;
                wN.WM(wv, Wv, wM, player.angle, ((wv.x + (nn * ME.orientation)) + Vw) + NWn, wv.y, Nm);
                if (player.nMW > 0) {
                    var mnM = 1;
                    player.nMW -= mV;
                    var vW = 0;
                    if (player.nMW > 150) vW = WNW.mWV.wWM((300 - player.nMW) / 300);
                    else {
                        vW = WNW.mWV.wMn(player.nMW / 150);
                        mnM += (1 - vW) * 0.2;
                    }
                    Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    wN.WM(mVn.vVv, Wv, wM, player.angle, 0, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                if (player.Mmm > 0) {
                    var mnM = 1;
                    player.Mmm -= mV;
                    var vW = 0;
                    if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                    else {
                        vW = WNW.mWV.wMn(player.Mmm / 150);
                        mnM += (1 - vW) * 0.2;
                    }
                    Wv += (win.Math.cos(player.WvN) * vW) * 3;
                    wM += (win.Math.sin(player.WvN) * vW) * 3;
                    Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    wN.WM(mVn.Mmm, Wv, wM, player.angle, 0, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                if (player.mNW > 0) {
                    var mnM = 1;
                    player.mNW -= mV;
                    if (player.mNW > 150) Mm.globalAlpha = win.Math.min(1, win.Math.max(0, WNW.mWV.wWM((300 - player.mNW) / 300)));
                    else {
                        var vW = WNW.mWV.wMn(player.mNW / 150);
                        mnM += (1 - vW) * 0.2;
                        Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    }
                    wN.WM(mVn.mNW, Wv, wM, player.angle, 0, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                wN.WM(MMm.head, Wv, wM, player.angle, 0, 0, Nm);
                if (wVn.head !== win.undefined) wN.WM(wVn.head, Wv, wM, player.angle, 0, 0, Nm);
            };;
    
            function vwVWm(mVn, nV, wVn, player, Nm, Wv, wM) {
                var ME = SERVG.socket[player.mysocketid];
                var WMW = 0;
                var Wmv = ME.Wmv - Mw.MmW;
                var MNV = ME.MNV - Mw.MmW;
                if (Wmv > 0) {
                    if (MNV > 0) WMW = 3;
                    else if (ME.MNV > 0) WMW = 5;
                    else WMW = 1;
                } else if (MNV > 0) WMW = 2;
                else if (ME.MNV > 0) WMW = 4;
                var MMm = mVn.WnmmW[WMW];
                var NWn = 0;
                var MnN = 0;
                var WNN = 0;
                var WMw = -1;
                var Nmm = nV.Mmv;
                var VnN = nV.mMM;
                var mNvwv = ME.mNvwv;
                if (player.VMn > 0) {
                    if (player.VMn === player.nWM) {
                        for (var place = 0; place < mNvwv.length; place++) {
                            var wWN = mNvwv[place];
                            if (wWN.mN <= 0) {
                                wWN.type = nV.wWN;
                                wWN.mN = nV.vVMMM;
                                wWN.x = Wv + (win.Math.cos(player.angle) * 44);
                                wWN.y = wM + (win.Math.sin(player.angle) * 44);
                                var wW = ((-win.Math.PI / 2.5) + player.angle) + ((win.Math.random() * -win.Math.PI) / 3.5);
                                wWN.wwMnv = win.Math.cos(wW);
                                wWN.NwVWn = win.Math.sin(wW);
                                break;
                            }
                        }
                    }
                    player.VMn = win.Math.max(0, player.VMn - mV);
                    var vW = (player.VMn > 80) ? (1 - ((player.VMn - 80) / 100)) : (player.VMn / 80);
                    if (nV.WNw === 0) {
                        var nWvvW = mVn.Mmw[nV.Mmw].length;
                        for (var Mmw = 0; Mmw < nWvvW; Mmw++) {
                            if (player.VMn > (nV.mN - (30 * (Mmw + 1)))) {
                                WMw = Mmw;
                                break;
                            }
                        }
                    }
                    WNN = vW * nV.WNN;
                    MnN = vW * nV.MnN;
                    NWn = vW * nV.NWn;
                } else if (Vwv.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                    ME.Vw = (ME.Vw + mV) % 1500;
                    if (ME.nn !== 0) {
                        if (ME.nn < 400) ME.nn = 800 - ME.nn;
                        ME.nn = ME.nn + mV;
                        if (ME.nn > 800) ME.nn = 0;
                    }
                } else {
                    if (player.speed > VVM[mnW].speed) ME.nn = ME.nn + (mV * 1.9);
                    else ME.nn = ME.nn + mV;
                    if (ME.nn > 800) {
                        ME.orientation *= -1;
                        ME.nn = ME.nn % 800;
                    }
                    if (ME.Vw !== 0) {
                        if (ME.Vw < 750) ME.Vw = 1500 - ME.Vw;
                        ME.Vw = ME.Vw + mV;
                        if (ME.Vw > 1500) ME.Vw = 0;
                    }
                }
                var Vw = nV.Vw * ((ME.Vw < 750) ? (ME.Vw / 750) : (1 - ((ME.Vw - 750) / 750)));
                var nn = nV.nn * ((ME.nn < 400) ? (ME.nn / 400) : (1 - ((ME.nn - 400) / 400)));
                var MVn = (wVn.Mmv === win.undefined) ? MMm.Mmv : wVn.Mmv;
                wN.WM(MVn, Wv, wM, Nmm.angle + player.angle, ((Nmm.x + (nn * ME.orientation)) + NWn) + Vw, Nmm.y, Nm);
                MVn = (wVn.mMM === win.undefined) ? MMm.mMM : wVn.mMM;
                wN.WM(MVn, Wv, wM, -VnN.angle + player.angle, ((VnN.x + (nn * ME.orientation)) + NWn) + Vw, VnN.y, Nm);
                var wv = nV.nV;
                if ((WMw >= 0) && (nV.WNw === 0)) {
                    var Mmw = mVn.Mmw[nV.Mmw][WMw];
                    wN.WM(Mmw, Wv, wM, player.angle, (((wv.x + (nn * ME.orientation)) + Vw) + MnN) + nV.NnV, wv.y, Nm);
                }
                wN.WM(wv, Wv, wM, player.angle, ((wv.x + (nn * ME.orientation)) + Vw) + MnN, wv.y, Nm);
                for (var place = 0; place < mNvwv.length; place++) {
                    var wWN = mNvwv[place];
                    if (wWN.mN > 0) {
                        wWN.x += (mV * wWN.wwMnv) * 0.18;
                        wWN.y += (mV * wWN.NwVWn) * 0.18;
                        if ((wWN.mN < 200) && (Mm.globalAlpha === 1)) {
                            Mm.globalAlpha = WNW.mWV.wMn(wWN.mN / 200);
                            wN.WM(mVn.mNvwv[wWN.type], wWN.x, wWN.y, wWN.mN * 0.007, 0, 0, Nm);
                            Mm.globalAlpha = 1;
                        } else wN.WM(mVn.mNvwv[wWN.type], wWN.x, wWN.y, wWN.mN * 0.007, 0, 0, Nm);
                        wWN.mN -= mV;
                    }
                }
                if (player.Mmm > 0) {
                    var mnM = 1;
                    player.Mmm -= mV;
                    var vW = 0;
                    if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                    else {
                        vW = WNW.mWV.wMn(player.Mmm / 150);
                        mnM += (1 - vW) * 0.2;
                    }
                    Wv += (win.Math.cos(player.WvN) * vW) * 3;
                    wM += (win.Math.sin(player.WvN) * vW) * 3;
                    Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    wN.WM(mVn.Mmm, Wv, wM, player.angle, WNN, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                if (player.mNW > 0) {
                    var mnM = 1;
                    player.mNW -= mV;
                    if (player.mNW > 150) Mm.globalAlpha = win.Math.min(1, win.Math.max(0, WNW.mWV.wWM((300 - player.mNW) / 300)));
                    else {
                        var vW = WNW.mWV.wMn(player.mNW / 150);
                        mnM += (1 - vW) * 0.2;
                        Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    }
                    wN.WM(mVn.mNW, Wv, wM, player.angle, WNN, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                wN.WM(MMm.head, Wv, wM, player.angle, WNN, 0, Nm);
                if (wVn.head !== win.undefined) wN.WM(wVn.head, Wv, wM, player.angle, WNN, 0, Nm);
            };;
    
            function WVVmN(mVn, nV, wVn, player, Nm, Wv, wM) {
                var ME = SERVG.socket[player.mysocketid];
                var WMW = 0;
                var Wmv = ME.Wmv - Mw.MmW;
                var MNV = ME.MNV - Mw.MmW;
                if (Wmv > 0) {
                    if (MNV > 0) WMW = 3;
                    else if (ME.MNV > 0) WMW = 5;
                    else WMW = 1;
                } else if (MNV > 0) WMW = 2;
                else if (ME.MNV > 0) WMW = 4;
                var MMm = mVn.WnmmW[WMW];
                var nmm = 0;
                var NNM = 0;
                var NWW = 0;
                var wnN = 0;
                if (player.VMn > 0) {
                    player.VMn = win.Math.max(0, player.VMn - mV);
                    vW = (player.VMn > nV.wvW) ? (1 - ((player.VMn - nV.wvW) / (nV.mN - nV.wvW))) : (player.VMn / nV.wvW);
                    nmm = -WNW.mWV.vvw(vW) * 0.35;
                    wnN = vW * 3;
                    NWW = -vW * 20;
                    NNM = vW * 3;
                } else if (Vwv.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                    ME.Vw = (ME.Vw + mV) % 1500;
                    if (ME.nn !== 0) {
                        if (ME.nn < 400) ME.nn = 800 - ME.nn;
                        ME.nn = ME.nn + mV;
                        if (ME.nn > 800) ME.nn = 0;
                    }
                } else {
                    if (player.speed > VVM[mnW].speed) ME.nn = ME.nn + (mV * 1.9);
                    else ME.nn = ME.nn + mV;
                    if (ME.nn > 800) {
                        ME.orientation *= -1;
                        ME.nn = ME.nn % 800;
                    }
                    if (ME.Vw !== 0) {
                        if (ME.Vw < 750) ME.Vw = 1500 - ME.Vw;
                        ME.Vw = ME.Vw + mV;
                        if (ME.Vw > 1500) ME.Vw = 0;
                    }
                }
                var Vw = nV.Vw * ((ME.Vw < 750) ? (ME.Vw / 750) : (1 - ((ME.Vw - 750) / 750)));
                var nn = nV.nn * ((ME.nn < 400) ? (ME.nn / 400) : (1 - ((ME.nn - 400) / 400)));
                var nwnMw = nV.nwnMw * ((ME.Vw < 750) ? (ME.Vw / 750) : (1 - ((ME.Vw - 750) / 750)));
                var NwM = nV.Mmv;
                var MVn = (wVn.Mmv === win.undefined) ? MMm.Mmv : wVn.Mmv;
                wN.WM(MVn, Wv, wM, (NwM.angle + player.angle) - nmm, ((NwM.x - (nn * ME.orientation)) + NWW) + nwnMw, NwM.y, Nm);
                if (player.VMn > 0) {
                    var WnVmv = nV.WnVmv;
                    wN.WM(WnVmv, Wv, wM, player.angle, ((WnVmv.x - (nn * ME.orientation)) + nwnMw) + NWW, WnVmv.y, Nm);
                }
                var wv = nV.nV;
                wN.WM(wv, Wv, wM, wv.angle + player.angle, ((wv.x + (nn * ME.orientation)) + Vw) + NNM, wv.y, Nm);
                NwM = nV.mMM;
                MVn = (wVn.mMM === win.undefined) ? MMm.mMM : wVn.mMM;
                wN.WM(MVn, Wv, wM, -NwM.angle + player.angle, ((NwM.x + (nn * ME.orientation)) + NNM) + Vw, NwM.y, Nm);
                if (player.Mmm > 0) {
                    var mnM = 1;
                    player.Mmm -= mV;
                    var vW = 0;
                    if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                    else {
                        vW = WNW.mWV.wMn(player.Mmm / 150);
                        mnM += (1 - vW) * 0.2;
                    }
                    Wv += (win.Math.cos(player.WvN) * vW) * 3;
                    wM += (win.Math.sin(player.WvN) * vW) * 3;
                    Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    wN.WM(mVn.Mmm, Wv, wM, player.angle - (nmm / 1.5), wnN, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                if (player.mNW > 0) {
                    var mnM = 1;
                    player.mNW -= mV;
                    if (player.mNW > 150) Mm.globalAlpha = win.Math.min(1, win.Math.max(0, WNW.mWV.wWM((300 - player.mNW) / 300)));
                    else {
                        var vW = WNW.mWV.wMn(player.mNW / 150);
                        mnM += (1 - vW) * 0.2;
                        Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    }
                    wN.WM(mVn.mNW, Wv, wM, player.angle - (nmm / 1.5), wnN, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                wN.WM(MMm.head, Wv, wM, player.angle - (nmm / 1.5), wnN, 0, Nm);
                if (wVn.head !== win.undefined) wN.WM(wVn.head, Wv, wM, player.angle - (nmm / 1.5), wnN, 0, Nm);
            };;
    
            function mWNvw(mVn, nV, wVn, player, Nm, Wv, wM) {
                var ME = SERVG.socket[player.mysocketid];
                var WMW = 0;
                var Wmv = ME.Wmv - Mw.MmW;
                var MNV = ME.MNV - Mw.MmW;
                if (Wmv > 0) {
                    if (MNV > 0) WMW = 3;
                    else if (ME.MNV > 0) WMW = 5;
                    else WMW = 1;
                } else if (MNV > 0) WMW = 2;
                else if (ME.MNV > 0) WMW = 4;
                var MMm = mVn.WnmmW[WMW];
                var nmm = 0;
                var NNM = 0;
                var NWW = 0;
                var wnN = 0;
                if (player.VMn > 0) {
                    player.VMn = win.Math.max(0, player.VMn - mV);
                    vW = (player.VMn > nV.wvW) ? (1 - ((player.VMn - nV.wvW) / (nV.mN - nV.wvW))) : (player.VMn / nV.wvW);
                    nmm = -WNW.mWV.vvw(vW) * 0.55;
                    wnN = vW * 3;
                    NWW = -vW * 25;
                    NNM = vW * 10;
                } else if (Vwv.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                    ME.Vw = (ME.Vw + mV) % 1500;
                    if (ME.nn !== 0) {
                        if (ME.nn < 400) ME.nn = 800 - ME.nn;
                        ME.nn = ME.nn + mV;
                        if (ME.nn > 800) ME.nn = 0;
                    }
                } else {
                    if (player.speed > VVM[mnW].speed) ME.nn = ME.nn + (mV * 1.9);
                    else ME.nn = ME.nn + mV;
                    if (ME.nn > 800) {
                        ME.orientation *= -1;
                        ME.nn = ME.nn % 800;
                    }
                    if (ME.Vw !== 0) {
                        if (ME.Vw < 750) ME.Vw = 1500 - ME.Vw;
                        ME.Vw = ME.Vw + mV;
                        if (ME.Vw > 1500) ME.Vw = 0;
                    }
                }
                var Vw = nV.Vw * ((ME.Vw < 750) ? (ME.Vw / 750) : (1 - ((ME.Vw - 750) / 750)));
                var nn = nV.nn * ((ME.nn < 400) ? (ME.nn / 400) : (1 - ((ME.nn - 400) / 400)));
                var NwM = nV.mMM;
                var MVn = (wVn.mMM === win.undefined) ? MMm.mMM : wVn.mMM;
                wN.WM(MVn, Wv, wM, ((-NwM.angle + player.angle) - Vw) - nmm, (NwM.x - (nn * ME.orientation)) + NNM, NwM.y, Nm);
                if (player.Mmm > 0) {
                    var mnM = 1;
                    player.Mmm -= mV;
                    var vW = 0;
                    if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                    else {
                        vW = WNW.mWV.wMn(player.Mmm / 150);
                        mnM += (1 - vW) * 0.2;
                    }
                    Wv += (win.Math.cos(player.WvN) * vW) * 3;
                    wM += (win.Math.sin(player.WvN) * vW) * 3;
                    Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    wN.WM(mVn.Mmm, Wv, wM, player.angle - (nmm / 1.5), wnN, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                if (player.mNW > 0) {
                    var mnM = 1;
                    player.mNW -= mV;
                    if (player.mNW > 150) Mm.globalAlpha = win.Math.min(1, win.Math.max(0, WNW.mWV.wWM((300 - player.mNW) / 300)));
                    else {
                        var vW = WNW.mWV.wMn(player.mNW / 150);
                        mnM += (1 - vW) * 0.2;
                        Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    }
                    wN.WM(mVn.mNW, Wv, wM, player.angle - (nmm / 1.5), wnN, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                wN.WM(MMm.head, Wv, wM, player.angle - (nmm / 1.5), wnN, 0, Nm);
                if (wVn.head !== win.undefined) wN.WM(wVn.head, Wv, wM, player.angle - (nmm / 1.5), wnN, 0, Nm);
                var nwnMw = nV.nwnMw * ((ME.Vw < 750) ? (ME.Vw / 750) : (1 - ((ME.Vw - 750) / 750)));
                NwM = nV.Mmv;
                MVn = (wVn.Mmv === win.undefined) ? MMm.Mmv : wVn.Mmv;
                wN.WM(MVn, Wv, wM, NwM.angle + player.angle, ((NwM.x + (nn * ME.orientation)) + NWW) + nwnMw, NwM.y, Nm);
                var wv = nV.nV;
                wN.WM(wv, Wv, wM, wv.angle + player.angle, ((wv.x + (nn * ME.orientation)) + nwnMw) + NWW, wv.y, Nm);
            };;
    
            function mvwMm(mVn, nV, wVn, player, Nm, Wv, wM) {
                var ME = SERVG.socket[player.mysocketid];
                var WMW = 0;
                var Wmv = ME.Wmv - Mw.MmW;
                var MNV = ME.MNV - Mw.MmW;
                if (Wmv > 0) {
                    if (MNV > 0) WMW = 3;
                    else if (ME.MNV > 0) WMW = 5;
                    else WMW = 1;
                } else if (MNV > 0) WMW = 2;
                else if (ME.MNV > 0) WMW = 4;
                var MMm = mVn.WnmmW[WMW];
                var nmm = 0;
                var NNM = 0;
                var NWW = 0;
                var wnN = 0;
                var Nmm = nV.Mmv;
                var VnN = nV.mMM;
                if (player.VMn > 0) {
                    player.VMn = win.Math.max(0, player.VMn - mV);
                    vW = (player.VMn > nV.wvW) ? (1 - ((player.VMn - nV.wvW) / (nV.mN - nV.wvW))) : (player.VMn / nV.wvW);
                    nmm = -WNW.mWV.vvw(vW) * 0.4;
                    wnN = vW * 3;
                    NNM = vW * VnN.NWN;
                    NWW = vW * Nmm.NWN;
                } else if (Vwv.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                    ME.Vw = (ME.Vw + mV) % 1500;
                    if (ME.nn !== 0) {
                        if (ME.nn < 400) ME.nn = 800 - ME.nn;
                        ME.nn = ME.nn + mV;
                        if (ME.nn > 800) ME.nn = 0;
                    }
                } else {
                    if (player.speed > VVM[mnW].speed) ME.nn = ME.nn + (mV * 1.9);
                    else ME.nn = ME.nn + mV;
                    if (ME.nn > 800) {
                        ME.orientation *= -1;
                        ME.nn = ME.nn % 800;
                    }
                    if (ME.Vw !== 0) {
                        if (ME.Vw < 750) ME.Vw = 1500 - ME.Vw;
                        ME.Vw = ME.Vw + mV;
                        if (ME.Vw > 1500) ME.Vw = 0;
                    }
                }
                var Vw = nV.Vw * ((ME.Vw < 750) ? (ME.Vw / 750) : (1 - ((ME.Vw - 750) / 750)));
                var nn = nV.nn * ((ME.nn < 400) ? (ME.nn / 400) : (1 - ((ME.nn - 400) / 400)));
                var wv = nV.nV;
                wN.mVnNN(wv, Wv, wM, (wv.angle + player.angle) + Vw, wv.x + (nn * ME.orientation), wv.y, Nm, nmm * wv.WWm, wv.x2, wv.y2);
                var MVn = (wVn.Mmv === win.undefined) ? MMm.Mmv : wVn.Mmv;
                wN.WM(MVn, Wv, wM, ((Nmm.angle + player.angle) + Vw) + (nmm * Nmm.WWm), (Nmm.x + (nn * ME.orientation)) + NWW, Nmm.y, Nm);
                MVn = (wVn.mMM === win.undefined) ? MMm.mMM : wVn.mMM;
                wN.WM(MVn, Wv, wM, ((-VnN.angle + player.angle) + Vw) + (nmm * VnN.WWm), (VnN.x + (nn * ME.orientation)) + NNM, VnN.y, Nm);
                if (player.Mmm > 0) {
                    var mnM = 1;
                    player.Mmm -= mV;
                    var vW = 0;
                    if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                    else {
                        vW = WNW.mWV.wMn(player.Mmm / 150);
                        mnM += (1 - vW) * 0.2;
                    }
                    Wv += (win.Math.cos(player.WvN) * vW) * 3;
                    wM += (win.Math.sin(player.WvN) * vW) * 3;
                    Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    wN.WM(mVn.Mmm, Wv, wM, player.angle + (nmm / 1.5), wnN, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                if (player.mNW > 0) {
                    var mnM = 1;
                    player.mNW -= mV;
                    if (player.mNW > 150) Mm.globalAlpha = win.Math.min(1, win.Math.max(0, WNW.mWV.wWM((300 - player.mNW) / 300)));
                    else {
                        var vW = WNW.mWV.wMn(player.mNW / 150);
                        mnM += (1 - vW) * 0.2;
                        Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    }
                    wN.WM(mVn.mNW, Wv, wM, player.angle + (nmm / 1.5), wnN, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                wN.WM(MMm.head, Wv, wM, player.angle + (nmm / 1.5), wnN, 0, Nm);
                if (wVn.head !== win.undefined) wN.WM(wVn.head, Wv, wM, player.angle + (nmm / 1.5), wnN, 0, Nm);
            };;
    
            function mmmMw(mVn, nV, wVn, player, Nm, Wv, wM) {
                var ME = SERVG.socket[player.mysocketid];
                var WMW = 0;
                var Wmv = ME.Wmv - Mw.MmW;
                var MNV = ME.MNV - Mw.MmW;
                if (Wmv > 0) {
                    if (MNV > 0) WMW = 3;
                    else if (ME.MNV > 0) WMW = 5;
                    else WMW = 1;
                } else if (MNV > 0) WMW = 2;
                else if (ME.MNV > 0) WMW = 4;
                var MMm = mVn.WnmmW[WMW];
                var NNM = 0;
                var NWW = 0;
                if (Vwv.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                    ME.Vw = (ME.Vw + mV) % 1500;
                    if (ME.nn !== 0) {
                        if (ME.nn < 400) ME.nn = 800 - ME.nn;
                        ME.nn = ME.nn + mV;
                        if (ME.nn > 800) ME.nn = 0;
                    }
                } else {
                    if (player.speed > VVM[mnW].speed) ME.nn = ME.nn + (mV * 1.9);
                    else ME.nn = ME.nn + mV;
                    if (ME.nn > 800) {
                        ME.orientation *= -1;
                        ME.nn = ME.nn % 800;
                    }
                    if (ME.Vw !== 0) {
                        if (ME.Vw < 750) ME.Vw = 1500 - ME.Vw;
                        ME.Vw = ME.Vw + mV;
                        if (ME.Vw > 1500) ME.Vw = 0;
                    }
                }
                var Vw = nV.Vw * ((ME.Vw < 750) ? (ME.Vw / 750) : (1 - ((ME.Vw - 750) / 750)));
                var nn = nV.nn * ((ME.nn < 400) ? (ME.nn / 400) : (1 - ((ME.nn - 400) / 400)));
                var NwM = nV.Mmv;
                var MVn = (wVn.Mmv === win.undefined) ? MMm.Mmv : wVn.Mmv;
                wN.WM(MVn, Wv, wM, (NwM.angle + player.angle) + Vw, (NwM.x + (nn * ME.orientation)) + NWW, NwM.y, Nm);
                NwM = nV.mMM;
                MVn = (wVn.mMM === win.undefined) ? MMm.mMM : wVn.mMM;
                wN.WM(MVn, Wv, wM, (-NwM.angle + player.angle) - Vw, (NwM.x - (nn * ME.orientation)) + NNM, NwM.y, Nm);
                wN.WM(nV.putableimg, Wv, wM, ((-NwM.angle + player.angle) - Vw) + (win.Math.PI / 3), ((NwM.x - (nn * ME.orientation)) + NNM) - 40, NwM.y - 15, Nm);
                if (player.Mmm > 0) {
                    var mnM = 1;
                    player.Mmm -= mV;
                    var vW = 0;
                    if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                    else {
                        vW = WNW.mWV.wMn(player.Mmm / 150);
                        mnM += (1 - vW) * 0.2;
                    }
                    Wv += (win.Math.cos(player.WvN) * vW) * 3;
                    wM += (win.Math.sin(player.WvN) * vW) * 3;
                    Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    wN.WM(mVn.Mmm, Wv, wM, player.angle, 0, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                if (player.mNW > 0) {
                    var mnM = 1;
                    player.mNW -= mV;
                    if (player.mNW > 150) Mm.globalAlpha = win.Math.min(1, win.Math.max(0, WNW.mWV.wWM((300 - player.mNW) / 300)));
                    else {
                        var vW = WNW.mWV.wMn(player.mNW / 150);
                        mnM += (1 - vW) * 0.2;
                        Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    }
                    wN.WM(mVn.mNW, Wv, wM, player.angle, 0, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                wN.WM(MMm.head, Wv, wM, player.angle, 0, 0, Nm);
                if (wVn.head !== win.undefined) wN.WM(wVn.head, Wv, wM, player.angle, 0, 0, Nm);
                wN.WM(nV.MMwvW, Wv, wM, player.angle, 0, 0, Nm);
            };;
            var nVWnV = [0, 0, 0, 0];
    // placing items building 
            function placingobj() {
                var nwmVM = 0;
                if ((SERVG.ME.wvM === 1) && (SERVG.ME.putableimg !== 0)) {
                    var wv = items[SERVG.ME.putableimg];
                    if (wv.nvN !== 0) {
                        wv = wv.nvN[SERVG.ME.mWmnv];
                        wv.notputableimg = wv.Nn;
                        wv.putableimg = wv.Nn;
                        wv.Wwv = nVWnV;
                        wv.nWn = nVWnV;
                    }
                    var wW = myply.angle;
                    var WN = (wv.Mvw === 1) ? 0 : SERVG.ME.nvMwN;
                    SERVG.ME.Vmm = SERVG.ME.mmm + win.Math.floor((nwn + (win.Math.cos(wW) * wmn)) / wmn);
                    SERVG.ME.NNV = SERVG.ME.NWM + win.Math.floor((nwn + (win.Math.sin(wW) * wmn)) / wmn);
                    var Wv = ((wv.Wwv[WN] + wvm) + nwn) + (wmn * SERVG.ME.Vmm);
                    var wM = ((wv.nWn[WN] + NNw) + nwn) + (wmn * SERVG.ME.NNV);
                    if ((((SERVG.ME.Vmm >= 0) && (SERVG.ME.NNV >= 0)) && (SERVG.ME.Vmm < NMv)) && (SERVG.ME.NNV < wWw)) {
                        var VMV = NwV[SERVG.ME.NNV][SERVG.ME.Vmm];
                        var clan = (SERVG.ME.clan === -1) ? -2 : SERVG.ME.clan;
                        if ((VMV.NMn === MNW) && (((wv.WvV !== 2) || (VMV.wMV === 0)) || (VMV.nww === Ww.plant))) {
                            SERVG.ME.nwVMm = 1; // before 0
                            wN.WM(wv.notputableimg, Wv, wM, WN * Mvv, 0, 0, 1);
                        } else if ((((wv.detail.nww === Ww.plant) || (wv.WvV === 2)) || (((VMV.mysocketid !== 0) && (VMV.mysocketid !== SERVG.ME.id)) && (SERVG.socket[VMV.mysocketid].clan !== clan))) && (VMV.nNNwM === MNW)) {
                            SERVG.ME.nwVMm = 0;
                            wN.WM(wv.notputableimg, Wv, wM, WN * Mvv, 0, 0, 1);
                        } else if ((wv.MMnVm !== win.undefined) && ((((WN % 2) === 0) && ((((((SERVG.ME.NNV < 1) || (SERVG.ME.NNV >= (wWw - 1))) || (NwV[SERVG.ME.NNV + 1][SERVG.ME.Vmm].NMn === MNW)) || ((NwV[SERVG.ME.NNV + 1][SERVG.ME.Vmm].nNNwM === MNW) && (((NwV[SERVG.ME.NNV + 1][SERVG.ME.Vmm].mysocketid !== SERVG.ME.id) && (NwV[SERVG.ME.NNV + 1][SERVG.ME.Vmm].mysocketid !== 0)) && (SERVG.socket[NwV[SERVG.ME.NNV + 1][SERVG.ME.Vmm].mysocketid].clan !== clan)))) || (NwV[SERVG.ME.NNV - 1][SERVG.ME.Vmm].NMn === MNW)) || ((NwV[SERVG.ME.NNV - 1][SERVG.ME.Vmm].nNNwM === MNW) && (((NwV[SERVG.ME.NNV - 1][SERVG.ME.Vmm].mysocketid !== SERVG.ME.id) && (NwV[SERVG.ME.NNV - 1][SERVG.ME.Vmm].mysocketid !== 0)) && (SERVG.socket[NwV[SERVG.ME.NNV - 1][SERVG.ME.Vmm].mysocketid].clan !== clan))))) || (((WN % 2) === 1) && (((((((SERVG.ME.Vmm < 1) || (SERVG.ME.Vmm >= (NMv - 1))) || (NwV[SERVG.ME.NNV][SERVG.ME.Vmm + 1].NMn === MNW)) || ((NwV[SERVG.ME.NNV][SERVG.ME.Vmm + 1].nNNwM === MNW) && (((NwV[SERVG.ME.NNV][SERVG.ME.Vmm + 1].mysocketid !== SERVG.ME.id) && (NwV[SERVG.ME.NNV][SERVG.ME.Vmm + 1].mysocketid !== 0)) && (SERVG.socket[NwV[SERVG.ME.NNV][SERVG.ME.Vmm + 1].mysocketid].clan !== clan)))) || (NwV[SERVG.ME.NNV][SERVG.ME.Vmm - 1].NMn === MNW)) || ((NwV[SERVG.ME.NNV][SERVG.ME.Vmm - 1].nNNwM === MNW) && (((NwV[SERVG.ME.NNV][SERVG.ME.Vmm - 1].mysocketid !== SERVG.ME.id) && (NwV[SERVG.ME.NNV][SERVG.ME.Vmm - 1].mysocketid !== 0)) && (SERVG.socket[NwV[SERVG.ME.NNV][SERVG.ME.Vmm - 1].mysocketid].clan !== clan)))) || (SERVG.ME.NWM === SERVG.ME.NNV))))) {
                            SERVG.ME.nwVMm = 0;
                            wN.WM(wv.notputableimg, Wv, wM, WN * Mvv, 0, 0, 1);
                        } else {
                            SERVG.ME.nwVMm = 1;
                            wN.WM(wv.putableimg, Wv, wM, WN * Mvv, 0, 0, 1);
                        }
                    }
                    if (NvwMN.m !== 1) {
                        NvwMN = wN.wvv(hintrotate, NvwMN);
                        return;
                    }
                    if ((wv.Mvw === 1) || (SERVG.ME.mvn >= 0)) nwmVM = win.Math.max(0, SERVG.ME.NvwMN - mV);
                    else nwmVM = win.Math.min(900, SERVG.ME.NvwMN + mV);
                } else nwmVM = win.Math.max(0, SERVG.ME.NvwMN - mV);
                if (nwmVM > 0) {
                    Mm.globalAlpha = WNW.mWV.wMn(win.Math.max(0, nwmVM - 600) / 300);
                    var Nm = mn + (WvmnV * mn);
                    var vNwMN = Nm / mn;
                    var WW = (mn * NvwMN.width) / 2;
                    var vN = (mn * NvwMN.height) / 2;
                    Mm.drawImage(NvwMN, ((wvm + NmM) * mn) - (WW / 2), win.Math.max(10 * mn, ((((NNw + WWV) * mn) - (vN / 2)) - (65 * mn)) - (60 * mn)), WW, vN);
                    Mm.globalAlpha = 1;
                }
                SERVG.ME.NvwMN = nwmVM;
            };;
    
            function nwMNv(mVn, nV, wVn, player, Nm, Wv, wM) {
                var ME = SERVG.socket[player.mysocketid];
                var WMW = 0;
                var Wmv = ME.Wmv - Mw.MmW;
                var MNV = ME.MNV - Mw.MmW;
                if (Wmv > 0) {
                    if (MNV > 0) WMW = 3;
                    else if (ME.MNV > 0) WMW = 5;
                    else WMW = 1;
                } else if (MNV > 0) WMW = 2;
                else if (ME.MNV > 0) WMW = 4;
                var MMm = mVn.WnmmW[WMW];
                var nmm = 0;
                var NNM = 0;
                var NWW = 0;
                var wnN = 0;
                if (player.VMn > 0) {
                    player.VMn = win.Math.max(0, player.VMn - mV);
                    player.VMn = win.Math.min(player.VMn, nV.mN);
                    vW = (player.VMn > nV.wvW) ? (1 - ((player.VMn - nV.wvW) / (nV.mN - nV.wvW))) : (player.VMn / nV.wvW);
                    nmm = (ME.NmMVW * WNW.mWV.vvw(vW)) * 0.55;
                    wnN = vW * 3;
                    if (ME.NmMVW === 1) NNM = vW * 25;
                    else NWW = vW * 25;
                    if (player.VMn === 0) ME.NmMVW *= -1;
                } else if (Vwv.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                    ME.Vw = (ME.Vw + mV) % 1500;
                    if (ME.nn !== 0) {
                        if (ME.nn < 400) ME.nn = 800 - ME.nn;
                        ME.nn = ME.nn + mV;
                        if (ME.nn > 800) ME.nn = 0;
                    }
                } else {
                    if (player.speed > VVM[mnW].speed) ME.nn = ME.nn + (mV * 1.9);
                    else ME.nn = ME.nn + mV;
                    if (ME.nn > 800) {
                        ME.orientation *= -1;
                        ME.nn = ME.nn % 800;
                    }
                    if (ME.Vw !== 0) {
                        if (ME.Vw < 750) ME.Vw = 1500 - ME.Vw;
                        ME.Vw = ME.Vw + mV;
                        if (ME.Vw > 1500) ME.Vw = 0;
                    }
                }
                var Vw = nV.Vw * ((ME.Vw < 750) ? (ME.Vw / 750) : (1 - ((ME.Vw - 750) / 750)));
                var nn = nV.nn * ((ME.nn < 400) ? (ME.nn / 400) : (1 - ((ME.nn - 400) / 400)));
                var NwM = nV.Mmv;
                var MVn = (wVn.Mmv === win.undefined) ? MMm.Mmv : wVn.Mmv;
                wN.WM(MVn, Wv, wM, ((NwM.angle + player.angle) + Vw) + nmm, (NwM.x + (nn * ME.orientation)) + NWW, NwM.y, Nm);
                NwM = nV.mMM;
                MVn = (wVn.mMM === win.undefined) ? MMm.mMM : wVn.mMM;
                wN.WM(MVn, Wv, wM, ((-NwM.angle + player.angle) - Vw) + nmm, (NwM.x - (nn * ME.orientation)) + NNM, NwM.y, Nm);
                if (player.nMW > 0) {
                    var mnM = 1;
                    player.nMW -= mV;
                    var vW = 0;
                    if (player.nMW > 150) vW = WNW.mWV.wWM((300 - player.nMW) / 300);
                    else {
                        vW = WNW.mWV.wMn(player.nMW / 150);
                        mnM += (1 - vW) * 0.2;
                    }
                    Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    wN.WM(mVn.vVv, Wv, wM, player.angle + (nmm / 1.5), wnN, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                if (player.Mmm > 0) {
                    var mnM = 1;
                    player.Mmm -= mV;
                    var vW = 0;
                    if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                    else {
                        vW = WNW.mWV.wMn(player.Mmm / 150);
                        mnM += (1 - vW) * 0.2;
                    }
                    Wv += (win.Math.cos(player.WvN) * vW) * 3;
                    wM += (win.Math.sin(player.WvN) * vW) * 3;
                    Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    wN.WM(mVn.Mmm, Wv, wM, player.angle + (nmm / 1.5), wnN, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                if (player.mNW > 0) {
                    var mnM = 1;
                    player.mNW -= mV;
                    if (player.mNW > 150) Mm.globalAlpha = win.Math.min(1, win.Math.max(0, WNW.mWV.wWM((300 - player.mNW) / 300)));
                    else {
                        var vW = WNW.mWV.wMn(player.mNW / 150);
                        mnM += (1 - vW) * 0.2;
                        Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    }
                    wN.WM(mVn.mNW, Wv, wM, player.angle + (nmm / 1.5), wnN, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                wN.WM(MMm.head, Wv, wM, player.angle + (nmm / 1.5), wnN, 0, Nm);
                if (wVn.head !== win.undefined) wN.WM(wVn.head, Wv, wM, player.angle + (nmm / 1.5), wnN, 0, Nm);
            };;
    
            function nMmmm(player) {
                var mnn = VVv[player.nNN & 15];
                NwV[player.place][player.vv].NMn = MNW;
                NwV[player.place][player.vv].wMV = player.mysocketid;
                NwV[player.place][player.vv].nww = win.undefined;
                var Nm = 1;
                var Wv = wvm + player.x;
                var wM = NNw + player.y;
                if (player.vwW !== 0) {
                    player.wmm += mV;
                    var vW = WNW.mWV.VnvVv(1 - ((player.wmm - 500) / 400));
                    Mm.globalAlpha = win.Math.min(win.Math.max(0, vW), 1);
                    wN.WM(mnn.wmm, Wv, wM, player.angle, 0, 0, 1);
                    vW = WNW.mWV.VnvVv(1 - (player.wmm / 400));
                    Nm = win.Math.min(1 + (0.5 * (1 - vW)), 1.5);
                    Mm.globalAlpha = win.Math.max(0, vW);
                }
                if ((player.nNN & 16) === 16) {
                    player.nNN &= ~16;
                    player.Mmm = 250;
                    player.WvN = (WNVNM * ((player.nNN >> 5) & 31)) / 31;
                }
                mnn.NM(mnn, player, Wv, wM, Nm);
                if (player.vwW !== 0) {
                    if (player.wmm > 900) player.vwW = 2;
                    Mm.globalAlpha = 1;
                }
            };;
    
            function NvmMW(player) {
                NwV[player.place][player.vv].NMn = MNW;
                NwV[player.place][player.vv].wMV = player.mysocketid;
                NwV[player.place][player.vv].nww = win.undefined;
                var mVn = VVM[mnW];
                var MNmnm = (player.nNN >> 8) & 255;
                var nV = mVn.mNMNW[MNmnm];
                var wVn = mVn.mVNvN[player.nNN & 255];
                var Nm = 1;
                var Vmwnn = player.state & 254;
                var Wv = wvm + player.x;
                var wM = NNw + player.y;
                if (player.vwW !== 0) {
                    player.wmm += mV;
                    var vW = WNW.mWV.VnvVv(1 - ((player.wmm - 500) / 400));
                    Mm.globalAlpha = win.Math.min(win.Math.max(0, vW), 1);
                    //wN.WM(mVn.wmm, Wv, wM, player.angle, 0, 0, 1);
                    vW = WNW.mWV.VnvVv(1 - (player.wmm / 400));
                    Nm = win.Math.min(1 + (0.5 * (1 - vW)), 1.5);
                    Mm.globalAlpha = win.Math.max(0, vW);
                }
                if (Vmwnn === 2) {
                    player.state &= 65281;
                    if (audio.ww.Nnn[MNmnm] !== 0) {
                        var VVmnw = win.Math.floor(win.Math.random() * nV.mVM);
                        audio.VnV(audio.ww.Nnn[MNmnm][VVmnw], nV.vnM, Vwv.NWN(SERVG.ME.x, SERVG.ME.y, player.x, player.y) / 4, nV.Mnv);
                    }
                    if (player.VMn <= 0) {
                        player.VMn = nV.mN;
                        player.nWM = nV.mN;
                    }
                } else if (Vmwnn === 6) player.state &= 65281;
                switch (nV.type) {
                    case 0:
                        nwMNv(mVn, nV, wVn, player, Nm, Wv, wM);
                        break;
                    case 1:
                        mvwMm(mVn, nV, wVn, player, Nm, Wv, wM);
                        break;
                    case 2:
                        vwVWm(mVn, nV, wVn, player, Nm, Wv, wM);
                        break;
                    case 3:
                        mWNvw(mVn, nV, wVn, player, Nm, Wv, wM);
                        break;
                    case 4:
                        WVVmN(mVn, nV, wVn, player, Nm, Wv, wM);
                        break;
                    case 5:
                        Wvmnw(mVn, nV, wVn, player, Nm, Wv, wM);
                        break;
                    case 6:
                        mmmMw(mVn, nV, wVn, player, Nm, Wv, wM);
                        break;
                }
                if (player.vwW !== 0) {
                    if (player.wmm > 900) player.vwW = 2;
                    Mm.globalAlpha = 1;
                }
            };;
            
            //timer for using eating things
            function timeret() {
                if (SERVG.ME.GHOUL !== 0) return;
                var NMMmV = SERVG.ME.mnWwv;
                if (NMMmV > 0) {
                    if (NMMmV < 500) Mm.globalAlpha = WNW.mWV.wWM(NMMmV / 500);
                    else if (NMMmV > 1500) Mm.globalAlpha = WNW.mWV.wWM(1 - ((NMMmV - 1500) / 500));
                    else Mm.globalAlpha = 1;
                    var wmN = (SERVG.ME.NmWvw === 1) ? vwnWv : VNN[items[SERVG.ME.NmWvw].loot];
                    wN.WM(NmWvw, nvm, 50, 0, 0, 0, 1);
                    wN.WM(wmN, nvm, 50, 0, 0, 0, 1);
                    Mm.globalAlpha = 1;
                    SERVG.ME.mnWwv -= mV;
                }
                var mvn = SERVG.ME.mvn;
                switch (mvn) {
                    case 0:
                        if (nMWVv.m !== 1) {
                            if (vNv === 0) nMWVv = wN.wvv(looticon, nMWVv);
                            else nMWVv = wN.wvv(lootmobileicon, nMWVv);
                            return;
                        }
                        var Nm = mn + (WvmnV * mn);
                        var vNwMN = Nm / mn;
                        var scalex = (mn * nMWVv.width) / 2;
                        var scaley = (mn * nMWVv.height) / 2;
                        var posx = ((wvm + NmM) * Nm) - (scalex / 2);
                        var posy = win.Math.max(10 * mn, ((((NNw + WWV) * Nm) - (scaley / 2)) - (65 * Nm)) - (60 * mn));
                        if (vNv === 1) {
                            windowobjects.mNNwM = posx;
                            windowobjects.nNwMM = posy;
                            windowobjects.vwVnW = scalex;
                            windowobjects.mnNnW = scaley;
                        }
                        Mm.drawImage(nMWVv, posx, posy, scalex, scaley);
                        var loot = VNN[SERVG.ME.loot];
                        posx = ((wvm + NmM) * vNwMN) - (scalex / (2 * mn));
                        posy = win.Math.max(10, ((((NNw + WWV) * vNwMN) - (scaley / (2 * mn))) - (65 * vNwMN)) - 60);
                        wN.WM(loot, posx + 77, posy + 33, loot.angle, 0, 0, loot.scale);
                        break;
                    case 1:
                        var vW = SERVG.ME.wVnVm / SERVG.ME.nWVvv;
                        var mN = SERVG.ME.nWVvv - SERVG.ME.wVnVm;
                        SERVG.ME.wVnVm -= mV;
                        if (SERVG.ME.wVnVm < 0) {
                            SERVG.ME.mvn = -1;
                            return;
                        }
                        if (timer.m !== 1) {
                            timer = wN.wvv(timericon, timer);
                            return;
                        }
                        if (arrow.m !== 1) {
                            arrow = wN.wvv(timerarrow, arrow);
                            return;
                        }
                        if (lights.m !== 1) {
                            lights = wN.wvv(timerlights, lights);
                            return;
                        }
                        var Nm = mn + (WvmnV * mn);
                        var scalex = (mn * timer.width) / 2;
                        var scaley = (mn * timer.height) / 2;
                        var wwn = (wvm + NmM) * Nm;
                        var Nmn = (NNw + WWV) * Nm;
                        var posx = wwn - (scalex / 2);
                        var posy = win.Math.max(10 * Nm, ((Nmn - (scaley / 2)) - (65 * Nm)) - (60 * mn));
                        if (mN < 100) Mm.globalAlpha = mN / 100;
                        else if (SERVG.ME.wVnVm < 100) Mm.globalAlpha = SERVG.ME.wVnVm / 100;
                        Mm.drawImage(timer, posx, posy, scalex, scaley);    // posx = pos of timer img in x axis, posy = in y axis  |||| scalex, scaley is scale
                        Mm.save();
                        Mm.translate(wwn, win.Math.max((10 * Nm) + (scaley / 2), (Nmn - (65 * Nm)) - (60 * mn)));
                        Mm.rotate(-WNVNM * vW);
                        Mm.drawImage(arrow, -scalex / 2, -scaley / 2, scalex, scaley);
                        Mm.restore();
                        Mm.drawImage(lights, posx, posy, scalex, scaley);
                        Mm.globalAlpha = 1;
                        break;
                    case 2:
                        var W = SERVG.ME.MWVMV.W;
                        if (W.m !== 1) {
                            if (vNv === 0) SERVG.ME.MWVMV.W = wN.wvv(SERVG.ME.MWVMV.src, W);
                            else SERVG.ME.MWVMV.W = wN.wvv(SERVG.ME.MWVMV.src.replace("e-", "e-mobile-"), W);
                            return;
                        }
                        var Nm = mn + (WvmnV * mn);
                        var scalex = (mn * W.width) / 2;
                        var scaley = (mn * W.height) / 2;
                        var posx;
                        if (SERVG.ME.mwMmN === 1) posx = (((wvm + NmM) - 5) * Nm) - scalex;
                        else posx = ((wvm + NmM) * Nm) - (scalex / 2);
                        var posy = win.Math.max(10 * mn, ((((NNw + WWV) * Nm) - (scaley / 2)) - (65 * Nm)) - (60 * mn));
                        if (vNv === 1) {
                            windowobjects.mNNwM = posx;
                            windowobjects.nNwMM = posy;
                            windowobjects.vwVnW = scalex;
                            windowobjects.mnNnW = scaley;
                        }
                        Mm.drawImage(W, posx, posy, scalex, scaley);
                        if (SERVG.ME.mwMmN === 1) {
                            if (VWvVN.m !== 1) {
                                if (vNv === 0) VWvVN = wN.wvv(loot2icon, VWvVN);
                                else VWvVN = wN.wvv(lootmobileicon, nMWVv);
                                return;
                            }
                            var vNwMN = Nm / mn;
                            scalex = (mn * VWvVN.width) / 2;
                            scaley = (mn * VWvVN.height) / 2;
                            posx += scalex + (10 * mn);
                            posy = win.Math.max(10 * mn, ((((NNw + WWV) * Nm) - (scaley / 2)) - (65 * Nm)) - (60 * mn));
                            if (vNv === 1) {
                                windowobjects.mmNWn = posx;
                                windowobjects.vmwNV = posy;
                            }
                            Mm.drawImage(VWvVN, posx, posy, scalex, scaley);
                            var loot = VNN[SERVG.ME.loot];
                            posx = ((wvm + NmM) * vNwMN) + 5;
                            posy = win.Math.max(10, ((((NNw + WWV) * vNwMN) - (scaley / (2 * mn))) - (65 * vNwMN)) - 60);
                            wN.WM(loot, posx + 77, posy + 33, loot.angle, 0, 0, loot.scale);
                        }
                        break;
                }
            };;
            var nMVNv = 0;
            var WvWmM = 0;
            var VwmMm = {
                id: -1,
                mvN: -1
            };
    
            function vNwNM(player, Wn, NWN, nM) {
                if ((NwMVW === vMNWw) || (Wn === particulesitems.woodtree)) return;
                else if (NwMVW === nWNMn) nM *= 3;
                if ((nNM.border[vvwvw].border + nM) >= wnNWM) return;
                for (var place = 0; place < nM; place++) {
                    var N = win.Math.random();
                    var wW = ((N * 10) % 1) * WNVNM;
                    var MMwmm = NWN + (((N * 10000) % 1) * 25);
                    NWN += 8;
                    WvWmM = (WvWmM + 1) % wnNWM;
                    var wmWnw = WvWmM + nNM.WwNMN;
                    nMVNv += 1;
                    var NVm = nNM.get(0, wmWnw, nMVNv, vvwvw);
                    mvMMV(NVm, 0, nMVNv, wmWnw, vvwvw, player.WWwMm, player.Vmnvm, player.WWwMm + (win.Math.cos(wW) * MMwmm), player.Vmnvm + (win.Math.sin(wW) * MMwmm), win.Math.floor(N * VNw[Wn].length), ((N * 100) % 1) * 255, Wn);
                }
            };;
    
            function mWNvV(player) {
                var W = VNw[player.state][player.nNN];
                if (player.wmm > 0) {
                    player.wmm = win.Math.min(1, player.wmm + (mV / 500));
                    Mm.globalAlpha = 1 - player.wmm;
                    wN.WM(W, wvm + player.x, NNw + player.y, player.angle, 0, 0, 1);
                    Mm.globalAlpha = 1;
                    if (player.wmm === 1) {
                        VwmMm.id = player.id;
                        VwmMm.mvN = player.mvN;
                    }
                    return;
                } else if (Vwv.MWV(player.x, player.y, player.wnw, player.WVM) < 0.01) player.wmm = 0.001;
                wN.WM(W, wvm + player.x, NNw + player.y, player.angle, 0, 0, 1);
            };;
    
            //dynamite & c4
            function dyncvis(wv, player, Wv, wM, WN, Nm) {
                player.Vw = (player.Vw + mV) % 500;
                var vW = player.Vw / 500;
                var mnM = 0.95 + (0.3 * WNW.mWV.vvw(vW));
                Mm.globalAlpha = 1 - vW;
                wN.WM(wv.Nn[1], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, mnM);
                Mm.globalAlpha = 1;
                wN.WM(wv.Nn[0], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
            };;
    
            //spikes???
            function spikevis(wv, player, Wv, wM, WN, Nm) {
                var vvnWm = 0;
                var VmnmV = 1;
                if ((player.state & 16) === 16) VmnmV = 0;
                if (((player.mysocketid === SERVG.ME.id) || (((SERVG.ME.clan !== -1) && (SERVG.ME.clan === SERVG.socket[player.mysocketid].clan)) && (SERVG.socket[player.mysocketid].wwV === SERVG.clans[SERVG.ME.clan].mvN))) || (Vwv.MWV(NmM, WWV, player.x, player.y) < 52000)) vvnWm = 1;
                if (VmnmV === 0) {
                    if (player.nMW === 0) vNwNM(player, wv.NWm, wv.Mwm, 5);
                    if (player.nMW < 300) {
                        Wv += (win.Math.random() * 6) - 4;
                        wM += (win.Math.random() * 6) - 4;
                        player.nMW += mV;
                    }
                    if (player.Vw > 0) {
                        player.Vw = win.Math.max(0, player.Vw - (mV / 5));
                        Mm.globalAlpha = WNW.mWV.vvw(player.Vw / 300);
                        wN.WM(wv.hidden[player.id % 3], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                        Mm.globalAlpha = 1;
                    }
                    wN.WM(wv.vWwvw[player.id % 3], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                } else if (vvnWm === 1) {
                    if (player.Vw === 300) wN.WM(wv.hidden[player.id % 3], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                    else {
                        player.Vw = win.Math.min(300, player.Vw + mV);
                        Mm.globalAlpha = WNW.mWV.vvw(player.Vw / 300);
                        wN.WM(wv.hidden[player.id % 3], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                        Mm.globalAlpha = 1;
                    }
                } else if ((vvnWm === 0) && (player.Vw > 0)) {
                    player.Vw = win.Math.max(0, player.Vw - (mV / 5));
                    Mm.globalAlpha = WNW.mWV.vvw(player.Vw / 300);
                    wN.WM(wv.hidden[player.id % 3], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                    Mm.globalAlpha = 1;
                }
            };;
    
            //wires
            function wiresvis(wv, player, Wv, wM, WN, Nm) {
                var vvnWm = 0;
                if (((player.mysocketid === SERVG.ME.id) || (((SERVG.ME.clan !== -1) && (SERVG.ME.clan === SERVG.socket[player.mysocketid].clan)) && (SERVG.socket[player.mysocketid].wwV === SERVG.clans[SERVG.ME.clan].mvN))) || (Vwv.MWV(NmM, WWV, player.x, player.y) < 22500)) vvnWm = 1;
                if (vvnWm === 1) {
                    if (player.Vw === 300) wN.WM(wv.Nn, (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                    else {
                        player.Vw = win.Math.min(300, player.Vw + mV);
                        Mm.globalAlpha = WNW.mWV.vvw(player.Vw / 300);
                        wN.WM(wv.Nn, (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                        Mm.globalAlpha = 1;
                    }
                } else if ((vvnWm === 0) && (player.Vw > 0)) {
                    player.Vw = win.Math.max(0, player.Vw - (mV / 5));
                    Mm.globalAlpha = WNW.mWV.vvw(player.Vw / 300);
                    wN.WM(wv.Nn, (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                    Mm.globalAlpha = 1;
                }
            };;
            //landmine visibility function
            function landminevis(wv, player, Wv, wM, WN, Nm) {
                var vvnWm = 0;
                if (((player.mysocketid === SERVG.ME.id) || (((SERVG.ME.clan !== -1) && (SERVG.ME.clan === SERVG.socket[player.mysocketid].clan)) && (SERVG.socket[player.mysocketid].wwV === SERVG.clans[SERVG.ME.clan].mvN)))) vvnWm = 1;
                // if player is in clan or its his mine
                if (vvnWm === 1) {
                        player.Vw = win.Math.min(300, player.Vw + mV);
                        Mm.globalAlpha = WNW.mWV.vvw(player.Vw / 300);
                        wN.WM(wv.Nn[player.id % 3], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                        Mm.globalAlpha = 1;
                }
                // if player is not in clan
                else if (vvnWm === 0) {
                        player.Vw = win.Math.min(300, player.Vw + mV);
                        Mm.globalAlpha = WNW.mWV.vvw(player.Vw / 300);
                        wN.WM(wv.Nn[player.id % 3], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, 1.5);
                        Mm.globalAlpha = 1;

                }
                

            };;
    
            function MWMmm(wv, player, Wv, wM, WN, Nm) {
                wN.WM(wv.Nn, (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
            };;
    
            function NnNvw(wv, player, Wv, wM, WN, Nm) {
                wN.WM(wv.Nn[player.Vvm], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
            };;
    
            function mmwVM(wv, player, Wv, wM, WN, Nm) {
                if (player.Vvm > 0) wN.WM(wv.WVW[player.Vvm - 1], (wvm + player.x) + Wv, (NNw + player.y) + wM, 0, 0, 0, Nm);
                else wN.WM(wv.Nn[WwmwN(player)], (wvm + player.x) + Wv, (NNw + player.y) + wM, 0, 0, 0, Nm);
            };;
    
            function nVw(wv, player, MMwnn) {
                if ((((player.vwW === 0) && (SERVG.ME.mvn !== 1)) && (SERVG.ME.VVn !== 1)) && (((MMwnn === 0) || (player.mysocketid === SERVG.ME.id)) || (((SERVG.ME.clan !== -1) && (SERVG.ME.clan === SERVG.socket[player.mysocketid].clan)) && (SERVG.socket[player.mysocketid].wwV === SERVG.clans[SERVG.ME.clan].mvN)))) {
                    var NWN = Vwv.MWV(NmM, WWV, player.x, player.y);
                    if (NWN < vnVmM) {
                        SERVG.ME.NnN = wv.NnN;
                        SERVG.ME.MnMwn = player.id;
                        SERVG.ME.MNMvN = player.mysocketid;
                        SERVG.ME.vWMmW = wv.MWW;
                        vnVmM = NWN;
                        if (SERVG.ME.mvn === 0) SERVG.ME.mwMmN = 1;
                        SERVG.ME.mvn = 2;
                        SERVG.ME.MWVMV = wv.wwN;
                        return 1;
                    }
                }
                return 0;
            };;
    
            function nVwvm(wv, player, Wv, wM, WN, Nm) {
                wN.WM(wv.WnVMV, (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, 1);
                var vMN = (player.state >> 4) & 15;
                if (player.NnW !== vMN) {
                    player.NnW = vMN;
                    player.Vw = 0;
                }
                player.Vw = player.Vw + mV;
                player.mNW = (player.mNW + mV) % 1000;
                var Nm = 1 + (0.03 * ((player.mNW < 500) ? (player.mNW / 500) : (1 - ((player.mNW - 500) / 500))));
                if (vMN === 0) {
                    Mm.globalAlpha = WNW.mWV.vvw(player.Vw / wv.vMvvV);
                    wN.WM(wv.Nn[0], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                    Mm.globalAlpha = 1;
                } else if (player.Vw < wv.vMvvV) {
                    var MwMvw = WNW.mWV.vvw(player.Vw / wv.vMvvV);
                    Mm.globalAlpha = 1 - MwMvw;
                    wN.WM(wv.Nn[vMN - 1], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                    Mm.globalAlpha = MwMvw;
                    wN.WM(wv.Nn[vMN], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                    Mm.globalAlpha = 1;
                } else wN.WM(wv.Nn[vMN], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
            };;
    
            function NWnmw(wv, player, Wv, wM, WN, Nm) {
                var vMN = (player.state >> 4) & 15;
                player.Vw = (player.Vw + mV) % 1000;
                var Nm = 1 + (0.01 * ((player.Vw < 500) ? (player.Vw / 500) : (1 - ((player.Vw - 500) / 500))));
                wN.WM(wv.Nn[vMN], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
            };;
    
            function VMWWV(wv, player, Wv, wM, WN, Nm) {
                var vMN = (player.state >> 4) & 15;
                player.Vw = (player.Vw + mV) % 1000;
                var Nm = 1 + (0.03 * ((player.Vw < 500) ? (player.Vw / 500) : (1 - ((player.Vw - 500) / 500))));    //0.03 is size of which plant goews bigger then smaller
                wN.WM(wv.Nn[vMN], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
            };;
    
            function nNMVN(wv, player, Wv, wM, WN, Nm) {
                var WVV = (player.Vvm > 0) ? wv.WVW[player.Vvm - 1] : wv.Nn[wmNMv(player, WN)];
                var W = WVV.W;
                if (W.m !== 1) {
                    WVV.W = wN.wvv(WVV.src, WVV.W);
                    return;
                }
                var VwW = ((mn * W.width) / 2) * Nm;
                var WVv = ((mn * W.height) / 2) * Nm;
                Mm.save();
                Mm.translate(mn * ((wvm + player.x) + Wv), mn * ((NNw + player.y) + wM));
                Mm.rotate(WN * Mvv);
                Mm.translate((wv.VvMvv * mn) - (VwW / 2), (wv.MmVVV * mn) - (WVv / 2));
                Mm.drawImage(W, -wv.VvMvv * mn, -wv.MmVVV * mn, VwW, WVv);
                Mm.restore();
            };;
    
            function nvVNm(wv, player, Wv, wM, WN, Nm) {
                Mm.globalAlpha = 1;
                var MvVvv = (player.state >> 7) & 1;
                if (MvVvv === 1) player.nWM = win.Math.min(500, player.nWM + mV);
                else if (player.nWM > 0) player.nWM = win.Math.max(0, player.nWM - mV);
                if ((player.nWM > 0) && (player.nWM !== 500)) {
                    Mm.globalAlpha = WNW.mWV.wMn(player.nWM / 500);
                    wN.WM(wv.Nn[1][player.Vvm], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                    Mm.globalAlpha = WNW.mWV.wMn(1 - (player.nWM / 500));
                    wN.WM(wv.Nn[0][player.Vvm], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                    Mm.globalAlpha = 1;
                } else wN.WM(wv.Nn[MvVvv][player.Vvm], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
            };;
    
            function nWnMV(wv, player, Wv, wM, WN, Nm) {
                nVw(wv, player, 0);
                wN.WM(wv.Nn[(player.state >> 4) & 1], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
            };;
    
            function WWNMv(wv, player, Wv, wM, WN, Nm) {
                nVw(wv, player, 0);
                wN.WM(wv.Nn[(player.state >> 4) & 3], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
            };;
    
            function mWmNV(wv, player, Wv, wM, WN, Nm) {
                nVw(wv, player, 0);
                var mMW = (player.state >> 7) & 1;
                if (mMW === 1) player.nWM = win.Math.min(500, player.nWM + mV);
                else if (player.nWM > 0) player.nWM = win.Math.max(0, player.nWM - mV);
                if (player.nWM > 0) {
                    WvnvV[wVVMw++] = player;
                    wN.WM(wv.wVnWm[(player.state >> 4) & 7], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                } else wN.WM(wv.Nn, (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
            };;
    
            function Wnmmm(player) {
                var wv = items[player.nNN >> 7];
                Mm.globalAlpha = WNW.mWV.wMn(player.nWM / 500);
                player.NnW = (player.NnW + mV) % 5000;
                var Vw = player.NnW;
                var Nm = 1 + (0.09 * ((Vw < 2500) ? (Vw / 2500) : (1 - ((Vw - 2500) / 2500))));
                wN.WM(wv.MwmWn[(player.state >> 4) & 7], wvm + player.x, NNw + player.y, 0, 0, 0, Nm);
                Mm.globalAlpha = 1;
            };;
            
            //door function
            function doorfunc(wv, player, Wv, wM, WN, Nm) {
                var NVNvv = (player.state >> 4) & 1;
                var MWwVn = (player.mysocketid === 0) ? 0 : 1;
                if ((nVw(wv, player, MWwVn) === 1) && (NVNvv === 1)) SERVG.ME.MWVMV = wv.mMnmM;
                if (player.VMn !== NVNvv) {
                    player.nWM = 500;
                    player.VMn = NVNvv;
                }
                if (player.nWM > 0) player.nWM = win.Math.max(0, player.nWM - mV);
                var wW = wv.angle;
                if (NVNvv === 0) wW *= WNW.mWV.vvw(player.nWM / 500);
                else wW *= WNW.mWV.vvw(1 - (player.nWM / 500));
                var WVV = (player.Vvm > 0) ? wv.WVW[player.Vvm - 1] : wv.Nn;
                var W = WVV.W;
                if (W.m !== 1) {
                    WVV.W = wN.wvv(WVV.src, WVV.W);
                    return;
                }
                var VwW = ((mn * W.width) / 2) * Nm;
                var WVv = ((mn * W.height) / 2) * Nm;
                Mm.save();
                Mm.translate(mn * ((wvm + player.x) + Wv), mn * ((NNw + player.y) + wM));
                Mm.rotate(WN * Mvv);
                Mm.translate((wv.VvMvv * mn) - (VwW / 2), (wv.MmVVV * mn) - (WVv / 2));
                Mm.rotate(wW);
                Mm.drawImage(W, -wv.VvMvv * mn, -wv.MmVVV * mn, VwW, WVv);
                Mm.restore();
                if ((player.state & 32) === 32) {
                    player.state -= 32;
                    if (((player.Vw === 0) && (Wv === 0)) && (wM === 0)) player.Vw = 600;
                }
                if (player.Vw > 0) {
                    if (WwwWM.m !== 1) {
                        WwwWM = wN.wvv(useicon, WwwWM);
                        return;
                    }
                    if (player.Vw > 400) Mm.globalAlpha = WNW.mWV.wMn(1 - ((player.Vw - 400) / 200));
                    else if (player.Vw < 200) Mm.globalAlpha = WNW.mWV.wMn(player.Vw / 200);
                    var wM = mn * (((player.place * wmn) + NNw) + nwn);
                    var Wv = mn * (((player.vv * wmn) + wvm) + nwn);
                    var WW = (mn * WwwWM.width) / 2;
                    var vN = (mn * WwwWM.height) / 2;
                    Mm.drawImage(WwwWM, Wv - (WW / 2), wM - (vN / 2), WW, vN);
                    Mm.globalAlpha = 1;
                    player.Vw = win.Math.max(0, player.Vw - mV);
                }
            };;
    
            function NMwnn(wv, player, Wv, wM, WN, Nm) {
                var mmWVw = NwV[player.place][player.vv];
                mmWVw.NMn = 0;
                mmWVw.nNNwM = MNW;
                mmWVw.mysocketid = player.mysocketid;
                if ((mmWVw.mVN !== MNW) || (mmWVw.MmvNw === 1)) {
                    if (player.Vvm > 0) wN.WM(wv.WVW[player.Vvm - 1], (wvm + player.x) + Wv, (NNw + player.y) + wM, 0, 0, 0, Nm);
                    else wN.WM(wv.Nn[Wwmwm(player)], wvm + player.x, NNw + player.y, 0, 0, 0, Nm);
                }
            };;
    
            //containers icon
            function wwNWM(wv, player, Wv, wM, WN, Nm) {
                var inuse = (player.state >> 4) & 1;      // container in use state
                var WWMvM = items[wv.id].nvN[player.nvN];
                if (inuse === 1) player.VMn = win.Math.min(500, player.VMn + mV); // if someone is using container
                else if (player.VMn > 0) player.VMn = win.Math.max(0, player.VMn - mV);
                if (((inuse === 0) && (WWMvM.WvwVM === 1)) && (nVw(WWMvM, player, 0) === 1)) SERVG.ME.MWVMV = econtainericon;
                wN.WM(WWMvM.Nn, (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                if (player.VMn > 0) containeropenic(player, Wv, wM);    // then put icon
            };;
    
            function VWwMV(wv, player, Wv, wM, WN, Nm) {
                var WWMvM = items[wv.id].nvN[player.nvN];
                wN.WM(WWMvM.Nn, wvm + player.x, NNw + player.y, 0, 0, 0, Nm);
            };;
    
            function NWVWn(mnn, player, Wv, wM, Nm) {
                var Vmwnn = player.state & 254;
                if (Vmwnn === 2) {
                    player.state &= 65281;
                    if (player.VMn <= 0) {
                        player.VMn = mnn.vmWVv;
                        player.nWM = mnn.vmWVv;
                        var VVmnw = win.Math.floor(win.Math.random() * 3);
                        audio.VnV(audio.ww.Nnn[0][VVmnw], 0.5, Vwv.NWN(SERVG.ME.x, SERVG.ME.y, player.x, player.y) / 3.5, 0);
                    }
                }
                var nmm = 0;
                var NNM = 0;
                var NWW = 0;
                var wnN = 0;
                if (player.VMn > 0) {
                    player.VMn = win.Math.max(0, player.VMn - mV);
                    player.VMn = win.Math.min(player.VMn, mnn.vmWVv);
                    vW = (player.VMn > mnn.WVVvW) ? (1 - ((player.VMn - mnn.WVVvW) / (mnn.vmWVv - mnn.WVVvW))) : (player.VMn / mnn.WVVvW);
                    nmm = (player.nMW * WNW.mWV.vvw(vW)) * 0.55;
                    wnN = vW * 6;
                    if (player.nMW === 1) NNM = vW * 25;
                    else NWW = vW * 25;
                    if (player.VMn === 0) player.nMW *= -1;
                } else if (Vwv.MWV(player.x, player.y, player.wnw, player.WVM) < 1) {
                    player.Vw = (player.Vw + mV) % 1500;
                    if (player.NnW !== 0) {
                        if (player.NnW < 750) player.NnW = 1500 - player.NnW;
                        player.NnW = player.NnW + mV;
                        if (player.NnW > 1500) player.NnW = 0;
                    }
                } else {
                    player.NnW = (player.NnW + mV) % 1500;
                    if (player.NnW > 1500) {
                        player.mNW *= -1;
                        player.NnW = player.NnW % 1500;
                    }
                    if (player.Vw !== 0) {
                        if (player.Vw < 750) player.Vw = 1500 - player.Vw;
                        player.Vw = player.Vw + mV;
                        if (player.Vw > 1500) player.Vw = 0;
                    }
                }
                var Vw = mnn.Vw * ((player.Vw < 750) ? (player.Vw / 750) : (1 - ((player.Vw - 750) / 750)));
                var nn = mnn.NVwvN * ((player.NnW < 750) ? (player.NnW / 750) : (1 - ((player.NnW - 750) / 750)));
                wN.WM(mnn.Mmv, Wv, wM, ((mnn.Mmv.angle + player.angle) + Vw) + nmm, (mnn.Mmv.x + (nn * player.mNW)) + NWW, mnn.Mmv.y, Nm);
                wN.WM(mnn.mMM, Wv, wM, ((-mnn.mMM.angle + player.angle) - Vw) + nmm, (mnn.mMM.x - (nn * player.mNW)) + NNM, mnn.mMM.y, Nm);
                if (player.Mmm > 0) {
                    var mnM = 1;
                    player.Mmm -= mV;
                    var vW = 0;
                    if (player.Mmm > 150) vW = WNW.mWV.wWM((300 - player.Mmm) / 300);
                    else {
                        vW = WNW.mWV.wMn(player.Mmm / 150);
                        mnM += (1 - vW) * 0.2;
                    }
                    Wv += (win.Math.cos(player.WvN) * vW) * 10;
                    wM += (win.Math.sin(player.WvN) * vW) * 10;
                    Mm.globalAlpha = win.Math.min(1, win.Math.max(0, vW));
                    wN.WM(mnn.Mmm, Wv, wM, player.angle + (nmm / 1.5), wnN, 0, mnM);
                    Mm.globalAlpha = 1;
                }
                wN.WM(mnn.head, Wv, wM, player.angle + (nmm / 1.5), wnN, 0, Nm);
            };;
    
            // welding, fridge, chest, workbench - container open
            function mvmwV(wv, player, Wv, wM, WN, Nm) {
                var inuse = (player.state >> 4) & 1;
                if (inuse === 1) player.VMn = win.Math.min(500, player.VMn + mV);
                else if (player.VMn > 0) player.VMn = win.Math.max(0, player.VMn - mV);
                if (inuse === 0) nVw(wv, player, 0);
                wN.WM(wv.Nn, (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                if (player.VMn > 0) containeropenic(player, Wv, wM);
            };;
    
            function wVMmw(wv, player, Wv, wM, WN, Nm) {
                var place = (WN + 1) % 2;
                var vv = WN % 2;
                NwV[player.place + place][player.vv + vv].NMn = MNW;
                NwV[player.place - place][player.vv - vv].NMn = MNW;
                NwV[player.place + place][player.vv + vv].wMV = player.mysocketid;
                NwV[player.place - place][player.vv - vv].wMV = player.mysocketid;
                NwV[player.place + place][player.vv + vv].nww = win.undefined;
                NwV[player.place - place][player.vv - vv].nww = win.undefined;
                nVw(wv, player, 0);
                wN.WM(wv.Nn, (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
            };;
    
            // agitator - container open
            function VmMwM(wv, player, Wv, wM, WN, Nm) {
                var MWm = (player.state >> 4) & 1;
                if (MWm === 1) player.VMn = win.Math.min(500, player.VMn + mV);
                else if (player.VMn > 0) player.VMn = win.Math.max(0, player.VMn - mV);
                if (MWm === 0) nVw(wv, player, 0);
                var mMW = (player.state >> 5) & 1;
                if (mMW === 1) player.nWM = win.Math.min(10000, player.nWM + mV);
                else if (player.nWM > 0) player.nWM = win.Math.max(0, player.nWM - mV);
                var vW = 0;
                if (player.nWM > 0) {
                    vW = WNW.mWV.wMn(player.nWM / 10000);
                    player.mNW += (vW * mV) / 300;
                    wN.WM(wv.Nn[1], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                    wN.WM(wv.Nn[2], ((wvm + player.x) + Wv) + wv.NmVwM[WN][0], ((NNw + player.y) + wM) + wv.NmVwM[WN][1], (WN * Mvv) + player.mNW, 0, 0, Nm);
                    wN.WM(wv.Nn[3], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                } else wN.WM(wv.Nn[0], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                if (player.VMn > 0) containeropenic(player, Wv, wM);
            };;
    
            // extractor - container open
            function wnvmM(wv, player, Wv, wM, WN, Nm) {
                var MWm = (player.state >> 4) & 1;
                if (MWm === 1) player.VMn = win.Math.min(500, player.VMn + mV);
                else if (player.VMn > 0) player.VMn = win.Math.max(0, player.VMn - mV);
                if (MWm === 0) nVw(wv, player, 0);
                var mMW = (player.state >> 5) & 1;
                if (mMW === 1) player.nWM = win.Math.min(10000, player.nWM + mV);
                else if (player.nWM > 0) player.nWM = win.Math.max(0, player.nWM - mV);
                var vW = 0;
                if (player.nWM > 0) {
                    vW = WNW.mWV.wMn(player.nWM / 10000);
                    Wv += ((win.Math.random() * 2) - 1) * vW;
                    wM += ((win.Math.random() * 2) - 1) * vW;
                    player.mNW += (vW * mV) / 300;
                    wN.WM(wv.Nn[1], ((wvm + player.x) + Wv) + wv.NmVwM[WN][0], ((NNw + player.y) + wM) + wv.NmVwM[WN][1], (WN * Mvv) + player.mNW, 0, 0, Nm);
                    wN.WM(wv.Nn[0], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                } else wN.WM(wv.Nn[2], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                if (player.VMn > 0) containeropenic(player, Wv, wM);
            };;
    
            function containeropenic(player, Wv, wM) {
                player.Vw = (player.Vw + mV) % 1000;
                var Nm = 1 + (0.15 * ((player.Vw < 500) ? (player.Vw / 500) : (1 - ((player.Vw - 500) / 500))));
                Nm *= mn;
                if (WwwWM.m !== 1) {
                    WwwWM = wN.wvv(useicon, WwwWM);
                    return;
                }
                Mm.globalAlpha = WNW.mWV.wMn(player.VMn / 500);
                var wM = mn * (((player.place * wmn) + NNw) + nwn);
                var Wv = mn * (((player.vv * wmn) + wvm) + nwn);
                var WW = (Nm * WwwWM.width) / 2;
                var vN = (Nm * WwwWM.height) / 2;
                Mm.drawImage(WwwWM, Wv - (WW / 2), wM - (vN / 2), WW, vN);
                Mm.globalAlpha = 1;
            };;
    
            // composter - container open
            function nVVVm(wv, player, Wv, wM, WN, Nm) {
                var MWm = (player.state >> 4) & 1;
                if (MWm === 1) player.VMn = win.Math.min(500, player.VMn + mV);
                else if (player.VMn > 0) player.VMn = win.Math.max(0, player.VMn - mV);
                if (MWm === 0) nVw(wv, player, 0);
                var mMW = (player.state >> 5) & 1;
                if (mMW === 1) player.nWM = win.Math.min(10000, player.nWM + mV);
                else if (player.nWM > 0) {
                    player.nWM = win.Math.max(0, player.nWM - mV);
                }
                var vW = 0;
                if (player.nWM > 0) {
                    vW = WNW.mWV.wMn(player.nWM / 10000);
                    Wv += ((win.Math.random() * 2) - 1) * vW;
                    wM += ((win.Math.random() * 2) - 1) * vW;
                    wN.WM(wv.Nn[0], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                } else wN.WM(wv.Nn[1], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                if (player.VMn > 0) containeropenic(player, Wv, wM);
            };;
    
            // smelter - container open
            function WNvww(wv, player, Wv, wM, WN, Nm) {
                var place = (WN + 1) % 2;
                var vv = WN % 2;
                NwV[player.place + place][player.vv + vv].NMn = MNW;
                NwV[player.place - place][player.vv - vv].NMn = MNW;
                NwV[player.place + place][player.vv + vv].wMV = player.mysocketid;
                NwV[player.place - place][player.vv - vv].wMV = player.mysocketid;
                NwV[player.place + place][player.vv + vv].nww = win.undefined;
                NwV[player.place - place][player.vv - vv].nww = win.undefined;
                var MWm = (player.state >> 4) & 1;
                if (MWm === 1) player.VMn = win.Math.min(500, player.VMn + mV);
                else if (player.VMn > 0) player.VMn = win.Math.max(0, player.VMn - mV);
                if (MWm === 0) nVw(wv, player, 0);
                var mMW = (player.state >> 5) & 1;
                if (mMW === 1) player.nWM = win.Math.min(10000, player.nWM + mV);
                else if (player.nWM > 0) {
                    player.nWM = win.Math.max(0, player.nWM - mV);
                }
                var vW = 0;
                if (player.nWM > 0) {
                    vW = WNW.mWV.wMn(player.nWM / 10000);
                    Wv += ((win.Math.random() * 2) - 1) * vW;
                    wM += ((win.Math.random() * 2) - 1) * vW;
                    wN.WM(wv.Nn[1], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                } else wN.WM(wv.Nn[0], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                if (player.VMn > 0) containeropenic(player, Wv, wM);
            };;
    
            // workbench - container open
            function NNnwW(wv, player, Wv, wM, WN, Nm) {
                var place = (WN + 1) % 2;
                var vv = WN % 2;
                NwV[player.place + place][player.vv + vv].NMn = MNW;
                NwV[player.place - place][player.vv - vv].NMn = MNW;
                NwV[player.place + place][player.vv + vv].wMV = player.mysocketid;
                NwV[player.place - place][player.vv - vv].wMV = player.mysocketid;
                NwV[player.place + place][player.vv + vv].nww = win.undefined;
                NwV[player.place - place][player.vv - vv].nww = win.undefined;
                var MWm = (player.state >> 4) & 1;
                if (MWm === 1) player.VMn = win.Math.min(500, player.VMn + mV);
                else if (player.VMn > 0) player.VMn = win.Math.max(0, player.VMn - mV);
                if (MWm === 0) nVw(wv, player, 0);
                var mMW = (player.state >> 5) & 1;
                if (mMW === 1) player.nWM = 1 + (player.nWM + (mV % 300000));
                else player.nWM = 0;
                var vW = 0;
                if (player.nWM > 0) {
                    wN.WM(wv.Nn[1 + (win.Math.floor(player.nWM / 500) % 3)], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                    var mMW = wv.mMW[win.Math.floor(player.nWM / 50) % wv.mMW.length];
                    if (mMW !== 0) wN.WM(mMW, (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                } else wN.WM(wv.Nn[0], (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
                if (player.VMn > 0) containeropenic(player, Wv, wM);
            };;
    
            function NNWnW(player) {
                Mm.globalAlpha = WNW.mWV.wMn(player.nWM / 500);
                player.mNW = (player.mNW + mV) % 1000;
                for (var place = 0; place < 3; place++) {
                    var Vw = (player.mNW + (place * 333)) % 1000;
                    var Nm = 1 + (0.15 * ((Vw < 500) ? (Vw / 500) : (1 - ((Vw - 500) / 500))));
                    wN.WM(NWWWW[place], (wvm + player.x) + wNWWn[place], (NNw + player.y) + WVNvv[place], 0, 0, 0, Nm);
                }
                player.NnW = (player.NnW + mV) % 5000;
                var Vw = player.NnW;
                var Nm = 1 + (0.15 * ((Vw < 2500) ? (Vw / 2500) : (1 - ((Vw - 2500) / 2500))));
                wN.WM(NWWWW[3], (wvm + player.x) + wNWWn[3], (NNw + player.y) + WVNvv[3], 0, 0, 0, Nm);
                Mm.globalAlpha = 1;
            };;
    
            // campfire and fire - container
            function nmVnM(wv, player, Wv, wM, WN, Nm) {
                
                var MWm = (player.state >> 4) & 1;
                if (MWm === 1) player.VMn = win.Math.min(500, player.VMn + mV);
                else if (player.VMn > 0) player.VMn = win.Math.max(0, player.VMn - mV);
                if (MWm === 0) nVw(wv, player, 0);
                wN.WM(wv.Nn, (wvm + player.x) + Wv, (NNw + player.y) + wM, WN * Mvv, 0, 0, Nm);
    
                var mMW = (player.state >> 5) & 1;
                if (mMW === 1) player.nWM = win.Math.min(500, player.nWM + mV);
                else if (player.nWM > 0) player.nWM = win.Math.max(0, player.nWM - mV);
                if (player.nWM > 0) WvnvV[wVVMw++] = player;
                if (player.VMn > 0) containeropenic(player, Wv, wM);
            };;
    
            function nVmNm(player) {
                var W = VVM[nnMnw].vVwMW;
                var mVn = win.Math.floor(player.Mnm / 70);
                if (mVn < 10) {
                    if (player.Mnm === 0) {
                        if (Mw.nwNWm !== -2) Mw.nwNWm = 20;
                        audio.VnV(audio.ww.mwM, 0.7, Vwv.NWN(SERVG.ME.x, SERVG.ME.y, player.x, player.y) / 4);
                    }
                    wN.WM(W[mVn], wvm + player.x, NNw + player.y, 0, 0, 0, 1);
                }
                player.Mnm += mV;
            };;
            function renderTrees(tree){
                Mm.beginPath();
                Mm.arc(tree.x, tree.y, 20, 2 * win.Math.PI, false);
                Mm.stroke();
            }
            function VVNmv(player) {
                NwV[player.place][player.vv].NMn = MNW;
                NwV[player.place][player.vv].wMV = player.mysocketid;
                NwV[player.place][player.vv].nww = win.undefined;
                var WwMWW = nnv[(player.nNN >> 5) & 31];
                var vV = WwMWW.type[(player.nNN >> 10) & 7];
                var Nm = 1;
                if (player.vwW !== 0) {
                    if (player.wmm === 0) {
                        if ((WwMWW.destroyaudio !== 0) && (WMnvM[WwMWW.destroyaudio] === 0)) {
                            audio.VnV(audio.ww.damage[WwMWW.destroyaudio], 1, Vwv.NWN(SERVG.ME.x, SERVG.ME.y, player.x, player.y) / 2.5);
                            WMnvM[WwMWW.destroyaudio] = 1;
                        }
                        vNwNM(player, WwMWW.NWm, vV.Mwm, vV.NVm);
                    }
                    player.wmm += mV;
                    var vW = win.Math.max(0, WNW.mWV.VnvVv(1 - (player.wmm / 300)));
                    Mm.globalAlpha = vW;
                    Nm = win.Math.min(1 + (0.35 * (1 - vW)), 1.35);
                } else if (player.Mnm < 700) {
                    if ((player.Mnm === 0) && (vV.Vmw !== win.undefined)) {
                        if (WMWvN === 0) player.Vw = win.Math.floor(win.Math.random() * 6000);
                        else {
                            player.mNW = win.Math.floor(win.Math.random() * 6000);
                            player.Vw = 3000;
                        }
                    }
                    var vW = win.Math.min(1, WNW.mWV.VnvVv(player.Mnm / 700));
                    Mm.globalAlpha = vW;
                    Nm = (0.5 * vW) + 0.5;
                }
                if ((player.state & 2) === 2) {
                    if ((WwMWW.impactaudio !== 0) && (WMnvM[WwMWW.impactaudio] === 0)) {
                        audio.VnV(audio.ww.damage[WwMWW.impactaudio], 1, Vwv.NWN(SERVG.ME.x, SERVG.ME.y, player.x, player.y) / 2.8);
                        WMnvM[WwMWW.impactaudio] = 1;
                    }
                    player.Mmm = 250;
                    if (player.nMW <= 0) player.nMW = 300;
                    player.WvN = (WNVNM * (player.nNN & 31)) / 31;
                    player.state &= ~2;
                    vNwNM(player, WwMWW.NWm, vV.Mwm, 1);
                }
                var Wv = 0;
                var wM = 0;
                if (player.Mmm > 0) {
                    var Mmm = (player.Mmm > 200) ? ((20 * (250 - player.Mmm)) / 50) : ((20 * player.Mmm) / 200);
                    Wv = win.Math.cos(player.WvN) * Mmm;
                    wM = win.Math.sin(player.WvN) * Mmm;
                    player.Mmm -= mV;
                }
                if (((player.Vw === 3000) && (WMWvN !== 0)) && (player.Mmm === 0)) {
                    wN.WM(vV.MnWmV, (wvm + player.x) + Wv, (NNw + player.y) + wM, player.angle, 0, 0, Nm);
                    if (player.vwW !== 0) {
                        if (player.wmm > 300) player.vwW = 2;
                        Mm.globalAlpha = 1;
                    } else if (player.Mnm < 700) {
                        player.Mnm += mV;
                        Mm.globalAlpha = 1;
                    }
                    return;
                }
                wN.WM(vV.W, (wvm + player.x) + Wv, (NNw + player.y) + wM, player.angle, 0, 0, Nm);
                if (vV.Vmw !== win.undefined) {
                    Wv = 0;
                    wM = 0;
                    if (player.nMW > 0) {
                        var Mmm = (player.nMW > 250) ? (10 * WNW.mWV.wWM((300 - player.nMW) / 250)) : (10 * WNW.mWV.wMn(player.nMW / 250));
                        Wv = win.Math.cos(player.WvN) * Mmm;
                        wM = win.Math.sin(player.WvN) * Mmm;
                        player.nMW -= mV;
                    }
                    if (WMWvN === 0) {
                        if (player.mNW > 0) player.mNW = win.Math.max(0, player.mNW - mV);
                        else player.Vw += mV;
                        if (player.Vw > 6000) player.Vw = 0;
                        if (player.Vw > 3000) Nm += (0.025 * (player.Vw - 3000)) / 3000;
                        else Nm += 0.025 - ((0.025 * player.Vw) / 3000);
                    } else {
                        if (player.mNW === 0) player.mNW = player.Vw;
                        if (player.Vw > 6000) player.Vw = 0;
                        if (player.Vw > 3000) {
                            player.Vw = win.Math.max(3000, player.Vw - mV);
                            Nm += (0.025 * (player.Vw - 3000)) / 3000;
                        } else if (player.Vw < 3000) {
                            player.Vw = win.Math.min(3000, player.Vw + mV);
                            Nm += 0.025 - ((0.025 * player.Vw) / 3000);
                        }
                    }
                    wN.WM(vV.Vmw, (wvm + player.x) + Wv, (NNw + player.y) + wM, player.angle, 0, 0, Nm);
                }
                if (player.vwW !== 0) {
                    if (player.wmm > 300) player.vwW = 2;
                    Mm.globalAlpha = 1;
                } else if (player.Mnm < 700) {
                    player.Mnm += mV;
                    Mm.globalAlpha = 1;
                }
            };;
    
            function NvWVn(player) {
                NwV[player.place][player.vv].NMn = MNW;
                NwV[player.place][player.vv].wMV = player.mysocketid;
                NwV[player.place][player.vv].nww = win.undefined;
                var WN = (player.nNN >> 5) & 3;
                var wv = items[player.nNN >> 7];
                var Nm = 1;
                NwV[player.place][player.vv].nww = wv.detail.nww;
                if (player.vwW !== 0) {
                    if (player.wmm === 0) {
                        var wwM = (wv.NWm === -1) ? items[wv.id].nvN[player.nvN] : wv;
                        vNwNM(player, wwM.NWm, wwM.Mwm, 5);
                        if ((wwM.destroyaudio !== 0) && (WMnvM[wwM.destroyaudio] === 0)) {
                            audio.VnV(audio.ww.damage[wwM.destroyaudio], 1, Vwv.NWN(SERVG.ME.x, SERVG.ME.y, player.x, player.y) / 2.5);
                            WMnvM[wwM.destroyaudio] = 1;
                        }
                    }
                    player.wmm += mV;
                    var vW = win.Math.max(0, WNW.mWV.VnvVv(1 - (player.wmm / 300)));
                    Mm.globalAlpha = vW;
                    Nm = win.Math.min(1 + (0.35 * (1 - vW)), 1.35);
                }
                if ((player.state & 2) === 2) {
                    player.Mmm = 250;
                    player.WvN = (WNVNM * (player.nNN & 31)) / 31;
                    player.state &= ~2;
                    var wwM = (wv.NWm === -1) ? items[wv.id].nvN[player.nvN] : wv;
                    vNwNM(player, wwM.NWm, wwM.Mwm, 1);
                    if ((wwM.impactaudio !== 0) && (WMnvM[wwM.impactaudio] === 0)) {
                        audio.VnV(audio.ww.damage[wwM.impactaudio], 1, Vwv.NWN(SERVG.ME.x, SERVG.ME.y, player.x, player.y) / 2.8);
                        WMnvM[wwM.impactaudio] = 1;
                    }
                }
                var Wv = 0;
                var wM = 0;
                if (player.Mmm > 0) {
                    if (player.Mmm > 200) {
                        var Mmm = (20 * (250 - player.Mmm)) / 100;
                        Wv = win.Math.cos(player.WvN) * Mmm;
                        wM = win.Math.sin(player.WvN) * Mmm;
                        player.Mmm -= mV;
                    } else {
                        var Mmm = (20 * player.Mmm) / 200;
                        Wv = win.Math.cos(player.WvN) * Mmm;
                        wM = win.Math.sin(player.WvN) * Mmm;
                        player.Mmm -= mV;
                    }
                }
                wv.NM(wv, player, Wv, wM, WN, Nm);
                if (player.vwW !== 0) {
                    if (player.wmm > 300) player.vwW = 2;
                    Mm.globalAlpha = 1;
                }
            };;
    
            function WNMvm(player) {
                NwV[player.place][player.vv].NMn = MNW;
                NwV[player.place][player.vv].wMV = player.mysocketid;
                NwV[player.place][player.vv].nww = win.undefined;
                var MwMvw = 1;
                var place = player.place;
                var vv = player.vv;
                var NWvmm = (place <= 1) ? 0 : (place - 1);
                var MvmNn = (place >= (NMv - 2)) ? (NMv - 1) : (place + 1);
                var vnVVM = (vv <= 1) ? 0 : (vv - 1);
                var MnVMW = (vv >= (wWw - 2)) ? (wWw - 1) : (vv + 1);
                for (place = NWvmm; place <= MvmNn; place++) {
                    for (vv = vnVVM; vv <= MnVMW; vv++) {
                        var VMV = NwV[place][vv];
                        if (VMV.MNW !== MNW) continue;
                        var M = VMV.b;
                        var vvv = VMV.place;
                        for (var nMm = 0; nMm < vvv; nMm++) {
                            var WvW = M[nMm];
                            var vV = WvW.type;
                            var mvnVn = nNM.Wvm[vV][WvW.nnN];
                            if (((mvnVn.mysocketid !== SERVG.ME.id) || (mvnVn.id !== 0)) && (Vwv.NWN(mvnVn.x, mvnVn.y, player.x, player.y) < (VVM[vV].wwW - 4))) {
                                win.console.log("DETECTED");
                                player.rx = player.x;
                                player.ry = player.y;
                                player.wnw = player.x;
                                player.WVM = player.y;
                            }
                        }
                    }
                }
                if (player.vwW !== 0) {
                    player.wmm += mV;
                    MwMvw = win.Math.max(0, WNW.mWV.VnvVv(1 - (player.wmm / 200)));
                    Mm.globalAlpha = MwMvw;
                }
                var NWN = Vwv.MWV(player.wnw, player.WVM, player.x, player.y);
                if ((NWN < 400) || (player.vwW !== 0)) {
                    Mm.globalAlpha = win.Math.min(NWN / 400, MwMvw);
                    wN.WM(VVM[mnW].Mmvnv[player.nNN][2], wvm + player.x, NNw + player.y, player.angle, 0, 0, 1);
                    Mm.globalAlpha = MwMvw;
                    wN.WM(VVM[mnW].Mmvnv[player.nNN][1], wvm + player.x, NNw + player.y, player.angle, 0, 0, 1);
                } else wN.WM(VVM[mnW].Mmvnv[player.nNN][0], wvm + player.x, NNw + player.y, player.angle, 0, 0, 1);
                if (player.vwW !== 0) {
                    if (player.wmm > 200) player.vwW = 2;
                    Mm.globalAlpha = 1;
                }
            };;
    
            function vnnvw(player) {
                NwV[player.place][player.vv].NMn = MNW;
                NwV[player.place][player.vv].wMV = player.mysocketid;
                NwV[player.place][player.vv].nww = win.undefined;
                if (player.VMn !== 0) {
                    var ME = SERVG.socket[player.VMn];
                    if (MNW === ME.MNW) {
                        var socket = nNM.Wvm[mnW];
                        var WMv = socket[ME.nnmnv];
                        player.wnw = WMv.x;
                        player.WVM = WMv.y;
                        player.NvMVn = win.Math.cos(Vwv.angle(player.rx, player.ry, player.wnw, player.WVM));
                        player.vnmWn = win.Math.sin(Vwv.angle(player.rx, player.ry, player.wnw, player.WVM));
                    }
                }
                if ((player.vwW === 0) && (Vwv.MWV(player.x, player.y, player.wnw, player.WVM) < 1)) {
                    var NWN = Vwv.MWV(NmM, WWV, player.x, player.y);
                    if (NWN < wMVMm) {
                        wMVMm = NWN;
                        SERVG.ME.loot = player.nNN;
                        SERVG.ME.mwMvN = player.id;
                        if (SERVG.ME.mvn <= 0) SERVG.ME.mvn = 0;
                        else SERVG.ME.mwMmN = 1;
                    }
                }
                var Vw = 0;
                var vnwmm = 0;
                if (player.vwW !== 0) {
                    player.wmm += mV;
                    Mm.globalAlpha = win.Math.max(0, WNW.mWV.VnvVv(1 - (player.wmm / 800)));
                    vnwmm = player.wmm / 2400;
                } else if (player.Mnm < 500) {
                    var vW = win.Math.min(1, WNW.mWV.VnvVv(player.Mnm / 500));
                    Mm.globalAlpha = vW;
                }
                player.Vw = (player.Vw + mV) % 1500;
                if (player.Vw < 750) Vw = 0.95 + (WNW.mWV.vvw(player.Vw / 750) * 0.1);
                else Vw = 0.95 + (WNW.mWV.vvw(1 - ((player.Vw - 750) / 750)) * 0.1);
                wN.WM(VNN[player.nNN], wvm + player.x, NNw + player.y, player.angle, 0, 0, Vw - vnwmm);
                if (player.vwW !== 0) {
                    if (player.wmm > 800) player.vwW = 2;
                    Mm.globalAlpha = 1;
                } else if (player.Mnm < 500) {
                    player.Mnm += mV;
                    Mm.globalAlpha = 1;
                }
            };;
            var time = 0;
            var oldTime = 0;
            var players = [];
            var HPInterval = 0;
            function Wmnvm() {
                time = new Date().getTime();
                deltaTime = time - oldTime;

                oldTime = time;
                //TODO
                cameraX = wvm;
                cameraY = NNw;
                var inventory = SERVG.ME.inventory;
                if(teleportActive){
                    if(inventory[7] != null){
                       let itemID = inventory[7][0];
                       let itemCount = inventory[7][1];
                       let itemSlot = inventory[7][2];
                       let itemHealth = inventory[7][3];    
                        if(itemID != null){
                            //alert(itemID);
                            nv.Mmn(win.JSON.stringify([8, itemID, itemCount, itemSlot, itemHealth]));
                        }
                    }
                }
                var place = 0;
                wVVMw = 0;
                NNmMN[0] = 0;
                NNmMN[1] = 0;
                NNmMN[2] = 0;
                NNmMN[3] = 0;
                vnVmM = 12000;
                wMVMm = 12000;
                SERVG.ME.mwMmN = 0;
                SERVG.ME.MnMwn = -1;
                SERVG.ME.vWMmW = -1;
                if (SERVG.ME.mvn !== 1) SERVG.ME.mvn = -1;
                var MvW = nNM.Wvm[VVM.length];
                var Wwn = nNM.border[VVM.length];
                var WWM = Wwn.border;
                var Nvw = nNM.Wvm[nnvNN];
                var wWv = nNM.border[nnvNN];
                var wVN = wWv.border;
                for (place = 0; place < wVN; place++) VWVVw(Nvw[wWv.nnN[place]]);   //debug triggers instantly
                Nvw = nNM.Wvm[NWWvM];
                wWv = nNM.border[NWWvM];
                wVN = wWv.border;
                for (place = 0; place < wVN; place++) wVnnN(Nvw[wWv.nnN[place]]);
                for (place = 0; place < wVN; place++) NvWVn(Nvw[wWv.nnN[place]]);
                for (place = 0; place < WWM; place++) {
                    var player = MvW[Wwn.nnN[place]];
                    if (player.type === NWWvM) NvWVn(player);
                }
                if (NwMVW !== vMNWw) {
                    var NWm = nNM.Wvm[vvwvw];
                    var wWv = nNM.border[vvwvw];
                    var wVN = wWv.border;
                    for (place = 0; place < wVN; place++) mWNvV(NWm[wWv.nnN[place]]);
                    if (VwmMm.id !== -1) {
                        nNM.remove(0, VwmMm.id, VwmMm.mvN, vvwvw);
                        VwmMm.id = -1;
                    }
                }
                var Nvw = nNM.Wvm[MNvmw];
                var wWv = nNM.border[MNvmw];
                var wVN = wWv.border;
                for (place = 0; place < wVN; place++) NvWVn(Nvw[wWv.nnN[place]]);
                for (place = 0; place < WWM; place++) {
                    var player = MvW[Wwn.nnN[place]];
                    if (player.type === MNvmw) NvWVn(player);
                }
                WMmMN = nNM.Wvm[mWmnn];
                VmwNm = nNM.border[mWmnn];
                vMwWm = VmwNm.border;
                for (place = 0; place < vMwWm; place++) VVNmv(WMmMN[VmwNm.nnN[place]]);
                for (place = 0; place < WWM; place++) {
                    var player = MvW[Wwn.nnN[place]];
                    if (player.type === mWmnn) VVNmv(player);
                }
                var Nvw = nNM.Wvm[wNnwm];
                var wWv = nNM.border[wNnwm];
                var wVN = wWv.border;
                for (place = 0; place < wVN; place++) mnwmm(Nvw[wWv.nnN[place]]);
                for (place = 0; place < wVN; place++) NvWVn(Nvw[wWv.nnN[place]]);
                for (place = 0; place < WWM; place++) {
                    var player = MvW[Wwn.nnN[place]];
                    if (player.type === wNnwm) NvWVn(player);
                }
                var socket = nNM.Wvm[mnW];
                var vWM = nNM.border[mnW];
                var vvv = vWM.border;
                for (place = 0; place < vvv; place++) {
                    var mv = vWM.nnN[place];
                    var player = socket[mv];
                    var ME = SERVG.socket[player.mysocketid];
                    VvVnw(player);
                    ME.nnmnv = mv;
                    ME.MNW = MNW;
                    MmnMv(player, mv);
                }
                SERVG.ME.loot = -1;
                SERVG.ME.mwMvN = -1;
                var MMwVW = nNM.Wvm[WmVMw];
                var vmwvW = nNM.border[WmVMw];
                var MVMVw = vmwvW.border;
                for (place = 0; place < MVMVw; place++) vnnvw(MMwVW[vmwvW.nnN[place]]);
                for (place = 0; place < WWM; place++) {
                    var player = MvW[Wwn.nnN[place]];
                    if (player.type === WmVMw) vnnvw(player);
                }
                var Mmvnv = nNM.Wvm[VmnMw];
                var Mmwnm = nNM.border[VmnMw];
                var MNmmw = Mmwnm.border;
                for (place = 0; place < MNmmw; place++) WNMvm(Mmvnv[Mmwnm.nnN[place]]);
                for (place = 0; place < WWM; place++) {
                    var player = MvW[Wwn.nnN[place]];
                    if (player.type === VmnMw) WNMvm(player);
                }
                WMmMN = nNM.Wvm[NWvMw];
                VmwNm = nNM.border[NWvMw];
                vMwWm = VmwNm.border;
                for (place = 0; place < vMwWm; place++) VVNmv(WMmMN[VmwNm.nnN[place]]);
                for (place = 0; place < WWM; place++) {
                    var player = MvW[Wwn.nnN[place]];
                    if (player.type === NWvMw) VVNmv(player);
                }
                if (SERVG.Vnn === SERVG.VMnnw) {
                    for (place = 0; place < vvv; place++) {
                        var player = socket[vWM.nnN[place]];
                        var MNN = SERVG.socket[player.mysocketid].MNN;
                        if (MNN === 0) NvmMW(player);
                        else {
                            player.nNN = MNN - 1;
                            nMmmm(player);
                        };
                    }
                    for (place = 0; place < WWM; place++) {
                        var player = MvW[Wwn.nnN[place]];
                        if (player.type === mnW) {
                            VvVnw(player);
                            var MNN = SERVG.socket[player.mysocketid].MNN;
                            if (MNN === 0) NvmMW(player);
                            else {
                                player.nNN = MNN - 1;
                                nMmmm(player);
                            };
                        }
                    }
                } else {
                    for (place = 0; place < vvv; place++) NvmMW(socket[vWM.nnN[place]]);
                    for (place = 0; place < WWM; place++) {
                        var player = MvW[Wwn.nnN[place]];
                        if (player.type === mnW) {
                            VvVnw(player);
                            NvmMW(player);
                        }
                    }
                }
                var mnn = nNM.Wvm[MNWNM];
                var WwVvW = nNM.border[MNWNM];
                var nWwNn = WwVvW.border;
                for (place = 0; place < nWwNn; place++) nMmmm(mnn[WwVvW.nnN[place]]);
                for (place = 0; place < WWM; place++) {
                    var player = MvW[Wwn.nnN[place]];
                    if (player.type === MNWNM) nMmmm(player);
                }
                Nvw = nNM.Wvm[nnvNN];
                wWv = nNM.border[nnvNN];
                wVN = wWv.border;
                for (place = 0; place < wVN; place++) NvWVn(Nvw[wWv.nnN[place]]);
                for (place = 0; place < WWM; place++) {
                    var player = MvW[Wwn.nnN[place]];
                    if (player.type === nnvNN) NvWVn(player);
                }
                for (place = 0; place < wVVMw; place++) {
                    var wv = items[WvnvV[place].nNN >> 7];
                    wv.VvmvM(WvnvV[place]);
                    WvnvV[place] = null;
                }
                WMmMN = nNM.Wvm[MmvmN];
                VmwNm = nNM.border[MmvmN];
                vMwWm = VmwNm.border;
                for (place = 0; place < vMwWm; place++) VVNmv(WMmMN[VmwNm.nnN[place]]);
                for (place = 0; place < WWM; place++) {
                    var player = MvW[Wwn.nnN[place]];
                    if (player.type === MmvmN) VVNmv(player);
                }
                WMmMN = nNM.Wvm[MVm];
                VmwNm = nNM.border[MVm];
                vMwWm = VmwNm.border;

                for (place = 0; place < vMwWm; place++) VVNmv(WMmMN[VmwNm.nnN[place]]);
                for (place = 0; place < WWM; place++) {
                    var player = MvW[Wwn.nnN[place]];
                    if (player.type === MVm) VVNmv(player);
                }
                vVwMW = nNM.Wvm[nnMnw];
                VMnwn = nNM.border[nnMnw];
                WNnmw = VMnwn.border;
                for (place = 0; place < WNnmw; place++) nVmNm(vVwMW[VMnwn.nnN[place]]);
                for (place = 0; place < vvv; place++){
                    vWMWW(socket[vWM.nnN[place]]);
                }
                HPInterval++;
                if (SERVG.Vnn !== SERVG.VNVWN) {
                    for (place = 0; place < vvv; place++) mVwvw(socket[vWM.nnN[place]]);
                    for (place = 0; place < vvv; place++){
                        VvVNw(socket[vWM.nnN[place]]);
                        if(socket[vWM.nnN[place]].mysocketid != myID){
                            var ME = SERVG.socket[socket[vWM.nnN[place]].mysocketid];
                            var clan = SERVG.clans[ME.clan];
                            Mm.fillText(ME.nick, 500, 500);
                            if(clan != undefined){
                                if(!freinds.includes(clan.name) && !freindsNicks.includes(ME.nick)){
                                    players.push(socket[vWM.nnN[place]]);
                                }
                            } else {
                                if(!freindsNicks.includes(ME.nick)) players.push(socket[vWM.nnN[place]]);
                            }
                        } else {
                            if(HP < 100 && HPInterval > 180){
                                //nv.Mmn(win.JSON.stringify([1, wordsRanen[0]]));
                                //SERVG.socket[SERVG.ME.id].text.push(wordsRanen[0]);
                                HPInterval = 0;
                            }
                        }
                    }
                }
                if(players.length > 0) selectTarget(minDistance(players));
                players.length = 0;
                myPos.set(NmM, WWV);
                Mm.fillStyle = "#FFFF00";
                

            if(targerId > vvv){
                targerId = 0;
            }
            if(socket[vWM.nnN[targerId]].mysocketid == myID){
                targerId++;
            }
            var target = socket[vWM.nnN[targerId]];
                    var angle = radToDegress(angleTo(myX, myY, target.x, target.y));
                    if(menuActive) HackRender();
            };;
            var radius = 60;
            var targetID = -1;
            var targetOld = new Vector2(0, 0);
            var myOld = new Vector2(0, 0);
            function targetDirection(target, targetOldPos){
                let direction = new Vector2((target.x - targetOldPos.x) * accuracy, (target.y - targetOldPos.y) * accuracy);
                if(direction.x < 1 && direction.x > -1) direction.x = 0;
                if(direction.y < 1 && direction.y > -1) direction.y = 0;
                direction.x = win.Math.round(direction.x);
                direction.y = win.Math.round(direction.y);
                Mm.fillText(direction, 400, 400);
                return direction;
            }
            function myDirection(myOldPos){
                let direction = new Vector2((myPos.x - myOldPos.x) * accuracy, (myPos.y - myOldPos.y) * accuracy);
                if(direction.x < 1 && direction.x > -1) direction.x = 0;
                if(direction.y < 1 && direction.y > -1) direction.y = 0;
                direction.x = win.Math.round(direction.x);
                direction.y = win.Math.round(direction.y);
                Mm.fillText("MY = " + direction, 400, 415);
                return direction;
            }
            function dst(x1, y1, x2, y2){
                return win.Math.sqrt(win.Math.pow(x2 - x1, 2) + win.Math.pow(y2 - y1, 2));
            }
            var interaval = 0;
            function selectTarget(player){
                    if(player === null) return;
                    interaval++;
                    if(interaval > 180){
                        let r = win.Math.round(win.Math.random() * words.length);
                        if(words[r] != undefined && aimActive){
                            nv.Mmn(win.JSON.stringify([1, words[r]]));
                            SERVG.socket[SERVG.ME.id].text.push(words[r]);
                        }
                        interaval = 0;
                    }
                    Mm.fillStyle = "yellow";
                    Mm.fillText(player.mysocketid, 300, 300);
                    if(aimActive && dst(myPos.x, myPos.y, player.x, player.y) < 300) nv.srvclick();
                    harassment(player);
                    let angle = predictAngle(myPos.x, myPos.y, player.x, player.y, targetDirection(player, targetOld).x,targetDirection(player, targetOld).y, bulletS);
                    myOld.set(myPos.x, myPos.y);
                    targetOld.set(player.x, player.y);
                    angle = angle - 180;
                    aimAngle = degToRad(angle);
            }
            function minDistance(players){
                var min = 10000000;
                var player = null;
                for(var i = 0; i < players.length; i++){
                    if(dst(myPos.x, myPos.y, players[i].x, players[i].y) < min){
                        min = dst(myPos.x, myPos.y, players[i].x, players[i].y);
                        player = players[i];
                    }
                }
                return player;
            }
            function harassment(player){
                if(player.x < myPos.x){
                    direct |= 1;
                } else if (player.x > myPos.x){
                    direct |= 2;
                }
                if(player.y > myPos.y){
                    direct |= 4;
                } else if (player.y < myPos.y){
                    direct |= 8;
                }
            }
            function HackRender(){
                let height = 75;
                let aimbotHack = null;
                let teleportHack = null;
                if(aimActive){
                    height = 130;
                    aimbotHack = vM.wNm("Aimbot ON", "'Viga', sans-serif", "#FFFFFF", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#00FF00", 12);
                    aimbotSettings();

                } else {
                    aimbotHack = vM.wNm("Aimbot OFF", "'Viga', sans-serif", "#000000", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#FF0000", 12);
                }
                if(teleportActive){
                    teleportHack = vM.wNm("Teleport ON", "'Viga', sans-serif", "#FFFFFF", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#00FF00", 12);
                } else {
                    teleportHack = vM.wNm("Teleport OFF", "'Viga', sans-serif", "#000000", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#FF0000", 12);   
                }
                Mm.globalAlpha = 0.3;
                Mm.fillStyle = "#000000";
                Mm.fillRect((viewportWidth - 150), (viewportHeight - 100) - 100, 150, height);
                Mm.globalAlpha = 1;
                Mm.drawImage(aimbotHack, (viewportWidth - 150) + 10, (viewportHeight - 100 - 100) + 10, 65, 30);
                Mm.drawImage(teleportHack, (viewportWidth - 150) + 10, (viewportHeight - 200) + 35, 65, 30);
            }
            //TODO
            function aimbotSettings(){
                let aimbotSetting = vM.wNm("Aimbot Settings", "'Viga', sans-serif", "#FFFFFF", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#FF0000", 12);
                let playerSpeed = vM.wNm("Player Speed: " + playerS, "'Viga', sans-serif", "#000000", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#FFFF00", 12);
                let bulletSpeed = vM.wNm("Bullet Speed: " + bulletS, "'Viga', sans-serif", "#000000", 38, 400, win.undefined, 16, 25, win.undefined, win.undefined, win.undefined, win.undefined, "#FFFF00", 12);
                Mm.drawImage(aimbotSetting, (viewportWidth - 150) + 10, (viewportHeight - 100 - 100) + 62, 90, 30);
                Mm.drawImage(playerSpeed, (viewportWidth - 150) + 10, (viewportHeight - 100 - 100) + 85, 90, 25);
                Mm.drawImage(bulletSpeed, (viewportWidth - 150) + 10, (viewportHeight - 100 - 100) + 104, 90, 25);
            }
            function predictAngle(x, y, x1, y1, vx, vy, speed){
                let time = dst(x, y, x1, y1) / speed;
                return radToDegress(angleTo(x, y, x1 + vx * time, y1 + vy * time));
            }
            function myLine(x, y, x1, y1, lineWidth){
                Mm.lineWidth = lineWidth;
                Mm.moveTo(x, y);
                Mm.lineTo(x1, y1);
                Mm.stroke();
            }
            function trakers(player){
                myLine((myPos.x + cameraX) * mn, (myPos.y + cameraY) * mn, (player.x + cameraX) * mn, (player.y + cameraY) * mn, 2);
            }
            function angleTo(x1, y1, x2, y2){
                return win.Math.atan2(y1 - y2, x1 - x2);
            }

            function radToDegress(rad){
                var degress = rad * 180 / win.Math.PI;
                if(degress < 0){
                    return degress + 360;
                } else {
                    return degress;
                }
            }
    
            function NvwNm() {
                NNWWn = 0;
            };;
            var MmWMW;
            var vmvNw = wN.options.wWMMM;
            var nvMNv = 0;
            var wMmwW = 0;
            var NNWWn = 0;
            var VnwwM = 0;
            var WvWvM = 0;
    
            function VvWmm(mN) {
                if (WvWvM === 0) {
                    nvMNv = Mw.scale;
                    Mw.scale = 0.8;
                    wMmwW = 0;
                    NNWWn = mN;
                    VnwwM = 0;
                    WvWvM = 1;
                    vmvNw = wN.options.MNWmW / wN.options.NmwvV;
                }
            };;
    
            function nmmMm() {
                if ((NNWWn <= 0) && ((wMmwW + mV) > 1500)) {
                    WvWvM = 0;
                    wMmwW = 1500;
                } else {
                    NNWWn -= mV;
                    VnwwM += mV;
                    wMmwW = (wMmwW + mV) % 1500;
                }
                var vW = WNW.mWV.vvw(((wMmwW > 750) ? (1500 - wMmwW) : wMmwW) / 750);
                if (((NNWWn < 750) && (wMmwW > 750)) && ((1500 - wMmwW) > NNWWn)) {
                    var WmNnV = win.Math.max(0, (1500 - wMmwW) / 750);
                    vW = (0.5 * WmNnV) + (vW * (1 - 0.5));
                } else if (VnwwM > 750) vW = 0.5 + (vW * (1 - 0.5));
                var mvWMM = vW * 20;
                Mw.scale = nvMNv + vW;
                wN.options.NmwvV = wN.options.MNWmW / (vmvNw + mvWMM);
                MmWMW();
            };;
            var vvMWV = win.document.createElement('canvas');
            var vWwnm = vvMWV.getContext('2d');
    
            function nvVmw() {
                var mWN;
                var vW;
                var WvmWN = Mm;
                vW = 1 - WNW.mWV.wWM(SERVG.vnw / 1000);
                vvMWV.width = VMM.width;
                vvMWV.height = VMM.height;
                Mm = vWwnm;
                Mm.save();
                var mnV = wN.options.NmwvV / wN.options.nmWmN;
                Mm.scale(mnV, mnV);
                mWN = NWVnn;
                NWVnn = items;
                items = mWN;
                mWN = NWwVV;
                NWwVV = VNw;
                VNw = mWN;
                mWN = mwwnn;
                mwwnn = VNN;
                VNN = mWN;
                mWN = MMNMn;
                MMNMn = nnv;
                nnv = mWN;
                mWN = NMnWm;
                NMnWm = VVM;
                VVM = mWN;
                mWN = vNNVn;
                vNNVn = NWWWW;
                NWWWW = mWN;
                mWN = wwVWm;
                wwVWm = MwWmN;
                MwWmN = mWN;
                mWN = VNVwN;
                VNVwN = VVv;
                VVv = mWN;
                Mm.fillStyle = (SERVG.nVM === 0) ? "#0B2129" : "#3D5942";
                Mm.fillRect(0, 0, nvn, nwW);
                vMwNm();
                Wmnvm();
                mWN = NWVnn;
                NWVnn = items;
                items = mWN;
                mWN = NWwVV;
                NWwVV = VNw;
                VNw = mWN;
                mWN = mwwnn;
                mwwnn = VNN;
                VNN = mWN;
                mWN = MMNMn;
                MMNMn = nnv;
                nnv = mWN;
                mWN = NMnWm;
                NMnWm = VVM;
                VVM = mWN;
                mWN = vNNVn;
                vNNVn = NWWWW;
                NWWWW = mWN;
                mWN = wwVWm;
                wwVWm = MwWmN;
                MwWmN = mWN;
                mWN = VNVwN;
                VNVwN = VVv;
                VVv = mWN;
                Mm.restore();
                Mm = WvmWN;
                Mm.globalAlpha = vW;
                Mm.drawImage(vvMWV, 0, 0, nvn, nwW);
                Mm.globalAlpha = 1;
                SERVG.vnw = win.Math.max(0, SERVG.vnw - mV);
                if (SERVG.vnw === 0) SERVG.VwVMW();
            };;
    
            function wVVvW() {
                Mw.MmW += mV;
                if (WvWvM === 1) nmmMm();
                wNnvM();
                WNVmM();
                vMwNm();
                wmVNW();
                Wmnvm();    // objects
                placingobj();
                if (SERVG.vnw > 0) nvVmw();
                nNM.nVvvw();
                MNW++;
                for (var place = 0; place < wmNWm; place++) WMnvM[place] = 0;
                mn = wWWNM;
                wvwNM = nvn / mn;
                wwWnm = nwW / mn;
            };;
    
            function vVwvn(vW) {
                WMWvN = 0;
            };
    
            function wvmnm(vW) {
                clint.setItem("particles", "" + vW);
                NwMVW = vW;
            };;
            return {
                MmW: win.Date.now(),
                reset: vision,
                VMMWm: wVVvW,
                MvV: minimapfunc,
                NNMwm: mapfunc,
                MnW: wmMMm,
                VnVVN: wvvwW,
                leaderboard: WnnwN,
                inventory: mmnMw,
                vmmMn: textnumberitem,
                MnwNw: mWWmm,
                nvV: MnNVv,
                mwV: contwinfunc,
                clan: nwnwN,
                mvn: timeret,
                vMNVm: MMWWn,
                WwnNw: 0,
                nwNWm: 0,
                scale: -0.,
                wvmnm: wvmnm,
                vVwvn: vVwvn,
                VvWmm: VvWmm,
                NvwNm: NvwNm,
                VNvvM: VNvvM,
                wmn: wmn,
                nwn: nwn,
                nnmMW: 0,
                Mvw: mmwVM,
                VWN: nNMVN,
                WNv: doorfunc,
                nwWMW: mvmwV,
                WmmMm: nmVnM,
                nnvWw: NNWnW,
                vNvMW: WNvww,
                vNvnV: nVVVm,
                wNvVV: VmMwM,
                vwMnv: wnvmM,
                wMwnV: wVMmw,
                nVWmn: NNnwW,
                MWnVn: VMWWV,
                NMVvM: NWnmw,
                nwVWW: NMwnn,
                mvWww: MWMmm,
                NnMNn: wiresvis,
                VWWwm: NnNvw,
                mWmnv: wwNWM,
                NNnmv: VWwMV,
                vmMNW: landminevis,
                VnMww: dyncvis,
                WwVVm: spikevis,
                MNN: NWVWn,
                nMnNW: nVwvm,
                vnVwv: mWmNV,
                mVwvv: Wnmmm,
                mvVVM: nWnMV,
                Mvnmn: WWNMv,
                WvNvn: nvVNm,
                mMWMV: mwNmN
            };
        })();
    var nmn = (function() {
        var key_w = 0;
        var key_s = 1;
        var key_a = 2;
        var key_d = 4;
        var vMWMW = 0;
        var wMVvN = 0;
        var MnMNn = 4;
        var wWn = null;
        var vWwNw = -1;
        var VNnvM = 0;
        var Mww = [];
        var NvMvV = [];
        var MMNNn = [];
        var NWVNw = {
            place: 0,
            vv: 0
        };

        function VVvvN() {
            for (var place = 0; place < wMVvN; place++) {
                Mww[place] = [];
                for (var vv = 0; vv < vMWMW; vv++) Mww[place][vv] = 0;
            }
        };;

        function wvmnN(WVWWv, WW, vN) {
            wWn = new NnnMN.wMWWW(WVWWv);
            vMWMW = WW;
            wMVvN = vN;
            nmn.width = WW;
            nmn.height = vN;
            Mww = [];
            nmn.Mww = Mww;
            NvMvV = [];
            MMNNn = [];
            nmn.MMNNn = MMNNn;
            vWwNw = -1;
            NWVNw.place = 0;
            NWVNw.vv = 0;
            VNnvM = 0;
        };;

        function vnV(WVWWv, WW, vN, vNWmm) {
            win.console.time("Town generation");
            wvmnN(WVWWv, WW, vN);
            VVvvN();
            if (vNWmm !== win.undefined) vNWmm();
            win.console.timeEnd("Town generation");
        };;
        return {
            seed: 0,
            vnV: vnV,
            Mww: Mww,
            MMNNn: null,
            width: 0,
            height: 0
        };
    })();
    nVn = 0;
    mnW = nVn++;
    WmVMw = nVn++;
    VmnMw = nVn++;
    nnvNN = nVn++;
    wNnwm = nVn++;
    MNvmw = nVn++;
    NWWvM = nVn++;
    vvwvw = nVn++;
    MmvmN = nVn++;
    mWmnn = nVn++;
    NWvMw = nVn++;
    MVm = nVn++;
    nnMnw = nVn++;
    MNWNM = nVn++;
    VVM[mnW].update = function MwMNm(MW, Wv, wM, time) {
        if(time - MW.timeStep === 0){
            MW.speedX = 0;
            MW.speedY = 0;
            MW.velocityX = 0;
            MW.velocityY = 0;
            MW.timeStep = time;
        } else {
            let vx = (Wv - MW.x) / (time - MW.timeStep) * accuracy;
            let vy = (wM - MW.y) / (time - MW.timeStep) * accuracy;
            MW.timeStep = time;
            MW.speedX = (MW.velocityX + vx) / 2;
            MW.speedY = (MW.velocityY + vy) / 2; 
            MW.velocityX = vx;
            MW.velocityY = vy;
        }
        if (Vwv.NWN(MW.x, MW.y, Wv, wM) > 66) {
            MW.rx = Wv;
            MW.ry = wM;
            var wW = Vwv.angle(MW.rx, MW.ry, MW.wnw, MW.WVM);
            MW.NvMVn = win.Math.cos(wW);
            MW.vnmWn = win.Math.sin(wW);
        }
        MW.speed = (MW.state >> 8) / 100;
    };
    VVM[mnW].vnV = function wvwmW(MW) {
        var ME = SERVG.socket[MW.mysocketid];
        for (var place = 0; place < ME.mNWvv.length; place++) ME.mNWvv[place].mN = 0;
        for (var place = 0; place < ME.mNvwv.length; place++) ME.mNvwv[place].mN = 0;
        MW.angle = MW.MVWwV;
        if (ME.MNN > 0) {
            MW.mNW = 1;
            MW.nMW = 1;
        }
    };
    //TODO
    VVM[MNWNM].update = VVM[mnW].update;
    VVM[MNWNM].vnV = function mwmNm(MW) {
        MW.mNW = 1;
        MW.nMW = 1;
        MW.angle = MW.MVWwV;
        MW.speed = (MW.state >> 8) / 100;
    };
    VVM[WmVMw].vnV = function MVvWW(MW) {
        if ((MW.x !== MW.rx) || (MW.y !== MW.ry)) {
            MW.angle = Vwv.angle(MW.x, MW.y, MW.rx, MW.ry);
            MW.MVWwV = MW.angle;
        } else {
            MW.angle += win.Math.PI / 2;
            MW.MVWwV = MW.angle;
        }
    };
    VVM[WmVMw].update = function VmMmm(MW, Wv, wM) {
        MW.VMn = MW.state >> 8;
    };
    VVM[VmnMw].vnV = function wwwnnnm(MW) {
        MW.WvN = Vwv.angle(MW.rx, MW.ry, MW.wnw, MW.WVM);
        var Wn = MW.nNN;
        MW.speed = (MW.state >> 8) / 100;
        switch (Wn) {
            case 4:
            case 8:
                var player = nNM.vvVvm(mnW, MW.mysocketid, 0);
                if (player !== null) {
                    player.nNN = player.nNN & 255;
                    player.VMn = 0;
                }
                break;
            case 3:
                var player = nNM.vvVvm(mnW, MW.mysocketid, 0);
                if (player !== null) player.VMn = 0;
                break;
        }
    };
    VVM[VmnMw].update = function MVNWvvM(MW, Wv, wM) {
        var wW = Vwv.angle(MW.x, MW.y, MW.wnw, MW.WVM);
        var nvwVm = win.Math.PI * 2;
        var vWWMM = (((wW + nvwVm) % nvwVm) - ((MW.WvN + nvwVm) % nvwVm)) % nvwVm;
        if (win.Math.abs(vWWMM) > 0.1) {
            MW.rx = MW.x;
            MW.ry = MW.y;
            MW.wnw = MW.x;
            MW.WVM = MW.y;
        }
    };
    VVM[MmvmN].update = function VvWVm(MW, Wv, wM) {
        MW.WWwMm = MW.x;
        MW.Vmnvm = MW.y;
    };
    VVM[mWmnn].update = VVM[MmvmN].update;
    VVM[NWvMw].update = VVM[MmvmN].update;
    VVM[MVm].update = VVM[MmvmN].update;
    VVM[nnvNN].update = function VvWVm(MW, Wv, wM) {
        var WN = (MW.nNN >> 5) & 3;
        MW.nvN = (MW.state >> 5) & 63;
        MW.Vvm = MW.state >> 14;
        MW.state = MW.state & 16383;
        var wv = items[MW.nNN >> 7];
        MW.x = ((win.Math.floor(Wv / Mw.wmn) * Mw.wmn) + Mw.nwn) + wv.Wwv[WN];
        MW.y = ((win.Math.floor(wM / Mw.wmn) * Mw.wmn) + Mw.nwn) + wv.nWn[WN];
        MW.rx = MW.x;
        MW.ry = MW.y;
        MW.wnw = MW.x;
        MW.WVM = MW.y;
        MW.WWwMm = MW.x;
        MW.Vmnvm = MW.y;
        if ((wv.WNv === 1) && ((MW.state & 16) === 16)) {
            MW.WWwMm = ((win.Math.floor(MW.vv + wv.wmvvV[WN]) * Mw.wmn) + Mw.nwn) + wv.Wwv[(WN + 1) % 4];
            MW.Vmnvm = ((win.Math.floor(MW.place + wv.NVvMw[WN]) * Mw.wmn) + Mw.nwn) + wv.nWn[(WN + 1) % 4];
        }
    };
    VVM[wNnwm].update = VVM[nnvNN].update;
    VVM[MNvmw].update = VVM[nnvNN].update;
    VVM[NWWvM].update = VVM[nnvNN].update;
    try {
        Mw.WwnNw;
    } catch (vNn) {
        var Mw = {};
    }
    var WvNnv = 1;
    var WMWwm = 2;
    var Nw = 0;
    var station = {
        own: Nw++,
        firepart: Nw++,
        workbench: Nw++,
        bbq: Nw++,
        weavingmachine: Nw++,
        researchbench: Nw++,
        smelter: Nw++,
        teslabench: Nw++,
        composter: Nw++,
        agitator: Nw++,
        extractor: Nw++,
        weldingmachine: Nw++
    };
    Nw = 0;
    var objectaudio = {
        VNv: Nw++,
        wood: Nw++,
        stone: Nw++,
        stone2: Nw++,
        metal: Nw++,
        wooddes: Nw++,
        stonedes: Nw++,
        metaldes: Nw++,
        pillow: Nw++,
        pillowdes: Nw++
    };
    var audiodes = [];
    audiodes[objectaudio.wood] = "audio/wood-impact.mp3";
    audiodes[objectaudio.stone] = "audio/stone-impact2.mp3";
    audiodes[objectaudio.stone2] = "audio/stone-impact.mp3";
    audiodes[objectaudio.metal] = "audio/metal-impact2.mp3";
    audiodes[objectaudio.pillow] = "audio/pillow-impact.mp3";
    audiodes[objectaudio.wooddes] = "audio/wood-destroy3.mp3";
    audiodes[objectaudio.stonedes] = "audio/stone-destroy.mp3";
    audiodes[objectaudio.metaldes] = "audio/metal-destroy2.mp3";
    audiodes[objectaudio.pillowdes] = "audio/pillow-destroy.mp3";
    var wmNWm = audiodes.length;
    Nw = 0;
    var vWN = {
        nwv: Nw++,
        VvMVW: Nw++,
        Mwmnm: Nw++,
        cable: Nw++,
        mMwmV: Nw++
    };
    Nw = 0;
    var creatures = {
        normghoul: Nw++,
        speedghoul: Nw++,
        bombghoul: Nw++,
        radghoul: Nw++,
        armoredghoul: Nw++,
        pumpkinghoul: Nw++,
        lapabot: Nw++,
        halbot: Nw++,
        teslabot: Nw++
    };
    Nw = 0;
    var Ww = {
        skill: Nw++,
        survival: Nw++,
        clothe: Nw++,
        building: Nw++,
        tool: Nw++,
        weapon: Nw++,
        plant: Nw++,
        medicine: Nw++,
        resources: Nw++,
        cable: Nw++
    };
    Nw = 1;
    var item = {
        wood: Nw++,
        stone: Nw++,
        steel: Nw++,
        animalfat: Nw++,
        animaltendon: Nw++,
        string: Nw++,
        leather: Nw++,
        shapedmetal: Nw++,
        rawsteak: Nw++,
        cookedsteak: Nw++,
        rottensteak: Nw++,
        orange: Nw++,
        rottenorange: Nw++,
        seedorange: Nw++,
        hachet: Nw++,
        stonepickaxe: Nw++,
        steelpickaxe: Nw++,
        stoneaxe: Nw++,
        workbench: Nw++,
        spear: Nw++,
        bow: Nw++,
        pistol: Nw++,
        deserteagle: Nw++,
        shotgun: Nw++,
        ak47: Nw++,
        sniper: Nw++,
        woodenwall: Nw++,
        stonewall: Nw++,
        steelwall: Nw++,
        wooddoor: Nw++,
        stonedoor: Nw++,
        steeldoor: Nw++,
        campfire: Nw++,
        bullet9mm: Nw++,
        bulletshotgun: Nw++,
        sniperbullet: Nw++,
        medkit: Nw++,
        bandage: Nw++,
        soda: Nw++,
        mp5: Nw++,
        headscarf: Nw++,
        chapka: Nw++,
        coat: Nw++,
        gazmask: Nw++,
        gazprotection: Nw++,
        radiationsuit: Nw++,
        woodarrow: Nw++,
        campfirebbq: Nw++,
        smelter: Nw++,
        wooddoor1: Nw++,
        stonedoor1: Nw++,
        steeldoor1: Nw++,
        sulfur: Nw++,
        shapeduranium: Nw++,
        researchbench: Nw++,
        uranium: Nw++,
        weavingmachine: Nw++,
        gasoline: Nw++,
        sulfurpickaxe: Nw++,
        chest: Nw++,
        fridge: Nw++,
        woodfloor1: Nw++,
        hammer: Nw++,
        sleepingbag: Nw++,
        repairhammer: Nw++,
        nails: Nw++,
        woodfloor2: Nw++,
        smallwoodwall: Nw++,
        smallstonewall: Nw++,
        smallsteelwall: Nw++,
        MMnVW: Nw++,
        tomatosoup: Nw++,
        syringe: Nw++,
        chemicalcomponent: Nw++,
        radway: Nw++,
        tomatoseed: Nw++,
        tomato: Nw++,
        rottentomato: Nw++,
        can: Nw++,
        crossbow: Nw++,
        crossarrow: Nw++,
        nailgun: Nw++,
        sawedoff: Nw++,
        stonefloor1: Nw++,
        stonefloor2: Nw++,
        NvMvM: Nw++,
        chips: Nw++,
        rottenchips: Nw++,
        electronicpart: Nw++,
        junk: Nw++,
        wires: Nw++,
        energycell: Nw++,
        laserpistol: Nw++,
        teslabench: Nw++,
        alloys: Nw++,
        sulfuraxe: Nw++,
        landmine: Nw++,
        dynamite: Nw++,
        c4bomb: Nw++,
        joystic: Nw++,
        composter: Nw++,
        metalhelmet: Nw++,
        weldinghelmet: Nw++,
        gladiatorhelmet: Nw++,
        leatherjacket: Nw++,
        kevlarsuit: Nw++,
        SWATsuit: Nw++,
        protectivesuit: Nw++,
        tesla1: Nw++,
        tesla2: Nw++,
        woodespike: Nw++,
        lasersubmachine: Nw++,
        granade: Nw++,
        superhammer: Nw++,
        ghoulblood: Nw++,
        camouflage: Nw++,
        agitator: Nw++,
        ghouldrug: Nw++,
        mushroom: Nw++,
        mushroom2: Nw++,
        mushroom3: Nw++,
        rottenmushroom1: Nw++,
        rottenmushroom2: Nw++,
        rottenmushroom3: Nw++,
        lapadoine: Nw++,
        lapabot: Nw++,
        smallwire: Nw++,
        pumpkin: Nw++,
        rottenpumpkin: Nw++,
        ghoulseed: Nw++,
        extractor: Nw++,
        antidote: Nw++,
        antidoteflower: Nw++,
        treeseed: Nw++,
        acorn: Nw++,
        rottenacorn: Nw++,
        lasersniper: Nw++,
        halbot: Nw++,
        teslabot: Nw++,
        cable: Nw++,
        cable2: Nw++,
        cable3: Nw++,
        cable4: Nw++,
        switch: Nw++,
        orgate: Nw++,
        andgate: Nw++,
        notgate: Nw++,
        lamp: Nw++,
        cablewall: Nw++,
        autodoor: Nw++,
        platform: Nw++,
        stonecave: Nw++,
        bunkerwall: Nw++,
        mustardfloor: Nw++,
        redfloor: Nw++,
        weldingmachine: Nw++,
        cable4: Nw++,
        timer: Nw++,
        xorgate: Nw++,
        skilleye1: Nw++,
        skilleye2: Nw++,
        skilleye3: Nw++,
        builderskill1: Nw++,
        builderskill2: Nw++,
        inventoryskill1: Nw++,
        inventoryskill2: Nw++,
        inventoryskill3: Nw++,
        inventoryskill4: Nw++,
        inventoryskill5: Nw++,
        lightweightskill: Nw++
    };
    Nw = 0;
    var Mv = {
        mvnnv: Nw++,
        wWvMW: Nw++,
        wood: Nw++,
        mnVVV: Nw++,
        vWVMv: Nw++,
        stone: Nw++,
        steel: Nw++,
        animalfat: Nw++,
        animaltendon: Nw++,
        string: Nw++,
        leather: Nw++,
        shapedmetal: Nw++,
        rawsteak: Nw++,
        cookedsteak: Nw++,
        rottensteak: Nw++,
        orange: Nw++,
        rottenorange: Nw++,
        seedorange: Nw++,
        hachet: Nw++,
        stonepickaxe: Nw++,
        steelpickaxe: Nw++,
        stoneaxe: Nw++,
        workbench: Nw++,
        spear: Nw++,
        bow: Nw++,
        pistol: Nw++,
        deserteagle: Nw++,
        shotgun: Nw++,
        ak47: Nw++,
        sniper: Nw++,
        woodenwall: Nw++,
        stonewall: Nw++,
        steelwall: Nw++,
        wooddoor: Nw++,
        stonedoor: Nw++,
        steeldoor: Nw++,
        campfire: Nw++,
        bullet9mm: Nw++,
        bulletshotgun: Nw++,
        sniperbullet: Nw++,
        medkit: Nw++,
        bandage: Nw++,
        soda: Nw++,
        mp5: Nw++,
        headscarf: Nw++,
        chapka: Nw++,
        coat: Nw++,
        gazmask: Nw++,
        gazprotection: Nw++,
        radiationsuit: Nw++,
        woodarrow: Nw++,
        campfirebbq: Nw++,
        smelter: Nw++,
        wooddoor1: Nw++,
        stonedoor1: Nw++,
        steeldoor1: Nw++,
        sulfur: Nw++,
        shapeduranium: Nw++,
        researchbench: Nw++,
        uranium: Nw++,
        weavingmachine: Nw++,
        gasoline: Nw++,
        sulfurpickaxe: Nw++,
        chest: Nw++,
        fridge: Nw++,
        woodfloor1: Nw++,
        hammer: Nw++,
        sleepingbag: Nw++,
        repairhammer: Nw++,
        nails: Nw++,
        woodfloor2: Nw++,
        smallwoodwall: Nw++,
        smallstonewall: Nw++,
        smallsteelwall: Nw++,
        tomatosoup: Nw++,
        syringe: Nw++,
        chemicalcomponent: Nw++,
        radway: Nw++,
        tomatoseed: Nw++,
        tomato: Nw++,
        rottentomato: Nw++,
        can: Nw++,
        crossbow: Nw++,
        crossarrow: Nw++,
        nailgun: Nw++,
        sawedoff: Nw++,
        stonefloor1: Nw++,
        stonefloor2: Nw++,
        chips: Nw++,
        rottenchips: Nw++,
        electronicpart: Nw++,
        junk: Nw++,
        wires: Nw++,
        energycell: Nw++,
        laserpistol: Nw++,
        teslabench: Nw++,
        alloys: Nw++,
        sulfuraxe: Nw++,
        landmine: Nw++,
        dynamite: Nw++,
        c4bomb: Nw++,
        joystic: Nw++,
        composter: Nw++,
        metalhelmet: Nw++,
        weldinghelmet: Nw++,
        gladiatorhelmet: Nw++,
        leatherjacket: Nw++,
        kevlarsuit: Nw++,
        SWATsuit: Nw++,
        protectivesuit: Nw++,
        tesla1: Nw++,
        tesla2: Nw++,
        woodespike: Nw++,
        lasersubmachine: Nw++,
        granade: Nw++,
        superhammer: Nw++,
        ghoulblood: Nw++,
        camouflage: Nw++,
        agitator: Nw++,
        ghouldrug: Nw++,
        mushroom: Nw++,
        mushroom2: Nw++,
        mushroom3: Nw++,
        rottenmushroom1: Nw++,
        rottenmushroom2: Nw++,
        rottenmushroom3: Nw++,
        lapadoine: Nw++,
        lapabot: Nw++,
        smallwire: Nw++,
        pumpkin: Nw++,
        rottenpumpkin: Nw++,
        ghoulseed: Nw++,
        extractor: Nw++,
        antidote: Nw++,
        antidoteflower: Nw++,
        treeseed: Nw++,
        acorn: Nw++,
        rottenacorn: Nw++,
        lasersniper: Nw++,
        halbot: Nw++,
        teslabot: Nw++,
        cable: Nw++,
        cable2: Nw++,
        cable3: Nw++,
        cable4: Nw++,
        switch: Nw++,
        orgate: Nw++,
        andgate: Nw++,
        notgate: Nw++,
        lamp: Nw++,
        cablewall: Nw++,
        autodoor: Nw++,
        platform: Nw++,
        stonecave: Nw++,
        bunkerwall: Nw++,
        mustardfloor: Nw++,
        redfloor: Nw++,
        weldingmachine: Nw++,
        cable4: Nw++,
        timer: Nw++,
        xorgate: Nw++
    };
    Nw = 0;
    var particulesitems = {
        woodtree: Nw++,
        wood: Nw++,
        stone: Nw++,
        steel: Nw++,
        uranium: Nw++,
        sulfur: Nw++,
        leaf: Nw++,
        leaftree: Nw++,
        orange: Nw++,
        blood: Nw++,
        firepart: Nw++,
        furpart: Nw++,
        bedpart: Nw++,
        bedpart2: Nw++,
        sofapart: Nw++,
        sofapart2: Nw++,
        sofapart3: Nw++,
        toilet: Nw++,
        woodpart: Nw++,
        safepart: Nw++,
        garbagepart: Nw++,
        fridge: Nw++,
        plot: Nw++,
        barrel: Nw++,
        barrel2: Nw++,
        metalpart: Nw++,
        tomato: Nw++,
        greysteelpart: Nw++,
        bluesteelpart: Nw++,
        redsteelpart: Nw++,
        kakipart: Nw++,
        mushroom: Nw++,
        mushroom2: Nw++,
        mushroom3: Nw++,
        gold: Nw++
    };
    var adswait = [{
        src: "img/wait-ads-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/wait-ads-2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/wait-ads-3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/wait-ads-4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/wait-ads-5.png",
        W: {
            m: 0
        }
    }];
    var VNw = [];
    VNw[particulesitems.woodtree] = [];
    VNw[particulesitems.wood] = [{
        src: "img/day-particules-wood1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-wood2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-wood3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-wood4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-wood5.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.stone] = [{
        src: "img/day-particules-stone1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-stone2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-stone3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-stone4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-stone5.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.steel] = [{
        src: "img/day-particules-steel1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-steel2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-steel3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-steel4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-steel5.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.uranium] = [{
        src: "img/day-particules-uranium1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-uranium2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-uranium3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-uranium4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-uranium5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-uranium6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-uranium7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-uranium8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-uranium9.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.sulfur] = [{
        src: "img/day-particules-sulfur1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sulfur2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sulfur3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sulfur4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sulfur5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sulfur6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sulfur7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sulfur8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sulfur9.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.leaf] = [{
        src: "img/day-particules-leaf1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaf2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaf3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaf4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaf5.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.leaftree] = [{
        src: "img/day-particules-wood1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-wood3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaftree1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaftree2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaftree3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaftree4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaftree5.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.flower] = [{
        src: "img/day-particules-flower1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-flower2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-flower3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-flower4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-flower5.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.orange] = [{
        src: "img/day-particules-leaf1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaf2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaf3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaf4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaf5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaf6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaf7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaf8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-leaf9.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.blood] = [{
        src: "img/day-particules-blood1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-blood2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-blood3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-blood4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-blood5.png",
        W: {
            m: 0
        }
    }];
    var NVMWV = 380;
    VNw[particulesitems.firepart] = [{
        src: "img/day-particules-fire1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-fire2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-fire3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-fire4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-fire5.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.furpart] = [{
        src: "img/day-particules-fur1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-fur2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-fur3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-fur4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-fur5.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.bedpart] = [{
        src: "img/day-particules-bed0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-bed1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-bed2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-bed6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-wood1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-wood3.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.bedpart2] = [{
        src: "img/day-particules-bed3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-bed4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-bed5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-bed6.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-wood1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-wood3.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.sofapart] = [{
        src: "img/day-particules-sofa0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sofa1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sofa2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sofa3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sofa4.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.sofapart2] = [{
        src: "img/day-particules-sofa0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sofa1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sofa2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sofa5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sofa6.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.sofapart3] = [{
        src: "img/day-particules-sofa0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sofa1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sofa2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sofa7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-sofa8.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.toilet] = [{
        src: "img/day-particules-toilet0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-toilet1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-toilet2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-toilet3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-toilet4.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.woodpart] = [{
        src: "img/day-particules-woodlight0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-woodlight1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-woodlight2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-woodlight3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-woodlight4.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.safepart] = [{
        src: "img/day-particules-safe0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-safe1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-safe2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-safe3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-safe4.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.garbagepart] = [{
        src: "img/day-particules-garbage0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-garbage1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-garbage2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-garbage3.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.fridge] = [{
        src: "img/day-particules-fridge0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-fridge1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-fridge2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-fridge3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-fridge4.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.plot] = [{
        src: "img/day-particules-plot0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-plot1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-plot2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-plot3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-wood1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-wood3.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.barrel] = [{
        src: "img/day-particules-barel0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-barel1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-barel2.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.barrel2] = [{
        src: "img/day-particules-barel3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-barel4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-barel5.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.metalpart] = [{
        src: "img/day-particules-metal0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-metal1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-metal2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-metal3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-metal4.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.tomato] = [{
        src: "img/day-particules-tomato0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-tomato1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-tomato2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-tomato3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-tomato4.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.bluesteelpart] = [{
        src: "img/day-particules-blue-steel0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-blue-steel1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-blue-steel2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-blue-steel3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-blue-steel4.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.greysteelpart] = [{
        src: "img/day-particules-grey-steel0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-grey-steel1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-grey-steel2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-grey-steel3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-grey-steel4.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.redsteelpart] = [{
        src: "img/day-particules-red-steel0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-red-steel1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-red-steel2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-red-steel3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-red-steel4.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.kakipart] = [{
        src: "img/day-particules-kaki0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-kaki1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-kaki2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-kaki3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-kaki4.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.mushroom] = [{
        src: "img/day-particules-mushroom4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-mushroom5.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-mushroom6.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.mushroom2] = [{
        src: "img/day-particules-mushroom1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-mushroom2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-mushroom3.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.mushroom3] = [{
        src: "img/day-particules-mushroom7.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-mushroom8.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-mushroom9.png",
        W: {
            m: 0
        }
    }];
    VNw[particulesitems.gold] = [{
        src: "img/day-particules-gold0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-gold1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-particules-gold2.png",
        W: {
            m: 0
        }
    }];

    function vn(Mwv, WnmmM, nww, WVn, mm, MWW, vMN, WnNmW, wNvMv) {
        this.name = Mwv;
        this.description = WnmmM;
        if (WVn !== win.undefined) this.WVn = WVn;
        if (mm !== win.undefined) this.stack = mm;
        if (MWW !== win.undefined) {
            this.MWW = [];
            this.NMMmV = [];
            for (var place = 0; place < MWW.length; place++) {
                this.MWW[place] = MWW[place][0];
                this.NMMmV[place] = MWW[place][1];
            }
        }
        if (nww !== win.undefined) this.nww = nww;
        else this.nww = -1;
        if (vMN !== win.undefined) this.level = vMN;
        else this.level = -1;
        if (WnNmW !== win.undefined) this.WnNmW = WnNmW;
        else this.WnNmW = -1;
        if (wNvMv !== win.undefined) this.wNvMv = wNvMv;
        else this.wNvMv = 1;
    };;
    var items = [{
        src: [],
        W: []
    }, {
        id: item.wood,
        img: {
            src: ["img/inv-wood-out.png", "img/inv-wood-in.png", "img/inv-wood-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Wood", "Found in trees, or on the ground."),
        stack: 255,
        loot: Mv.wood,
        mW: 10
    }, {
        id: item.stone,
        img: {
            src: ["img/inv-stone-out.png", "img/inv-stone-in.png", "img/inv-stone-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Stone", "Find it on the ground or on the rock.", Ww.resources, [], 0, [
            [station.extractor, 80000]
        ]),
        wwnWm: 50,
        MwMvv: 200,
        stack: 255,
        loot: Mv.stone,
        mW: 14
    }, {
        id: item.steel,
        img: {
            src: ["img/inv-steel-out.png", "img/inv-steel-in.png", "img/inv-steel-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Iron", "Melt it on a Firepit or a Smelter", Ww.resources, [], 0, [
            [station.extractor, 120000]
        ]),
        wwnWm: 4,
        MwMvv: 8,
        stack: 255,
        loot: Mv.steel,
        mW: 28
    }, {
        id: item.animalfat,
        img: {
            src: ["img/inv-animal-fat-out.png", "img/inv-animal-fat-in.png", "img/inv-animal-fat-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Animal Fat", "Useful to craft bullet and clothes"),
        stack: 255,
        loot: Mv.animalfat,
        mW: 32
    }, {
        id: item.animaltendon,
        img: {
            src: ["img/inv-animal-tendon-out.png", "img/inv-animal-tendon-in.png", "img/inv-animal-tendon-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Animal Tendon", "Useful to make string"),
        stack: 255,
        loot: Mv.animaltendon,
        mW: 100
    }, {
        id: item.string,
        img: {
            src: ["img/inv-string-out.png", "img/inv-string-in.png", "img/inv-string-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("String", "Useful to craft many items.", Ww.survival, [
            [item.animaltendon, 2]
        ], 1, [
            [station.workbench, 20000]
        ]),
        stack: 255,
        loot: Mv.string
    }, {
        id: item.leather,
        img: {
            src: ["img/inv-leather-boar-out.png", "img/inv-leather-boar-in.png", "img/inv-leather-boar-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Leather", "Useful to make clothes"),
        stack: 255,
        loot: Mv.leather,
        mW: 32
    }, {
        id: item.shapedmetal,
        img: {
            src: ["img/inv-shaped-metal-out.png", "img/inv-shaped-metal-in.png", "img/inv-shaped-metal-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Shaped Metal", "To craft improved items.", Ww.resources, [
            [item.steel, 2]
        ], 1, [
            [station.smelter, 3000],
            [station.bbq, 30000]
        ]),
        stack: 255,
        loot: Mv.shapedmetal
    }, {
        id: item.rawsteak,
        img: {
            src: ["img/inv-raw-steak-out.png", "img/inv-raw-steak-in.png", "img/inv-raw-steak-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Raw Steak", "#Vegan"),
        stack: 10,
        loot: Mv.rawsteak,
        vWVMV: 15,
        nNmmM: item.rottensteak,
        mnw: 12,     //  STATS (damage/food/energy stats)
        wait: 5,
        mW: 28
    }, {
        id: item.cookedsteak,
        img: {
            src: ["img/inv-cooked-steak-out.png", "img/inv-cooked-steak-in.png", "img/inv-cooked-steak-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Cooked Steak", "Rare or medium?", Ww.survival, [
            [item.rawsteak, 1]
        ], 1, [
            [station.firepart, 20000],
            [station.bbq, 10000]
        ]),
        stack: 10,
        loot: Mv.cookedsteak,
        wait: 5,
        vWVMV: 3,
        nNmmM: item.rottensteak,
        mnw: 13     //  STATS (damage/food/energy stats)
    }, {
        id: item.rottensteak,
        img: {
            src: ["img/inv-rotten-steak-out.png", "img/inv-rotten-steak-in.png", "img/inv-rotten-steak-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        stack: 10,
        loot: Mv.rottensteak,
        wait: 5,
        mnw: 14,    //  STATS (damage/food/energy stats)
        detail: new vn("Rotten Steak", "Don't eat that."),
        mW: 20
    }, {
        id: item.orange,
        img: {
            src: ["img/inv-orange-out.png", "img/inv-orange-in.png", "img/inv-orange-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Orange", "A little hungry?"),
        stack: 20,
        loot: Mv.orange,
        wait: 5,
        vWVMV: 10,
        nNmmM: item.rottenorange,
        mnw: 15,    //  STATS (damage/food/energy stats)
        mW: 24
    }, {
        id: item.rottenorange,
        img: {
            src: ["img/inv-rotten-orange-out.png", "img/inv-rotten-orange-in.png", "img/inv-rotten-orange-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Rotten Orange", "Go on, have a bite!", Ww.plant, [
            [item.orange, 4]
        ], 8, [
            [station.composter, 40000]
        ]),
        stack: 20,
        loot: Mv.rottenorange,
        wait: 5,
        mnw: 16,     //  STATS (damage/food/energy stats)
        mW: 20
    }, {
        id: item.seedorange,
        img: {
            src: ["img/inv-orange-seed-out.png", "img/inv-orange-seed-in.png", "img/inv-orange-seed-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Orange Seed", "Fill up on Vitame C?", Ww.plant, [
            [item.orange, 4]
        ], 1, [
            [station.firepart, 20000],
            [station.bbq, 15000]
        ]),
        stack: 40,
        loot: Mv.seedorange,
        MmwnN: Mv.orange,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [30, 30, 30, 30],
        height: [30, 30, 30, 30],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [35, 35, 35, 35],
        Nmn: [35, 35, 35, 35],
        putableimg: {
            src: "img/day-clear-blue-plant2-orange.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-plant2-orange.png",
            W: {
                m: 0
            }
        },
        WNv: 0,
        mwM: 0,
        behavior: vWN.VvMVW,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.MWnVn,
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.VNv,
        Nn: [{
            src: "img/day-plant0-orange.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-plant1-orange.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-plant2-orange.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-plant3-orange.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-plant4-orange.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.orange,
        Mwm: 68,
        WmW: ((5 * 8) * 60) * 1000,
        health: 250,
        mW: 0
    }, {
        id: item.hachet,
        img: {
            src: ["img/inv-hachet-out.png", "img/inv-hachet-in.png", "img/inv-hachet-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Hatchet", "Harvest Wood and Stone.", Ww.tool, [
            [item.wood, 10],   // [ID of item, count]  - its just for crafting
            [item.stone, 2]
        ], 1, [
            [station.own, 5000], // speed of crafting - just visible dont work practically
            [station.workbench, 10000]
        ]),
        mnw: 3,     //  STATS (damage/food/energy stats)
        stack: 1,
        loot: Mv.hachet,     // id to image with scale etc
        wait: 10
    }, {
        id: item.stonepickaxe,
        img: {
            src: ["img/inv-stone-pickaxe-out.png", "img/inv-stone-pickaxe-in.png", "img/inv-stone-pickaxe-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Stone Pickaxe", "Mine Stone and Iron.", Ww.tool, [
            [item.wood, 100],
            [item.stone, 30]
        ], 1, [
            [station.workbench, 30000]
        ]),
        mnw: 1,     //  STATS (damage/food/energy stats)
        stack: 1,
        loot: Mv.stonepickaxe,
        wait: 10
    }, {
        id: item.steelpickaxe,
        img: {
            src: ["img/inv-steel-pickaxe-out.png", "img/inv-steel-pickaxe-in.png", "img/inv-steel-pickaxe-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Metal Pickaxe", "Mine also Sulfur", Ww.tool, [
            [item.stone, 150],
            [item.shapedmetal, 6]
        ], 1, [
            [station.researchbench, 60000]
        ], 6),
        mnw: 2,     //  STATS (damage/food/energy stats)
        stack: 1,
        loot: Mv.steelpickaxe,
        wait: 10
    }, {
        id: item.stoneaxe,
        img: {
            src: ["img/inv-stone-axe-out.png", "img/inv-stone-axe-in.png", "img/inv-stone-axe-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Metal Axe", "Harvest a lot of Wood", Ww.tool, [
            [item.wood, 150],
            [item.shapedmetal, 7]
        ], 1, [
            [station.researchbench, 80000]
        ], 5),
        mnw: 4,     //  STATS (damage/food/energy stats)
        stack: 1,
        loot: Mv.stoneaxe,
        wait: 10
    }, {
        id: item.workbench,
        img: {
            src: ["img/inv-workbench-out.png", "img/inv-workbench-in.png", "img/inv-workbench-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Workbench", "Allow you to make new items.", Ww.survival, [
            [item.wood, 40],
            [item.stone, 20]
        ], 1, [
            [station.own, 15000],
            [station.workbench, 15000]
        ]),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 0,
        z: 1,
        MWW: station.workbench,
        stack: 255,
        loot: Mv.workbench,
        wait: 10,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-workbench.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-workbench.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.nwWMW,
        NnN: 16,
        wwN: {
            src: "img/e-workbench.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.wood,
        destroyaudio: objectaudio.wooddes,
        Nn: {
            src: "img/day-workbench.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.wood,
        Mwm: 80,
        WmW: 315360000000,
        health: 250,
        mW: 0
    }, {
        id: item.spear,
        img: {
            src: ["img/inv-wood-spear-out.png", "img/inv-wood-spear-in.png", "img/inv-wood-spear-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Wood Spear", "Don't forget to pick it up.", Ww.weapon, [
            [item.wood, 70]
        ], 1, [
            [station.own, 15000],
            [station.workbench, 20000]
        ]),
        mnw: 5,     //  STATS (damage/food/energy stats)
        stack: 1,
        loot: Mv.spear,
        wait: 10
    }, {
        id: item.bow,
        img: {
            src: ["img/inv-wood-bow-out.png", "img/inv-wood-bow-in.png", "img/inv-wood-bow-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Wood Bow", "Where are the cowboys?", Ww.weapon, [
            [item.wood, 60],
            [item.animaltendon, 2]
        ], 1, [
            [station.own, 35000],
            [station.workbench, 50000]
        ]),
        vMv: item.woodarrow,
        mMVwm: 1,
        mnw: 6,     //  STATS (damage/food/energy stats)
        stack: 1,
        loot: Mv.bow,
        wait: 10
    }, {
        id: item.pistol,
        img: {
            src: ["img/inv-9mm-out.png", "img/inv-9mm-in.png", "img/inv-9mm-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("9MM", "I hope you know how to aim.", Ww.weapon, [
            [item.junk, 6],
            [item.shapedmetal, 9]
        ], 1, [
            [station.researchbench, 160000]
        ], 7),
        mnw: 8,     //  STATS (damage/food/energy stats)
        vMv: item.bullet9mm,
        stack: 1,
        loot: Mv.pistol,
        wait: 10
    }, {
        id: item.deserteagle,
        img: {
            src: ["img/inv-desert-eagle-out.png", "img/inv-desert-eagle-in.png", "img/inv-desert-eagle-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Desert Eagle", "Pretty useful for self-defense.", Ww.weapon, [
            [item.alloys, 4],
            [item.shapedmetal, 2]
        ], 1, [
            [station.researchbench, 180000]
        ], 9, item.pistol),
        mnw: 9,     //  STATS (damage/food/energy stats)
        vMv: item.bullet9mm,
        stack: 1,
        loot: Mv.deserteagle,
        wait: 10
    }, {
        id: item.shotgun,
        img: {
            src: ["img/inv-shotgun-out.png", "img/inv-shotgun-in.png", "img/inv-shotgun-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Shotgun", "He's dead now, don't you think?", Ww.weapon, [
            [item.alloys, 6],
            [item.shapedmetal, 6]
        ], 1, [
            [station.researchbench, 200000]
        ], 11),
        mnw: 7,     //  STATS (damage/food/energy stats)
        vMv: item.bulletshotgun,
        stack: 1,
        loot: Mv.shotgun,
        wait: 10
    }, {
        id: item.ak47,
        img: {
            src: ["img/inv-ak47-out.png", "img/inv-ak47-in.png", "img/inv-ak47-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("AK47", "Revolution time", Ww.weapon, [
            [item.alloys, 14],
            [item.shapedmetal, 8]
        ], 1, [
            [station.researchbench, 180000]
        ], 12, item.mp5),
        mnw: 10,     //  STATS (damage/food/energy stats)
        vMv: item.sniperbullet,
        stack: 1,
        loot: Mv.ak47,
        wait: 10
    }, {
        id: item.sniper,
        img: {
            src: ["img/inv-sniper-out.png", "img/inv-sniper-in.png", "img/inv-sniper-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Sniper", "For the very angry shy", Ww.weapon, [
            [item.alloys, 10],
            [item.shapedmetal, 8]
        ], 1, [
            [station.researchbench, 180000]
        ], 13),
        mnw: 11,     //  STATS (damage/food/energy stats)
        vMv: item.sniperbullet,
        stack: 1,
        loot: Mv.sniper,
        wait: 10
    }, {
        id: item.woodenwall,
        img: {
            src: ["img/inv-wood-wall-out.png", "img/inv-wood-wall-in.png", "img/inv-wood-wall-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Wooden Wall", "Protected from the wind.", Ww.building, [
            [item.wood, 20]    // [ID(wood), count]
        ], 1, [
            [station.workbench, 10000]
        ]),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 1,
        z: 1,
        stack: 255,
        loot: Mv.woodenwall,
        wait: 10,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-wood-wall.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-wood-wall.png",
            W: {
                m: 0
            }
        },
        Mvw: 1,
        vVwVM: item.woodenwall,
        VWN: 0,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.Mvw,
        MmvNw: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        WVW: [{
            src: "img/day-wood-wall-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.wood,
        destroyaudio: objectaudio.wooddes,
        Nn: [{
            src: "img/day-wood-wall0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall7.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall8.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall9.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall10.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall11.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall12.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall13.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall14.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall15.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall16.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall17.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall18.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall19.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall20.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall21.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall22.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall23.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall24.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall25.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall26.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall27.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall28.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall29.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall30.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall31.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall32.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall33.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall34.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall35.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall36.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall37.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall38.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall39.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall40.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall41.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall42.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall43.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall44.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall45.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-wall46.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.wood,
        Mwm: 80,
        WmW: 315360000000,
        health: 3000,
        mW: 0
    }, {
        id: item.stonewall,
        img: {
            src: ["img/inv-stone-wall-out.png", "img/inv-stone-wall-in.png", "img/inv-stone-wall-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Stone Wall", "Saved the 3 little pigs.", Ww.building, [
            [item.stone, 20]
        ], 1, [
            [station.workbench, 15000]
        ], 3),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 1,
        z: 1,
        stack: 255,
        loot: Mv.stonewall,
        wait: 10,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-stone-wall.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-stone-wall.png",
            W: {
                m: 0
            }
        },
        Mvw: 1,
        vVwVM: item.stonewall,
        VWN: 0,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.Mvw,
        MmvNw: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        WVW: [{
            src: "img/day-stone-wall-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.stone,
        destroyaudio: objectaudio.stonedes,
        Nn: [{
            src: "img/day-stone-wall0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall7.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall8.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall9.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall10.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall11.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall12.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall13.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall14.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall15.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall16.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall17.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall18.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall19.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall20.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall21.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall22.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall23.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall24.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall25.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall26.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall27.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall28.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall29.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall30.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall31.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall32.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall33.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall34.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall35.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall36.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall37.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall38.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall39.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall40.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall41.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall42.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall43.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall44.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall45.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-wall46.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.stone,
        Mwm: 80,
        WmW: 315360000000,
        health: 7000,
        mW: 0
    }, {
        id: item.steelwall,
        img: {
            src: ["img/inv-steel-wall-out.png", "img/inv-steel-wall-in.png", "img/inv-steel-wall-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Metal Wall", "Afraid we'll find you?", Ww.building, [
            [item.shapedmetal, 3]
        ], 1, [
            [station.researchbench, 20000]
        ], 6, item.stonewall),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 1,
        z: 1,
        stack: 255,
        loot: Mv.steelwall,
        wait: 10,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-stone-wall.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-stone-wall.png",
            W: {
                m: 0
            }
        },
        Mvw: 1,
        vVwVM: item.steelwall,
        VWN: 0,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.Mvw,
        MmvNw: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        WVW: [{
            src: "img/day-steel-wall-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [{
            src: "img/day-steel-wall0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall7.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall8.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall9.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall10.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall11.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall12.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall13.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall14.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall15.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall16.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall17.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall18.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall19.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall20.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall21.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall22.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall23.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall24.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall25.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall26.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall27.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall28.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall29.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall30.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall31.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall32.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall33.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall34.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall35.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall36.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall37.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall38.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall39.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall40.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall41.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall42.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall43.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall44.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall45.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-wall46.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.steel,
        Mwm: 80,
        WmW: 315360000000,
        health: 15000,
        mW: 0
    }, {
        id: item.wooddoor,
        img: {
            src: ["img/inv-wood-door-out.png", "img/inv-wood-door-in.png", "img/inv-wood-door-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Wooden Low Door", "You can shoot through it.", Ww.building, [
            [item.wood, 40]
        ], 1, [
            [station.workbench, 15000]
        ]),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 0,
        z: 0,
        stack: 255,
        loot: Mv.wooddoor,
        wait: 10,
        mN: 600,
        width: [100, 35, 100, 35],
        height: [35, 100, 35, 100],
        Wwv: [0, -30, 0, 30],
        nWn: [30, 0, -30, 0],
        wwn: [0, 0, 0, 65],
        Nmn: [65, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-wood-door.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-wood-door.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 1,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        angle: win.Math.PI / 2,
        NVvMw: [1, 0, -1, 0],
        wmvvV: [0, -1, 0, 1],
        vVNvM: [0, 0, 65, 0],
        NnmvM: [0, 0, 0, 65],
        wnwMW: [35, 100, 35, 100],
        VvvNw: [100, 35, 100, 35],
        VvMvv: 6,
        MmVVV: 46,
        NM: Mw.WNv,
        NnN: 15,
        wwN: {
            src: "img/e-opendoor.png",
            W: {
                m: 0
            }
        },
        mMnmM: {
            src: "img/e-closedoor.png",
            W: {
                m: 0
            }
        },
        WVW: [{
            src: "img/day-wood-door-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-door-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-door-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.wood,
        destroyaudio: objectaudio.wooddes,
        Nn: {
            src: "img/day-wood-door.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.wood,
        Mwm: 55,
        WmW: 315360000000,
        health: 2000,
        mW: 0
    }, {
        id: item.stonedoor,
        img: {
            src: ["img/inv-stone-door-out.png", "img/inv-stone-door-in.png", "img/inv-stone-door-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Stone Low Door", "You can shoot through it.", Ww.building, [
            [item.stone, 40]
        ], 1, [
            [station.workbench, 15000]
        ], 3),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 0,
        z: 0,
        stack: 255,
        loot: Mv.stonedoor,
        wait: 10,
        mN: 600,
        width: [100, 35, 100, 35],
        height: [35, 100, 35, 100],
        Wwv: [0, -30, 0, 30],
        nWn: [30, 0, -30, 0],
        wwn: [0, 0, 0, 65],
        Nmn: [65, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-stone-door.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-stone-door.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 1,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        angle: win.Math.PI / 2,
        NVvMw: [1, 0, -1, 0],
        wmvvV: [0, -1, 0, 1],
        vVNvM: [0, 0, 65, 0],
        NnmvM: [0, 0, 0, 65],
        wnwMW: [35, 100, 35, 100],
        VvvNw: [100, 35, 100, 35],
        VvMvv: 6,
        MmVVV: 46,
        NM: Mw.WNv,
        NnN: 15,
        wwN: {
            src: "img/e-opendoor.png",
            W: {
                m: 0
            }
        },
        mMnmM: {
            src: "img/e-closedoor.png",
            W: {
                m: 0
            }
        },
        WVW: [{
            src: "img/day-stone-door-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-door-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-door-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.stone,
        destroyaudio: objectaudio.stonedes,
        Nn: {
            src: "img/day-stone-door.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.stone,
        Mwm: 55,
        WmW: 315360000000,
        health: 5000,
        mW: 0
    }, {
        id: item.steeldoor,
        img: {
            src: ["img/inv-steel-door-out.png", "img/inv-steel-door-in.png", "img/inv-steel-door-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Metal Low Door", "Killing at home, for more comfort.", Ww.building, [
            [item.shapedmetal, 6]
        ], 1, [
            [station.researchbench, 30000]
        ], 6, item.stonedoor),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 0,
        z: 0,
        stack: 255,
        loot: Mv.steeldoor,
        wait: 10,
        mN: 600,
        width: [100, 35, 100, 35],
        height: [35, 100, 35, 100],
        Wwv: [0, -30, 0, 30],
        nWn: [30, 0, -30, 0],
        wwn: [0, 0, 0, 65],
        Nmn: [65, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-stone-door.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-stone-door.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 1,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        angle: win.Math.PI / 2,
        NVvMw: [1, 0, -1, 0],
        wmvvV: [0, -1, 0, 1],
        vVNvM: [0, 0, 65, 0],
        NnmvM: [0, 0, 0, 65],
        wnwMW: [35, 100, 35, 100],
        VvvNw: [100, 35, 100, 35],
        VvMvv: 6,
        MmVVV: 46,
        NM: Mw.WNv,
        NnN: 15,
        wwN: {
            src: "img/e-opendoor.png",
            W: {
                m: 0
            }
        },
        mMnmM: {
            src: "img/e-closedoor.png",
            W: {
                m: 0
            }
        },
        WVW: [{
            src: "img/day-steel-door-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-door-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-door-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: {
            src: "img/day-steel-door.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.steel,
        Mwm: 55,
        WmW: 315360000000,
        health: 10000,
        mW: 0
    }, {
        id: item.campfire,
        img: {
            src: ["img/inv-campfire-out.png", "img/inv-campfire-in.png", "img/inv-campfire-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Campfire", "Warm you when you're cold.", Ww.survival, [
            [item.wood, 30],
            [item.stone, 5]
        ], 1, [
            [station.own, 8000],
            [station.workbench, 15000]
        ]),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: 15000,
        WvV: -1,
        z: 0,
        MWW: station.firepart,
        stack: 255,
        loot: Mv.campfire,
        wait: 10,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-campfire.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-campfire.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: WvNnv,
        NM: Mw.WmmMm,
        VvmvM: Mw.nnvWw,
        NnN: 16,
        wwN: {
            src: "img/e-campfire.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.wood,
        destroyaudio: objectaudio.wooddes,
        Nn: {
            src: "img/day-campfire.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.wood,
        Mwm: 80,
        WmW: (1000 * 60) * 10,
        health: 150,
        mW: 0
    }, {
        id: item.bullet9mm,
        img: {
            src: ["img/inv-bullet-9mm-out.png", "img/inv-bullet-9mm-in.png", "img/inv-bullet-9mm-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Bullet", "For 9MM, Desert Eagle, and MP5 ", Ww.weapon, [
            [item.sulfur, 3],
            [item.shapedmetal, 3],
            [item.animalfat, 3]
        ], 30, [
            [station.researchbench, 10000]
        ], 6),
        stack: 255,
        loot: Mv.bullet9mm
    }, {
        id: item.bulletshotgun,
        img: {
            src: ["img/inv-bullet-shotgun-out.png", "img/inv-bullet-shotgun-in.png", "img/inv-bullet-shotgun-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Cartridge", "For Shotgun", Ww.weapon, [
            [item.alloys, 1],
            [item.shapedmetal, 4],
            [item.animalfat, 4]
        ], 15, [
            [station.researchbench, 10000]
        ], 10),
        stack: 255,
        loot: Mv.bulletshotgun
    }, {
        id: item.sniperbullet,
        img: {
            src: ["img/inv-bullet-sniper-out.png", "img/inv-bullet-sniper-in.png", "img/inv-bullet-sniper-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Heavy Bullet", "For Sniper, and AK47", Ww.weapon, [
            [item.alloys, 1],
            [item.shapedmetal, 4],
            [item.animalfat, 4]
        ], 30, [
            [station.researchbench, 10000]
        ], 11),
        stack: 255,
        loot: Mv.sniperbullet
    }, {
        id: item.medkit,
        img: {
            src: ["img/inv-medikit-out.png", "img/inv-medikit-in.png", "img/inv-medikit-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Medkit", "Regenerate your life.", Ww.medicine, [
            [item.string, 2],
            [item.bandage, 1],
            [item.leather, 2],
            [item.shapedmetal, 2]
        ], 1, [
            [station.researchbench, 80000]
        ], 10),
        mnw: 17,     //  STATS (damage/food/energy stats)
        stack: 2,
        loot: Mv.medkit,
        wait: 10
    }, {
        id: item.bandage,
        img: {
            src: ["img/inv-bandage-out.png", "img/inv-bandage-in.png", "img/inv-bandage-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Bandage", "To heal the boo-boos.", Ww.medicine, [
            [item.string, 1],
            [item.leather, 2]
        ], 1, [
            [station.weavingmachine, 20000]
        ]),
        mnw: 18,     //  STATS (damage/food/energy stats)
        stack: 5,
        loot: Mv.bandage,
        wait: 10
    }, {
        id: item.soda,
        img: {
            src: ["img/inv-soda-out.png", "img/inv-soda-in.png", "img/inv-soda-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Soda", "Give energy.", Ww.survival, [
            [item.ghoulblood, 1],
            [item.chemicalcomponent, 1],
            [item.can, 1]
        ], 1, [
            [station.firepart, 40000],
            [station.bbq, 40000]
        ], 5),
        mnw: 19,     //  STATS (damage/food/energy stats)
        stack: 5,
        loot: Mv.soda,
        vWVMV: 2,
        nNmmM: item.can,
        wait: 10
    }, {
        id: item.mp5,
        img: {
            src: ["img/inv-MP5-out.png", "img/inv-MP5-in.png", "img/inv-MP5-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("MP5", "Not bad.", Ww.weapon, [
            [item.alloys, 6],
            [item.shapedmetal, 6]
        ], 1, [
            [station.researchbench, 200000]
        ], 10),
        mnw: 20,     //  STATS (damage/food/energy stats)
        vMv: item.bullet9mm,
        stack: 1,
        loot: Mv.mp5,
        wait: 10
    }, {
        id: item.headscarf,
        img: {
            src: ["img/inv-headscarf-out.png", "img/inv-headscarf-in.png", "img/inv-headscarf-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Headscarf", "Warm you up.", Ww.clothe, [
            [item.string, 1],
            [item.leather, 1]
        ], 1, [
            [station.weavingmachine, 60000]
        ]),
        nwm: 1,
        stack: 1,
        loot: Mv.headscarf,
        wait: 10,
        wNV: 0.00085,
        NVw: 0,
        MvM: 0,
        mnm: 0,
        Vww: 0,
        MWw: 0,
        speed: 0
    }, {
        id: item.chapka,
        img: {
            src: ["img/inv-chapka-out.png", "img/inv-chapka-in.png", "img/inv-chapka-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Chapka", "You look like a real woodcutter.", Ww.clothe, [
            [item.string, 6],
            [item.leather, 8],
            [item.headscarf, 1]
        ], 1, [
            [station.weavingmachine, 120000]
        ], 7),
        nwm: 2,
        stack: 1,
        loot: Mv.chapka,
        wait: 10,
        wNV: 0.0017,
        NVw: 0,
        MvM: 0,
        mnm: 0,
        Vww: 0,
        MWw: 0,
        speed: 0
    }, {
        id: item.coat,
        img: {
            src: ["img/inv-coat-out.png", "img/inv-coat-in.png", "img/inv-coat-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Winter Coat", "Is the weather really that cold?", Ww.clothe, [
            [item.string, 15],
            [item.leather, 20],
            [item.chapka, 1]
        ], 1, [
            [station.weavingmachine, 180000]
        ], 9, item.chapka),
        nwm: 3,
        stack: 1,
        loot: Mv.coat,
        wait: 10,
        wNV: 0.0026,
        NVw: 0,
        MvM: 0,
        mnm: 0,
        Vww: 0,
        MWw: 0,
        speed: 0
    }, {
        id: item.gazmask,
        img: {
            src: ["img/inv-gaz-mask-out.png", "img/inv-gaz-mask-in.png", "img/inv-gaz-mask-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Radiation Mask", "Protect you from Radioactivity.", Ww.clothe, [
            [item.shapedmetal, 1],
            [item.string, 1],
            [item.leather, 2]
        ], 1, [
            [station.weavingmachine, 60000]
        ]),
        nwm: 4,
        stack: 1,
        loot: Mv.gazmask,
        wait: 10,
        wNV: 0,
        NVw: 0,
        MvM: 0,
        mnm: 0,
        Vww: 0,
        MWw: 0.009,
        speed: 0
    }, {
        id: item.gazprotection,
        img: {
            src: ["img/inv-gaz-protection-out.png", "img/inv-gaz-protection-in.png", "img/inv-gaz-protection-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Min. Radiation Suit", "Previously, on Breaking Bad.", Ww.clothe, [
            [item.alloys, 2],
            [item.shapedmetal, 2],
            [item.string, 4],
            [item.leather, 4],
            [item.gazmask, 1]
        ], 1, [
            [station.weavingmachine, 90000]
        ], 8),
        nwm: 5,
        stack: 1,
        loot: Mv.gazprotection,
        wait: 10,
        wNV: 0.0006,
        NVw: 0,
        MvM: 0,
        mnm: 0,
        Vww: 0,
        MWw: 0.016,
        speed: 0
    }, {
        id: item.radiationsuit,
        img: {
            src: ["img/inv-radiation-suit-out.png", "img/inv-radiation-suit-in.png", "img/inv-radiation-suit-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Radiation Suit", "Let's not grow a second head.", Ww.clothe, [
            [item.alloys, 6],
            [item.shapedmetal, 4],
            [item.string, 8],
            [item.leather, 20],
            [item.gazprotection, 1]
        ], 1, [
            [station.weavingmachine, 180000]
        ], 10, item.gazprotection),
        nwm: 6,
        stack: 1,
        loot: Mv.radiationsuit,
        wait: 10,
        wNV: 0,
        NVw: 0,
        MvM: 0,
        mnm: 0,
        Vww: 0,
        MWw: 0.022,
        speed: -0.01
    }, {
        id: item.woodarrow,
        img: {
            src: ["img/inv-wood-arrow-out.png", "img/inv-wood-arrow-in.png", "img/inv-wood-arrow-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Wood Arrow", "Needed to use bow.", Ww.weapon, [
            [item.wood, 40]
        ], 5, [
            [station.own, 15000],
            [station.workbench, 10000]
        ]),
        stack: 255,
        loot: Mv.woodarrow
    }, {
        id: item.campfirebbq,
        img: {
            src: ["img/inv-campfire-bbq-out.png", "img/inv-campfire-bbq-in.png", "img/inv-campfire-bbq-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Firepit", "Warm up and melt iron slowly.", Ww.survival, [
            [item.wood, 120],
            [item.stone, 20],
            [item.steel, 4]
        ], 1, [
            [station.workbench, 20000]
        ], 3),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: 20000,
        WvV: -1,
        z: 0,
        MWW: station.bbq,
        stack: 255,
        loot: Mv.campfirebbq,
        wait: 10,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-campfire-bbq.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-campfire-bbq.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: WvNnv,
        NM: Mw.WmmMm,
        VvmvM: Mw.nnvWw,
        NnN: 16,
        wwN: {
            src: "img/e-campfire-bbq.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.wood,
        destroyaudio: objectaudio.wooddes,
        Nn: {
            src: "img/day-campfire-bbq.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.wood,
        Mwm: 80,
        WmW: 315360000000,
        health: 250,
        mW: 0
    }, {
        id: item.smelter,
        img: {
            src: ["img/inv-smelter-out.png", "img/inv-smelter-in.png", "img/inv-smelter-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Smelter", "Melt iron, uranium and alloys", Ww.survival, [
            [item.shapedmetal, 6],
            [item.electronicpart, 1]
        ], 1, [
            [station.researchbench, 100000]
        ], 10),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: 42000,
        WvV: 1,
        z: 1,
        MWW: station.smelter,
        stack: 255,
        loot: Mv.smelter,
        wait: 10,
        mN: 1000,
        width: [100, 260, 100, 260],
        height: [260, 100, 260, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, -80, 0, -80],
        Nmn: [-80, 0, -80, 0],
        MMnVm: [-1, 0, -1, 0],
        nmMVw: [0, -1, 0, -1],
        putableimg: {
            src: "img/day-clear-blue-smelter.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-smelter.png",
            W: {
                m: 0
            }
        },
        MvWnM: [-20.5, -101.5, 20.5, 101.5],
        VmNMm: [101.5, -20.5, -101, 20.5],
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.vNvMW,
        NnN: 16,
        wwN: {
            src: "img/e-smelter.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [{
            src: "img/day-smelter-off.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-smelter-on.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-smelter-light-up.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-smelter-light-down.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.metalpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 3000,
        mW: 0
    }, {
        id: item.wooddoor1,
        img: {
            src: ["img/inv-wood-door1-out.png", "img/inv-wood-door1-in.png", "img/inv-wood-door1-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Wooden Door", "Let's hope it holds.", Ww.building, [
            [item.wood, 60]
        ], 1, [
            [station.workbench, 20000]
        ]),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 1,
        z: 1,
        stack: 255,
        loot: Mv.wooddoor1,
        wait: 10,
        mN: 600,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-wood-door1.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-wood-door1.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 1,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        angle: win.Math.PI,
        NVvMw: [1, -1, -1, 1],
        wmvvV: [-1, -1, 1, 1],
        vVNvM: [0, 0, 0, 0],
        NnmvM: [0, 0, 0, 0],
        wnwMW: [100, 100, 100, 100],
        VvvNw: [100, 100, 100, 100],
        VvMvv: 17,
        MmVVV: 113,
        NM: Mw.WNv,
        NnN: 15,
        wwN: {
            src: "img/e-opendoor.png",
            W: {
                m: 0
            }
        },
        mMnmM: {
            src: "img/e-closedoor.png",
            W: {
                m: 0
            }
        },
        WVW: [{
            src: "img/day-wood-door1-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-door1-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-door1-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.wood,
        destroyaudio: objectaudio.wooddes,
        Nn: {
            src: "img/day-wood-door1.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.wood,
        Mwm: 80,
        WmW: 315360000000,
        health: 2500,
        mW: 0
    }, {
        id: item.stonedoor1,
        img: {
            src: ["img/inv-stone-door1-out.png", "img/inv-stone-door1-in.png", "img/inv-stone-door1-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Stone Door", "Not too heavy to open, I hope.", Ww.building, [
            [item.stone, 60]
        ], 1, [
            [station.workbench, 20000]
        ], 3),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 1,
        z: 1,
        stack: 255,
        loot: Mv.stonedoor1,
        wait: 10,
        mN: 600,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-stone-door1.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-stone-door1.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 1,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        angle: win.Math.PI,
        NVvMw: [1, -1, -1, 1],
        wmvvV: [-1, -1, 1, 1],
        vVNvM: [0, 0, 0, 0],
        NnmvM: [0, 0, 0, 0],
        wnwMW: [100, 100, 100, 100],
        VvvNw: [100, 100, 100, 100],
        VvMvv: 17,
        MmVVV: 113,
        NM: Mw.WNv,
        NnN: 15,
        wwN: {
            src: "img/e-opendoor.png",
            W: {
                m: 0
            }
        },
        mMnmM: {
            src: "img/e-closedoor.png",
            W: {
                m: 0
            }
        },
        WVW: [{
            src: "img/day-stone-door1-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-door1-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-door1-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.stone,
        destroyaudio: objectaudio.stonedes,
        Nn: {
            src: "img/day-stone-door1.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.stone,
        Mwm: 80,
        WmW: 315360000000,
        health: 6000,
        mW: 0
    }, {
        id: item.steeldoor1,
        img: {
            src: ["img/inv-steel-door1-out.png", "img/inv-steel-door1-in.png", "img/inv-steel-door1-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Metal Door", "I guess you're safe.", Ww.building, [
            [item.shapedmetal, 9]
        ], 1, [
            [station.researchbench, 40000]
        ], 6, item.stonedoor1),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 1,
        z: 1,
        stack: 255,
        loot: Mv.steeldoor1,
        wait: 10,
        mN: 600,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-stone-door1.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-stone-door1.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 1,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        angle: win.Math.PI,
        NVvMw: [1, -1, -1, 1],
        wmvvV: [-1, -1, 1, 1],
        vVNvM: [0, 0, 0, 0],
        NnmvM: [0, 0, 0, 0],
        wnwMW: [100, 100, 100, 100],
        VvvNw: [100, 100, 100, 100],
        VvMvv: 17,
        MmVVV: 113,
        NM: Mw.WNv,
        NnN: 15,
        wwN: {
            src: "img/e-opendoor.png",
            W: {
                m: 0
            }
        },
        mMnmM: {
            src: "img/e-closedoor.png",
            W: {
                m: 0
            }
        },
        WVW: [{
            src: "img/day-steel-door1-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-door1-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-door1-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: {
            src: "img/day-steel-door1.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.steel,
        Mwm: 80,
        WmW: 315360000000,
        health: 12500,
        mW: 0
    }, {
        id: item.sulfur,
        img: {
            src: ["img/inv-sulfur-out.png", "img/inv-sulfur-in.png", "img/inv-sulfur-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Sulfur", "Sulfur in such a cold landscape?", Ww.resources, [], 0, [
            [station.extractor, 240000]
        ]),
        wwnWm: 4,
        MwMvv: 8,
        stack: 255,
        loot: Mv.sulfur,
        mW: 32
    }, {
        id: item.shapeduranium,
        img: {
            src: ["img/inv-shaped-uranium-out.png", "img/inv-shaped-uranium-in.png", "img/inv-shaped-uranium-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Shaped Uranium", "Are you out of your mind?", Ww.resources, [
            [item.uranium, 1]
        ], 1, [
            [station.smelter, 20000]
        ]),
        stack: 255,
        loot: Mv.shapeduranium,
        mW: 0
    }, {
        id: item.researchbench,
        img: {
            src: ["img/inv-workbench2-out.png", "img/inv-workbench2-in.png", "img/inv-workbench2-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Research Bench", "Allow you to make new items", Ww.survival, [
            [item.shapedmetal, 6],
            [item.electronicpart, 1]
        ], 1, [
            [station.workbench, 50000]
        ], 6),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 0,
        z: 1,
        MWW: station.researchbench,
        stack: 255,
        loot: Mv.researchbench,
        wait: 10,
        mN: 1000,
        width: [100, 290, 100, 280],
        height: [280, 100, 280, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, -90, 0, -90],
        Nmn: [-90, 0, -90, 0],
        MMnVm: [-1, 0, -1, 0],
        nmMVw: [0, -1, 0, -1],
        putableimg: {
            src: "img/day-clear-blue-workbench2.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-workbench2.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.wMwnV,
        NnN: 16,
        wwN: {
            src: "img/e-workbench2.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: {
            src: "img/day-workbench2.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.metalpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 400,
        mW: 0
    }, {
        id: item.uranium,
        img: {
            src: ["img/inv-uranium-out.png", "img/inv-uranium-in.png", "img/inv-uranium-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Uranium", "Do you want to end up as Marie Curie?", Ww.resources, [], 0, [
            [station.extractor, 240000]
        ]),
        wwnWm: 2,
        MwMvv: 4,
        stack: 255,
        loot: Mv.uranium,
        mW: 45
    }, {
        id: item.weavingmachine,
        img: {
            src: ["img/inv-weaving-machine-out.png", "img/inv-weaving-machine-in.png", "img/inv-weaving-machine-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Weaving Machine", "Allow you to sew clothes", Ww.survival, [
            [item.wood, 80],
            [item.stone, 20],
            [item.string, 2]
        ], 1, [
            [station.workbench, 60000]
        ]),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 0,
        z: 1,
        MWW: station.weavingmachine,
        stack: 255,
        loot: Mv.weavingmachine,
        wait: 10,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-weaving-machine.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-weaving-machine.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.nwWMW,
        NnN: 16,
        wwN: {
            src: "img/e-weaving-machine.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.wood,
        destroyaudio: objectaudio.wooddes,
        Nn: {
            src: "img/day-weaving-machine.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.wood,
        Mwm: 80,
        WmW: 315360000000,
        health: 250,
        mW: 0
    }, {
        id: item.gasoline,
        img: {
            src: ["img/inv-gasoline-out.png", "img/inv-gasoline-in.png", "img/inv-gasoline-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Gasoline", "Fuel for Smelter", Ww.survival, [
            [item.rottenorange, 4],
            [item.sulfur, 1]
        ], 1, [
            [station.researchbench, 20000]
        ]),
        stack: 255,
        loot: Mv.gasoline
    }, {
        id: item.sulfurpickaxe,
        img: {
            src: ["img/inv-sulfur-pickaxe-out.png", "img/inv-sulfur-pickaxe-in.png", "img/inv-sulfur-pickaxe-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Sulfur Pickaxe", "Mine also Uranium", Ww.tool, [
            [item.alloys, 2],
            [item.shapedmetal, 6],
            [item.sulfur, 6]
        ], 1, [
            [station.researchbench, 90000]
        ], 9, item.steelpickaxe),
        mnw: 22,     //  STATS (damage/food/energy stats)
        stack: 1,
        loot: Mv.sulfurpickaxe,
        wait: 10
    }, {
        id: item.chest,
        img: {
            src: ["img/inv-chest-out.png", "img/inv-chest-in.png", "img/inv-chest-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Wood chest", "You can't store food in.", Ww.building, [
            [item.wood, 50],
            [item.stone, 20]
        ], 1, [
            [station.workbench, 30000]
        ], 8),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 0,
        z: 0,
        stack: 255,
        loot: Mv.chest,
        wait: 10,
        mwV: 1,
        mN: 600,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-chest.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-chest.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        angle: win.Math.PI / 2,
        NM: Mw.nwWMW,
        NnN: 25,
        wwN: {
            src: "img/e-chest.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.wood,
        destroyaudio: objectaudio.wooddes,
        Nn: {
            src: "img/day-chest.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.wood,
        Mwm: 55,
        WmW: 315360000000,
        health: 300,
        mW: 0
    }, {
        id: item.fridge,
        img: {
            src: ["img/inv-fridge-out.png", "img/inv-fridge-in.png", "img/inv-fridge-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Fridge", "Save your food.", Ww.building, [
            [item.shapedmetal, 5],
            [item.energycell, 4]
        ], 1, [
            [station.researchbench, 90000]
        ], 9),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 0,
        z: 0,
        stack: 255,
        loot: Mv.fridge,
        wait: 10,
        mwV: 1,
        VVmmM: 1,
        mN: 600,
        width: [50, 100, 50, 100],
        height: [100, 50, 100, 50],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 50, 0],
        Nmn: [0, 0, 0, 50],
        putableimg: {
            src: "img/day-clear-blue-fridge.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-fridge.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        angle: win.Math.PI / 2,
        NM: Mw.nwWMW,
        NnN: 25,
        wwN: {
            src: "img/e-fridge.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: {
            src: "img/day-fridge.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.metalpart,
        Mwm: 55,
        WmW: 315360000000,
        health: 300,
        mW: 0
    }, {
        id: item.woodfloor1,
        img: {
            src: ["img/inv-wood-floor-out.png", "img/inv-wood-floor-in.png", "img/inv-wood-floor-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Wood floor", "Players can't spawn on it", Ww.building, [
            [item.wood, 15]
        ], 2, [
            [station.workbench, 15000]
        ]),
        stack: 255,
        loot: Mv.woodfloor1,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 2,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-wood-floor.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-wood-floor.png",
            W: {
                m: 0
            }
        },
        Mvw: 1,
        vVwVM: item.woodfloor1,
        VWN: 0,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.nwVWW,
        WVW: [{
            src: "img/day-wood-floor-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.wooddes,
        Nn: [{
            src: "img/day-wood-floor-0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-7.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-8.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-9.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-10.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-11.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-12.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-13.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-14.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-15.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-16.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-17.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-18.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-19.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-20.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-21.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-22.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-23.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-24.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-25.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-26.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-27.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-28.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-29.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-30.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-31.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-32.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-33.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-34.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-35.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-36.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-37.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-38.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-39.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-40.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-41.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-42.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-43.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-44.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-45.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-46.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.wood,
        Mwm: 80,
        WmW: 315360000000,
        health: 4000,
        mW: 0
    }, {
        id: item.hammer,
        img: {
            src: ["img/inv-hammer-out.png", "img/inv-hammer-in.png", "img/inv-hammer-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Hammer", "Destroy walls quickly.", Ww.tool, [
            [item.wood, 100],
            [item.shapedmetal, 10]
        ], 1, [
            [station.researchbench, 30000]
        ], 7),
        mnw: 23,     //  STATS (damage/food/energy stats)
        stack: 1,
        loot: Mv.hammer,
        wait: 10
    }, {
        id: item.sleepingbag,
        img: {
            src: ["img/inv-sleeping-bag-out.png", "img/inv-sleeping-bag-in.png", "img/inv-sleeping-bag-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Sleeping Bag", "Once dead, you keep your base", Ww.survival, [
            [item.leather, 7],
            [item.animalfat, 7],
            [item.string, 7]
        ], 1, [
            [station.weavingmachine, 20000]
        ], 9),
        stack: 255,
        loot: Mv.sleepingbag,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-sleeping-bag.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-sleeping-bag.png",
            W: {
                m: 0
            }
        },
        WNv: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.mvWww,
        impactaudio: objectaudio.pillow,
        destroyaudio: objectaudio.pillowdes,
        Nn: {
            src: "img/day-sleeping-bag.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.furpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 500,
        mW: 0
    }, {
        id: item.repairhammer,
        img: {
            src: ["img/inv-repair-hammer-out.png", "img/inv-repair-hammer-in.png", "img/inv-repair-hammer-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Repair Hammer", "Repair walls but require nails.", Ww.tool, [
            [item.wood, 120],
            [item.shapedmetal, 2]
        ], 1, [
            [station.workbench, 30000]
        ], 5),
        mnw: 24,     //  STATS (damage/food/energy stats)
        stack: 1,
        loot: Mv.repairhammer,
        wait: 10
    }, {
        id: item.nails,
        img: {
            src: ["img/inv-nails-out.png", "img/inv-nails-in.png", "img/inv-nails-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Nails", "Needed to repair walls.", Ww.survival, [
            [item.shapedmetal, 2]
        ], 85, [
            [station.workbench, 20000]
        ]),
        stack: 255,
        loot: Mv.nails
    }, {
        id: item.woodfloor2,
        img: {
            src: ["img/inv-wood-floor-light-out.png", "img/inv-wood-floor-light-in.png", "img/inv-wood-floor-light-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Light Wood Floor", "Players can't spawn on it", Ww.building, [
            [item.wood, 15]
        ], 2, [
            [station.workbench, 15000]
        ]),
        stack: 255,
        loot: Mv.woodfloor2,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 2,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-woodlight-floor.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-woodlight-floor.png",
            W: {
                m: 0
            }
        },
        Mvw: 1,
        vVwVM: item.woodfloor2,
        VWN: 0,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.nwVWW,
        WVW: [{
            src: "img/day-wood-floor-light-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.wooddes,
        Nn: [{
            src: "img/day-wood-floor-light-0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-7.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-8.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-9.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-10.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-11.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-12.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-13.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-14.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-15.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-16.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-17.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-18.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-19.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-20.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-21.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-22.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-23.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-24.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-25.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-26.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-27.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-28.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-29.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-30.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-31.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-32.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-33.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-34.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-35.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-36.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-37.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-38.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-39.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-40.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-41.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-42.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-43.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-44.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-45.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-floor-light-46.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.woodpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 4000,
        mW: 0
    }, {
        id: item.smallwoodwall,
        img: {
            src: ["img/inv-wood-smallwall-out.png", "img/inv-wood-smallwall-in.png", "img/inv-wood-smallwall-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Wooden Low Wall", "You can shoot through it.", Ww.building, [
            [item.wood, 10]
        ], 1, [
            [station.workbench, 10000]
        ]),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 0,
        z: 0,
        stack: 255,
        loot: Mv.smallwoodwall,
        wait: 10,
        mN: 1000,
        width: [100, 35, 100, 35],
        height: [35, 100, 35, 100],
        Wwv: [0, -30, 0, 30],
        nWn: [30, 0, -30, 0],
        wwn: [0, 0, 0, 65],
        Nmn: [65, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-wood-smallwall.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-wood-smallwall.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 1,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        angle: win.Math.PI / 2,
        NVvMw: [1, 0, -1, 0],
        wmvvV: [0, -1, 0, 1],
        vVNvM: [0, 0, 65, 0],
        NnmvM: [0, 0, 0, 65],
        wnwMW: [35, 100, 35, 100],
        VvvNw: [100, 35, 100, 35],
        VvMvv: 6,
        MmVVV: 46,
        WnW: 0,
        NM: Mw.VWN,
        WVW: [{
            src: "img/day-wood-smallwalls-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.wood,
        destroyaudio: objectaudio.wooddes,
        Nn: [{
            src: "img/day-wood-smallwalls-0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-7.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-8.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-9.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-10.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-11.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-12.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-13.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-14.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-15.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-16.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-17.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-18.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-19.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-20.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-21.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-22.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-23.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-24.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-25.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-26.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-27.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-28.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-29.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-30.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-31.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-32.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-33.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-34.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-35.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-36.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-37.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-38.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-smallwalls-39.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.wood,
        Mwm: 80,
        WmW: 315360000000,
        health: 3000,
        mW: 0
    }, {
        id: item.smallstonewall,
        img: {
            src: ["img/inv-stone-smallwall-out.png", "img/inv-stone-smallwall-in.png", "img/inv-stone-smallwall-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Stone Low Wall", "You can shoot through it.", Ww.building, [
            [item.stone, 10]
        ], 1, [
            [station.workbench, 15000]
        ], 3),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 0,
        z: 0,
        stack: 255,
        loot: Mv.smallstonewall,
        wait: 10,
        mN: 1000,
        width: [100, 35, 100, 35],
        height: [35, 100, 35, 100],
        Wwv: [0, -30, 0, 30],
        nWn: [30, 0, -30, 0],
        wwn: [0, 0, 0, 65],
        Nmn: [65, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-stone-smallwalls.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-stone-smallwalls.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 1,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        angle: win.Math.PI / 2,
        NVvMw: [1, 0, -1, 0],
        wmvvV: [0, -1, 0, 1],
        vVNvM: [0, 0, 65, 0],
        NnmvM: [0, 0, 0, 65],
        wnwMW: [35, 100, 35, 100],
        VvvNw: [100, 35, 100, 35],
        VvMvv: 6,
        MmVVV: 46,
        WnW: 0,
        NM: Mw.VWN,
        WVW: [{
            src: "img/day-stone-smallwalls-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.stone,
        destroyaudio: objectaudio.stonedes,
        Nn: [{
            src: "img/day-stone-smallwalls-0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-7.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-8.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-9.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-10.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-11.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-12.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-13.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-14.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-15.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-16.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-17.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-18.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-19.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-20.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-21.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-22.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-23.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-24.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-25.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-26.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-27.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-28.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-29.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-30.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-31.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-32.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-33.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-34.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-35.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-36.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-37.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-38.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-smallwalls-39.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.stone,
        Mwm: 80,
        WmW: 315360000000,
        health: 7000,
        mW: 0
    }, {
        id: item.smallsteelwall,
        img: {
            src: ["img/inv-steel-smallwall-out.png", "img/inv-steel-smallwall-in.png", "img/inv-steel-smallwall-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Metal Low Wall", "You can shoot through it.", Ww.building, [
            [item.shapedmetal, 2]
        ], 1, [
            [station.researchbench, 20000]
        ], 6, item.smallstonewall),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 0,
        z: 0,
        stack: 255,
        loot: Mv.smallsteelwall,
        wait: 10,
        mN: 1000,
        width: [100, 35, 100, 35],
        height: [35, 100, 35, 100],
        Wwv: [0, -30, 0, 30],
        nWn: [30, 0, -30, 0],
        wwn: [0, 0, 0, 65],
        Nmn: [65, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-stone-smallwalls.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-stone-smallwalls.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 1,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        angle: win.Math.PI / 2,
        NVvMw: [1, 0, -1, 0],
        wmvvV: [0, -1, 0, 1],
        vVNvM: [0, 0, 65, 0],
        NnmvM: [0, 0, 0, 65],
        wnwMW: [35, 100, 35, 100],
        VvvNw: [100, 35, 100, 35],
        VvMvv: 6,
        MmVVV: 46,
        WnW: 0,
        NM: Mw.VWN,
        WVW: [{
            src: "img/day-steel-smallwalls-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [{
            src: "img/day-steel-smallwalls-0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-7.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-8.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-9.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-10.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-11.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-12.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-13.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-14.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-15.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-16.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-17.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-18.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-19.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-20.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-21.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-22.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-23.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-24.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-25.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-26.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-27.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-28.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-29.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-30.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-31.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-32.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-33.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-34.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-35.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-36.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-37.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-38.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-steel-smallwalls-39.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.steel,
        Mwm: 55,
        WmW: 315360000000,
        health: 15000,
        mW: 0
    }, {
        id: item.MMnVW,
        WvV: 0,
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: [],
        detail: {
            nww: win.undefined
        },
        NWm: -1,
        NM: Mw.mWmnv
    }, {
        id: item.tomatosoup,
        img: {
            src: ["img/inv-tomato-soup-out.png", "img/inv-tomato-soup-in.png", "img/inv-tomato-soup-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Tomato Soup", "Has not yet been opened.", Ww.survival, [
            [item.can, 1],
            [item.tomato, 2]
        ], 1, [
            [station.firepart, 15000],
            [station.bbq, 7000]
        ]),
        mnw: 25,     //  STATS (damage/food/energy stats)
        stack: 5,
        loot: Mv.tomatosoup,
        vWVMV: 2,
        nNmmM: item.can,
        wait: 10
    }, {
        id: item.syringe,
        img: {
            src: ["img/inv-syringe-out.png", "img/inv-syringe-in.png", "img/inv-syringe-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Syringe", "Useful to make drugs.", Ww.medicine, [
            [item.junk, 1]
        ], 1, [
            [station.researchbench, 30000]
        ]),
        stack: 20,
        loot: Mv.syringe,
        mW: 50
    }, {
        id: item.chemicalcomponent,
        img: {
            src: ["img/inv-chemical-component-out.png", "img/inv-chemical-component-in.png", "img/inv-chemical-component-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Chemical Component", "Useful to make a drugs."),
        stack: 20,
        loot: Mv.chemicalcomponent,
        mW: 50
    }, {
        id: item.radway,
        img: {
            src: ["img/inv-radaway-out.png", "img/inv-radaway-in.png", "img/inv-radaway-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("RadAway", "Reduce your radioactivity a lot.", Ww.medicine, [
            [item.syringe, 1],
            [item.chemicalcomponent, 1],
            [item.mushroom2, 1]
        ], 1, [
            [station.agitator, 45000]
        ]),
        mnw: 26,     //  STATS (damage/food/energy stats)
        stack: 5,
        loot: Mv.radway,
        wait: 10
    }, {
        id: item.tomatoseed,
        img: {
            src: ["img/inv-tomato-seed-out.png", "img/inv-tomato-seed-in.png", "img/inv-tomato-seed-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Tomato Seed", "A fruit or vegetable?", Ww.plant, [
            [item.tomato, 4]
        ], 1, [
            [station.firepart, 30000],
            [station.bbq, 20000]
        ]),
        stack: 40,
        loot: Mv.tomatoseed,
        MmwnN: Mv.tomato,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [30, 30, 30, 30],
        height: [30, 30, 30, 30],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [35, 35, 35, 35],
        Nmn: [35, 35, 35, 35],
        putableimg: {
            src: "img/day-clear-blue-tomato.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-tomato.png",
            W: {
                m: 0
            }
        },
        WNv: 0,
        mwM: 0,
        behavior: vWN.VvMVW,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.MWnVn,
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.VNv,
        Nn: [{
            src: "img/day-plant0-tomato.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-plant1-tomato.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-plant2-tomato.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-plant3-tomato.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-plant4-tomato.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.tomato,
        Mwm: 68,
        WmW: ((5 * 8) * 60) * 1000,
        health: 250,
        mW: 0
    }, {
        id: item.tomato,
        img: {
            src: ["img/inv-tomato-out.png", "img/inv-tomato-in.png", "img/inv-tomato-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Tomato", "Why did the tomato blush?"),
        stack: 20,
        loot: Mv.tomato,
        wait: 5,
        vWVMV: 10,
        nNmmM: item.rottentomato,
        mnw: 27,     //  STATS (damage/food/energy stats)
        mW: 24
    }, {
        id: item.rottentomato,
        img: {
            src: ["img/inv-rotten-tomato-out.png", "img/inv-rotten-tomato-in.png", "img/inv-rotten-tomato-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Rotten Tomato", "Go on, have a bite!"),
        stack: 20,
        loot: Mv.rottentomato,
        wait: 5,
        mnw: 28,     //  STATS (damage/food/energy stats)
        mW: 20
    }, {
        id: item.can,
        img: {
            src: ["img/inv-can-out.png", "img/inv-can-in.png", "img/inv-can-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Can", "Useful to craft food can.", Ww.survival, [
            [item.shapedmetal, 1]
        ], 1, [
            [station.workbench, 20000]
        ]),
        mnw: 0,     //  STATS (damage/food/energy stats)
        stack: 255,
        loot: Mv.can
    }, {
        id: item.crossbow,
        img: {
            src: ["img/inv-wood-crossbow-out.png", "img/inv-wood-crossbow-in.png", "img/inv-wood-crossbow-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Wood Crossbow", "Shoot faster, reload slower", Ww.weapon, [
            [item.wood, 200],
            [item.string, 2],
            [item.shapedmetal, 1]
        ], 1, [
            [station.workbench, 50000]
        ], 6),
        mnw: 29,     //  STATS (damage/food/energy stats)
        vMv: item.crossarrow,
        stack: 1,
        loot: Mv.crossbow,
        wait: 10
    }, {
        id: item.crossarrow,
        img: {
            src: ["img/inv-wood-crossarrow-out.png", "img/inv-wood-crossarrow-in.png", "img/inv-wood-crossarrow-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Crossbow Arrows", "Needed to use crossbow.", Ww.weapon, [
            [item.wood, 40],
            [item.shapedmetal, 1]
        ], 10, [
            [station.workbench, 30000]
        ]),
        stack: 255,
        loot: Mv.crossarrow
    }, {
        id: item.nailgun,
        img: {
            src: ["img/inv-nail-gun-out.png", "img/inv-nail-gun-in.png", "img/inv-nail-gun-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Nail Gun", "Repair walls from a distance", Ww.tool, [
            [item.shapedmetal, 3],
            [item.smallwire, 1],
            [item.junk, 1],
            [item.energycell, 4]
        ], 1, [
            [station.researchbench, 30000]
        ], 7),
        mnw: 30,     //  STATS (damage/food/energy stats)
        vMv: item.nails,
        stack: 1,
        loot: Mv.nailgun,
        wait: 10
    }, {
        id: item.sawedoff,
        img: {
            src: ["img/inv-sawed-off-shotgun-out.png", "img/inv-sawed-off-shotgun-in.png", "img/inv-sawed-off-shotgun-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {

                m: 0
            }]
        },
        detail: new vn("Sawed Off", "Shoot less far, do more damages", Ww.weapon, [
            [item.shotgun, 1],
            [item.alloys, 6],
            [item.shapedmetal, 6]
        ], 1, [
            [station.researchbench, 200000]
        ], 13, item.shotgun),
        mnw: 31,     //  STATS (damage/food/energy stats)
        vMv: item.bulletshotgun,
        stack: 1,
        loot: Mv.sawedoff,
        wait: 10
    }, {
        id: item.stonefloor1,
        img: {
            src: ["img/inv-stone-floor-out.png", "img/inv-stone-floor-in.png", "img/inv-stone-floor-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Stone floor", "Players can't spawn on it", Ww.building, [
            [item.stone, 15]
        ], 2, [
            [station.workbench, 15000]
        ], 4),
        stack: 255,
        loot: Mv.stonefloor1,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 2,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-stone-floor.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-stone-floor.png",
            W: {
                m: 0
            }
        },
        Mvw: 1,
        vVwVM: item.stonefloor1,
        VWN: 0,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.nwVWW,
        WVW: [{
            src: "img/day-stone-floor-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.stonedes,
        Nn: [{
            src: "img/day-stone-floor-0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-7.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-8.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-9.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-10.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-11.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-12.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-13.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-14.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-15.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-16.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-17.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-18.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-19.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-20.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-21.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-22.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-23.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-24.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-25.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-26.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-27.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-28.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-29.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-30.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-31.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-32.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-33.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-34.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-35.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-36.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-37.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-38.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-39.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-40.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-41.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-42.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-43.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-44.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-45.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-floor-46.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.stone,
        Mwm: 80,
        WmW: 315360000000,
        health: 8000,
        mW: 0
    }, {
        id: item.stonefloor2,
        img: {
            src: ["img/inv-tiling-floor-out.png", "img/inv-tiling-floor-in.png", "img/inv-tiling-floor-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Tiling floor", "Players can't spawn on it", Ww.building, [
            [item.stone, 15]
        ], 2, [
            [station.workbench, 15000]
        ], 4),
        stack: 255,
        loot: Mv.stonefloor2,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 2,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-tiling-floor.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-tiling-floor.png",
            W: {
                m: 0
            }
        },
        Mvw: 1,
        vVwVM: item.stonefloor2,
        VWN: 0,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.nwVWW,
        WVW: [{
            src: "img/day-tiling-floor-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.stonedes,
        Nn: [{
            src: "img/day-tiling-floor-0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-7.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-8.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-9.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-10.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-11.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-12.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-13.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-14.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-15.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-16.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-17.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-18.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-19.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-20.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-21.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-22.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-23.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-24.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-25.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-26.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-27.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-28.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-29.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-30.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-31.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-32.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-33.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-34.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-35.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-36.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-37.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-38.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-39.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-40.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-41.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-42.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-43.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-44.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-45.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tiling-floor-46.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.stone,
        Mwm: 80,
        WmW: 315360000000,
        health: 8000,
        mW: 0
    }, {
        id: item.NvMvM,
        WvV: 0,
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: [],
        Nvw: [],
        detail: {
            nww: win.undefined
        },
        NWm: -1,
        NM: Mw.NNnmv
    }, {
        id: item.chips,
        img: {
            src: ["img/inv-chips-out.png", "img/inv-chips-in.png", "img/inv-chips-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Crisps", "You salty?"),
        mnw: 32,     //  STATS (damage/food/energy stats)
        stack: 5,
        loot: Mv.chips,
        vWVMV: 2,
        nNmmM: item.rottenchips,
        wait: 10
    }, {
        id: item.rottenchips,
        img: {
            src: ["img/inv-rotten-chips-out.png", "img/inv-rotten-chips-in.png", "img/inv-rotten-chips-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Expired Crisps", "Go on, have a bite!"),
        stack: 5,
        loot: Mv.rottenchips,
        wait: 5,
        mnw: 33,     //  STATS (damage/food/energy stats)
        mW: 20
    }, {
        id: item.electronicpart,
        img: {
            src: ["img/inv-electronic-part-out.png", "img/inv-electronic-part-in.png", "img/inv-electronic-part-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Electronic Parts", "Break TV's and Computers to find it"),
        stack: 255,
        loot: Mv.electronicpart,
        mW: 100
    }, {
        id: item.junk,
        img: {
            src: ["img/inv-junk-out.png", "img/inv-junk-in.png", "img/inv-junk-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Junk", "Find it in houses"),
        stack: 255,
        loot: Mv.junk,
        mW: 40
    }, {
        id: item.wires,
        img: {
            src: ["img/inv-wires-out.png", "img/inv-wires-in.png", "img/inv-wires-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Big Wire", "Break big computers in power station (in the city)"),
        stack: 255,
        loot: Mv.wires,
        mW: 40
    }, {
        id: item.energycell,
        img: {
            src: ["img/inv-small-energy-cells-out.png", "img/inv-small-energy-cells-in.png", "img/inv-small-energy-cells-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Energy Cells", "Used for energy weapons/buildings", Ww.survival, [
            [item.alloys, 1],
            [item.shapeduranium, 1]
        ], 30, [
            [station.teslabench, 28000]
        ], 6),
        stack: 255,
        loot: Mv.energycell
    }, {
        id: item.laserpistol,
        img: {
            src: ["img/inv-laser-pistol-out.png", "img/inv-laser-pistol-in.png", "img/inv-laser-pistol-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Laser Pistol", "Bullets are faster.", Ww.weapon, [
            [item.shapeduranium, 2],
            [item.wires, 1],
            [item.electronicpart, 2],
            [item.alloys, 1],
            [item.shapedmetal, 4]
        ], 1, [
            [station.teslabench, 180000]
        ], 14),
        mnw: 34,     //  STATS (damage/food/energy stats)
        vMv: item.energycell,
        stack: 1,
        loot: Mv.laserpistol,
        wait: 10
    }, {
        id: item.teslabench,
        img: {
            src: ["img/inv-workbench3-out.png", "img/inv-workbench3-in.png", "img/inv-workbench3-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Tesla Bench", "Allow you to make powerful items", Ww.survival, [
            [item.alloys, 4],
            [item.shapedmetal, 6],
            [item.electronicpart, 3],
            [item.wires, 4],
            [item.shapeduranium, 2]
        ], 1, [
            [station.researchbench, 120000]
        ], 10, item.researchbench),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: 60000,
        WvV: 0,
        z: 1,
        MWW: station.teslabench,
        stack: 255,
        loot: Mv.teslabench,
        wait: 10,
        mN: 1000,
        width: [100, 260, 100, 260],
        height: [260, 100, 260, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, -80, 0, -80],
        Nmn: [-80, 0, -80, 0],
        MMnVm: [-1, 0, -1, 0],
        nmMVw: [0, -1, 0, -1],
        putableimg: {
            src: "img/day-clear-blue-workbench3.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-workbench3.png",
            W: {
                m: 0
            }
        },
        MvWnM: [-20.5, -101.5, 20.5, 101.5],
        VmNMm: [101.5, -20.5, -101, 20.5],
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.mMwmV,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.nVWmn,
        NnN: 16,
        wwN: {
            src: "img/e-workbench3.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [{
            src: "img/day-workbench3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-workbench3-1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-workbench3-2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-workbench3-3.png",
            W: {
                m: 0
            }
        }],
        mMW: [{
            src: "img/day-tesla-light0.png",
            W: {
                m: 0
            }
        }, 0, {
            src: "img/day-tesla-light1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tesla-light2.png",
            W: {
                m: 0
            }
        }, 0, {
            src: "img/day-tesla-light3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tesla-light4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-tesla-light5.png",
            W: {
                m: 0
            }
        }, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        NWm: particulesitems.metalpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 3000,
        mW: 0
    }, {
        id: item.alloys,
        img: {
            src: ["img/inv-alloys-out.png", "img/inv-alloys-in.png", "img/inv-alloys-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Alloys", "To craft powerful items", Ww.resources, [
            [item.steel, 1],
            [item.junk, 1],
            [item.sulfur, 1]
        ], 1, [
            [station.smelter, 10000]
        ]),
        stack: 255,
        loot: Mv.alloys
    }, {
        id: item.sulfuraxe,
        img: {
            src: ["img/inv-sulfur-axe-out.png", "img/inv-sulfur-axe-in.png", "img/inv-sulfur-axe-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Sulfur Axe", "You look cool with it.", Ww.tool, [
            [item.stoneaxe, 1],
            [item.alloys, 8],
            [item.shapedmetal, 10],
            [item.sulfur, 20]
        ], 1, [
            [station.researchbench, 200000]
        ], 10, item.stoneaxe),
        mnw: 35,     //  STATS (damage/food/energy stats)
        stack: 1,
        loot: Mv.sulfuraxe,
        wait: 10
    }, {
        id: item.landmine,
        img: {
            src: ["img/inv-landmine-out.png", "img/inv-landmine-in.png", "img/inv-landmine-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Landmine", "When you feel it, it's too late", Ww.weapon, [
            [item.shapedmetal, 4],
            [item.junk, 1],
            [item.sulfur, 2],
            [item.animalfat, 2]
        ], 1, [
            [station.researchbench, 40000]
        ], 9),
        stack: 20,
        loot: Mv.landmine,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [50, 50, 50, 50],
        height: [50, 50, 50, 50],
        wwn: [25, 25, 25, 25],
        Nmn: [25, 25, 25, 25],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-landmine.png", //image when you try to put in ground
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-landmine.png",//image when are unnable to put in ground(if you try to put in tree for example)
            W: {
                m: 0
            }
        },
        WNv: 0,
        mwM: 1,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        damage: 200,
        WWv: 400,
        WnW: 0,
        NM: Mw.vmMNW,   //visible before - NM: Mw.vmMNW
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [{
            src: "img/day-landmine-0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-landmine-1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-landmine-2.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.kakipart,
        Mwm: 80,
        WmW: 315360000000,
        health: 5,
        mW: 0
    }, {
        id: item.dynamite,
        img: {
            src: ["img/inv-dynamite-out.png", "img/inv-dynamite-in.png", "img/inv-dynamite-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Dynamite", "Get out of here, it gonna blow!", Ww.weapon, [
            [item.string, 1],
            [item.animalfat, 2],
            [item.sulfur, 2],
            [item.junk, 1]
        ], 1, [
            [station.researchbench, 40000]
        ], 9),
        stack: 10,
        loot: Mv.dynamite,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-dynamite.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-dynamite.png",
            W: {
                m: 0
            }
        },
        WNv: 0,
        mwM: 1,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        damage: 180,
        WWv: 1400,
        WnW: 0,
        NM: Mw.VnMww,
        impactaudio: objectaudio.pillow,
        destroyaudio: objectaudio.VNv,
        Nn: [{
            src: "img/day-dynamite.png",
            W: {
                m: 0
            }
        }, {
            src: "img/dynamite-yellow.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.redsteelpart,
        Mwm: 80,
        WmW: 5000,
        health: 100,
        mW: 0
    }, {
        id: item.c4bomb,
        img: {
            src: ["img/inv-C4-out.png", "img/inv-C4-in.png", "img/inv-C4-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("C4", "Explode when you hit the trigger!", Ww.weapon, [
            [item.dynamite, 2],
            [item.smallwire, 1],
            [item.alloys, 2],
            [item.electronicpart, 1]
        ], 1, [
            [station.researchbench, 60000]
        ], 16, item.dynamite),
        stack: 5,
        loot: Mv.c4bomb,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-C4.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-C4.png",
            W: {
                m: 0
            }
        },
        WNv: 0,
        mwM: 1,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        damage: 255,
        WWv: 6000,
        MMN: 0,
        WnW: 0,
        NM: Mw.VnMww,
        impactaudio: objectaudio.pillow,
        destroyaudio: objectaudio.VNv,
        Nn: [{
            src: "img/day-C4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/C4-red.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.kakipart,
        Mwm: 80,
        WmW: 315360000000,
        health: 100,
        mW: 0
    }, {
        id: item.joystic,
        img: {
            src: ["img/inv-joystick-out.png", "img/inv-joystick-in.png", "img/inv-joystick-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("C4 Trigger", "Don't press the button or else...", Ww.weapon, [
            [item.shapedmetal, 5],
            [item.electronicpart, 1],
            [item.energycell, 8],
            [item.smallwire, 1]
        ], 1, [
            [station.researchbench, 100000]
        ], 16, item.c4bomb),
        stack: 1,
        loot: Mv.joystic,
        wait: 10,
        mnw: 36,     //  STATS (damage/food/energy stats)
        mW: 0
    }, {
        id: item.composter,
        img: {
            src: ["img/inv-composter-out.png", "img/inv-composter-in.png", "img/inv-composter-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Compost", "Allows to accelerate rotting", Ww.survival, [
            [item.shapedmetal, 4],
            [item.electronicpart, 1]
        ], 1, [
            [station.researchbench, 100000]
        ], 8),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: 10000,
        WvV: 0,
        z: 1,
        MWW: station.composter,
        stack: 255,
        loot: Mv.composter,
        wait: 10,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-composter.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-composter.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.vNvnV,
        NnN: 16,
        wwN: {
            src: "img/e-composter.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [{
            src: "img/day-composter-off.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-composter.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.metalpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 500,
        mW: 0
    }, {
        id: item.metalhelmet,
        img: {
            src: ["img/inv-metal-helmet-out.png", "img/inv-metal-helmet-in.png", "img/inv-metal-helmet-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Metal Helmet", "Protects you from melee weapons", Ww.clothe, [
            [item.shapedmetal, 3],
            [item.animaltendon, 3],
            [item.leather, 3],
            [item.nails, 80]
        ], 1, [
            [station.workbench, 70000]
        ]),
        nwm: 7,
        stack: 1,
        loot: Mv.metalhelmet,
        wait: 10,
        wNV: 0,
        NVw: 0.15,
        MvM: 0,
        mnm: 0,
        Vww: 0,
        MWw: 0,
        speed: -0.01
    }, {
        id: item.weldinghelmet,
        img: {
            src: ["img/inv-welding-helmet-out.png", "img/inv-welding-helmet-in.png", "img/inv-welding-helmet-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Welding Helmet", "Protects you from melee weapons", Ww.clothe, [
            [item.shapedmetal, 10],
            [item.alloys, 2],
            [item.leather, 3],
            [item.nails, 160],
            [item.metalhelmet, 1]
        ], 1, [
            [station.researchbench, 140000]
        ], 7),
        nwm: 8,
        stack: 1,
        loot: Mv.weldinghelmet,
        wait: 10,
        wNV: 0,
        NVw: 0.4,
        MvM: 0,
        mnm: 0,
        Vww: 0.05,
        MWw: 0,
        speed: -0.02
    }, {
        id: item.gladiatorhelmet,
        img: {
            src: ["img/inv-gladiator-helmet-out.png", "img/inv-gladiator-helmet-in.png", "img/inv-gladiator-helmet-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Gladiator Helmet", "Strength and honor.", Ww.clothe, [
            [item.shapedmetal, 12],
            [item.alloys, 6],
            [item.leather, 4],
            [item.nails, 255],
            [item.weldinghelmet, 1]
        ], 1, [
            [station.researchbench, 300000]
        ], 17, item.weldinghelmet),
        nwm: 9,
        stack: 1,
        loot: Mv.gladiatorhelmet,
        wait: 10,
        wNV: 0,
        NVw: 0.6,
        MvM: 0.1,
        mnm: 0,
        Vww: 0.2,
        MWw: 0,
        speed: -0.03
    }, {
        id: item.leatherjacket,
        img: {
            src: ["img/inv-leather-jacket-out.png", "img/inv-leather-jacket-in.png", "img/inv-leather-jacket-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Leather Jacket", "Protects you from guns", Ww.clothe, [
            [item.string, 2],
            [item.leather, 4]
        ], 1, [
            [station.weavingmachine, 70000]
        ]),
        nwm: 10,
        stack: 1,
        loot: Mv.leatherjacket,
        wait: 10,
        wNV: 0.0006,
        NVw: 0,
        MvM: 0.2,
        mnm: 0,
        Vww: 0,
        MWw: 0,
        speed: 0
    }, {
        id: item.kevlarsuit,
        img: {
            src: ["img/inv-kevlar-suit-out.png", "img/inv-kevlar-suit-in.png", "img/inv-kevlar-suit-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Kevlar Suit", "Protects you from guns", Ww.clothe, [
            [item.shapedmetal, 6],
            [item.string, 4],
            [item.leather, 6],
            [item.alloys, 2],
            [item.leatherjacket, 1]
        ], 1, [
            [station.weavingmachine, 100000]
        ], 12),
        nwm: 11,
        stack: 1,
        loot: Mv.kevlarsuit,
        wait: 10,
        wNV: 0,
        NVw: 0,
        MvM: 0.4,
        mnm: 0,
        Vww: 0,
        MWw: 0,
        speed: 0
    }, {
        id: item.SWATsuit,
        img: {
            src: ["img/inv-SWAT-suit-out.png", "img/inv-SWAT-suit-in.png", "img/inv-SWAT-suit-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("SWAT Suit", "Protects you from guns", Ww.clothe, [
            [item.shapedmetal, 10],
            [item.string, 10],
            [item.leather, 10],
            [item.alloys, 4],
            [item.kevlarsuit, 1]
        ], 1, [
            [station.weavingmachine, 200000]
        ], 18, item.kevlarsuit),
        nwm: 12,
        stack: 1,
        loot: Mv.SWATsuit,
        wait: 10,
        wNV: 0,
        NVw: 0.1,
        MvM: 0.7,
        mnm: 0,
        Vww: 0.1,
        MWw: 0,
        speed: -0.01
    }, {
        id: item.protectivesuit,
        img: {
            src: ["img/inv-protective-suit-out.png", "img/inv-protective-suit-in.png", "img/inv-protective-suit-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Protective Suit", "Protects you from explosives", Ww.clothe, [
            [item.shapedmetal, 6],
            [item.string, 6],
            [item.leather, 6],
            [item.alloys, 2]
        ], 1, [
            [station.weavingmachine, 200000]
        ], 12, item.lightweightskill),
        nwm: 13,
        stack: 1,
        loot: Mv.protectivesuit,
        wait: 10,
        wNV: 0.00085,
        NVw: 0,
        MvM: 0,
        mnm: 0,
        Vww: 0.9,
        MWw: 0,
        speed: -0.03
    }, {
        id: item.tesla1,
        img: {
            src: ["img/inv-tesla-0-out.png", "img/inv-tesla-0-in.png", "img/inv-tesla-0-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Power Armor", "Protects you from energy weapons", Ww.clothe, [
            [item.shapedmetal, 20],
            [item.shapeduranium, 2],
            [item.electronicpart, 1],
            [item.wires, 2],
            [item.alloys, 2]
        ], 1, [
            [station.teslabench, 150000]
        ], 10),
        nwm: 14,
        stack: 1,
        loot: Mv.tesla1,
        wait: 10,
        wNV: 0,
        NVw: 0,
        MvM: 0,
        mnm: 0.3,
        Vww: 0,
        MWw: 0,
        speed: 0
    }, {
        id: item.tesla2,
        img: {
            src: ["img/inv-tesla-armor-out.png", "img/inv-tesla-armor-in.png", "img/inv-tesla-armor-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Tesla Armor", "Protects you from energy weapons", Ww.clothe, [
            [item.tesla1, 1],
            [item.shapeduranium, 10],
            [item.electronicpart, 5],
            [item.wires, 5],
            [item.alloys, 10]
        ], 1, [
            [station.teslabench, 300000]
        ], 18, item.tesla1, 3),
        nwm: 15,
        stack: 1,
        loot: Mv.tesla2,
        wait: 10,
        wNV: 0.00085,
        NVw: 0.2,
        MvM: 0.2,
        mnm: 0.75,
        Vww: 0.2,
        MWw: 0.01,
        speed: -0.02
    }, {
        id: item.woodespike,
        img: {
            src: ["img/inv-wood-spike-out.png", "img/inv-wood-spike-in.png", "img/inv-wood-spike-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Wooden Spike", "Hurt and slow down", Ww.building, [
            [item.wood, 80]
        ], 1, [
            [station.workbench, 25000]
        ]),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        stack: 40,
        loot: Mv.woodespike,
        wait: 10,
        mN: 1000,
        width: [50, 50, 50, 50],
        height: [50, 50, 50, 50],
        wwn: [25, 25, 25, 25],
        Nmn: [25, 25, 25, 25],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-wood-spike.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-wood-spike.png",
            W: {
                m: 0
            }
        },
        WNv: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.WwVVm,
        hidden: [{
            src: "img/day-wood-spike-cover1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-spike-cover2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-spike-cover3.png",
            W: {
                m: 0
            }
        }],
        vWwvw: [{
            src: "img/day-wood-spike-1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-spike-2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-wood-spike-3.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.wood,
        Mwm: 80,
        WmW: 315360000000,
        health: 200,
        mW: 0
    }, {
        id: item.lasersubmachine,
        img: {
            src: ["img/inv-laser-submachine-out.png", "img/inv-laser-submachine-in.png", "img/inv-laser-submachine-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Laser Submachine", "It's the best weapon", Ww.weapon, [
            [item.alloys, 10],
            [item.shapedmetal, 6],
            [item.shapeduranium, 6],
            [item.wires, 2],
            [item.electronicpart, 3]
        ], 1, [
            [station.teslabench, 180000]
        ], 14, item.laserpistol, 2),
        mnw: 37,     //  STATS (damage/food/energy stats)
        vMv: item.energycell,
        stack: 1,
        loot: Mv.lasersubmachine,
        wait: 10
    }, {
        id: item.granade,
        img: {
            src: ["img/inv-grenade-out.png", "img/inv-grenade-in.png", "img/inv-grenade-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Grenade", "Explodes when you throw it away.", Ww.weapon, [
            [item.shapedmetal, 2],
            [item.junk, 2],
            [item.sulfur, 2],
            [item.animalfat, 2]
        ], 2, [
            [station.researchbench, 30000]
        ], 10),
        mnw: 38,     //  STATS (damage/food/energy stats)
        damage: 130,
        WWv: 400,
        stack: 10,
        loot: Mv.granade,
        wait: 10
    }, {
        id: item.superhammer,
        img: {
            src: ["img/inv-super-hammer-out.png", "img/inv-super-hammer-in.png", "img/inv-super-hammer-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Super Hammer", "Destroy indestructible walls."),
        mnw: 39,     //  STATS (damage/food/energy stats)
        stack: 1,
        loot: Mv.superhammer,
        wait: 10
    }, {
        id: item.ghoulblood,
        img: {
            src: ["img/inv-ghoul-blood-out.png", "img/inv-ghoul-blood-in.png", "img/inv-ghoul-blood-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Ghoul Blood", "Find it on speedy ghouls"),
        stack: 255,
        loot: Mv.ghoulblood,
        mW: 100
    }, 

    {
        id: item.camouflage,
        img: {
            src: ["img/inv-camouflage-gear-out.png", "img/inv-camouflage-gear-in.png", "img/inv-camouflage-gear-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Camouflage Gear", "Hide you in the forest", Ww.clothe, [
            [item.wood, 90],
            [item.string, 2],
            [item.leather, 2]
        ], 1, [
            [station.weavingmachine, 40000]
        ]),
        nwm: 16,
        stack: 1,
        loot: Mv.camouflage,
        wait: 10,
        wNV: 0,
        NVw: 0,
        MvM: 0,
        mnm: 0,
        Vww: 0,
        MWw: 0,
        speed: 0
    },

    {
        id: item.agitator,
        img: {
            src: ["img/inv-agitator-out.png", "img/inv-agitator-in.png", "img/inv-agitator-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Agitator", "Allows to craft drugs", Ww.survival, [
            [item.shapedmetal, 6],
            [item.electronicpart, 1]
        ], 1, [
            [station.researchbench, 100000]
        ], 8),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: 100000,
        WvV: 0,
        z: 1,
        MWW: station.agitator,
        stack: 255,
        loot: Mv.agitator,
        wait: 10,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-agitator.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-agitator.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.wNvVV,
        NnN: 16,
        wwN: {
            src: "img/e-agitator.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [{
            src: "img/day-agitator1-off.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-agitator1-on.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-agitator-1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-agitator-2.png",
            W: {
                m: 0
            }
        }],
        NmVwM: [
            [-25.5, 21],
            [-21, -25.5],
            [25.5, -21],
            [21, 25.5]
        ],
        NWm: particulesitems.metalpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 500,
        mW: 0
    }, {
        id: item.ghouldrug,
        img: {
            src: ["img/inv-ghoul-drug-out.png", "img/inv-ghoul-drug-in.png", "img/inv-ghoul-drug-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Ghoul Drug", "Ghouls does not attack you.", Ww.medicine, [
            [item.syringe, 1],
            [item.chemicalcomponent, 1],
            [item.mushroom2, 1],
            [item.mushroom3, 1],
            [item.ghoulblood, 1]
        ], 1, [
            [station.agitator, 30000]
        ], 10),
        mnw: 40,     //  STATS (damage/food/energy stats)
        stack: 5,
        loot: Mv.ghouldrug,
        wait: 10
    }, {
        id: item.mushroom,
        img: {
            src: ["img/inv-mushroom1-out.png", "img/inv-mushroom1-in.png", "img/inv-mushroom1-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Amanita", "Poisoned, really dangerous"),
        stack: 20,
        loot: Mv.mushroom,
        wait: 5,
        vWVMV: 10,
        nNmmM: item.rottenmushroom1,
        mnw: 41,     //  STATS (damage/food/energy stats)
        mW: 24
    }, {
        id: item.mushroom2,
        img: {
            src: ["img/inv-mushroom2-out.png", "img/inv-mushroom2-in.png", "img/inv-mushroom2-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Boletus", "Can be eaten."),
        stack: 20,
        loot: Mv.mushroom2,
        wait: 5,
        vWVMV: 10,
        nNmmM: item.rottenmushroom2,
        mnw: 42,     //  STATS (damage/food/energy stats)
        mW: 24
    }, {
        id: item.mushroom3,
        img: {
            src: ["img/inv-mushroom3-out.png", "img/inv-mushroom3-in.png", "img/inv-mushroom3-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Russula", "Can be eaten."),
        stack: 20,
        loot: Mv.mushroom3,
        wait: 5,
        vWVMV: 10,
        nNmmM: item.rottenmushroom3,
        mnw: 43,     //  STATS (damage/food/energy stats)
        mW: 24
    }, {
        id: item.rottenmushroom1,
        img: {
            src: ["img/inv-rotten-mushroom1-out.png", "img/inv-rotten-mushroom1-in.png", "img/inv-rotten-mushroom1-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Rotten Mushroom", "Go on, have a bite!"),
        stack: 20,
        loot: Mv.rottenmushroom1,
        wait: 5,
        mnw: 44,     //  STATS (damage/food/energy stats)
        mW: 20
    }, {
        id: item.rottenmushroom2,
        img: {
            src: ["img/inv-rotten-mushroom2-out.png", "img/inv-rotten-mushroom2-in.png", "img/inv-rotten-mushroom2-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Rotten Mushroom", "Go on, have a bite!"),
        stack: 20,
        loot: Mv.rottenmushroom2,
        wait: 5,
        mnw: 45,     //  STATS (damage/food/energy stats)
        mW: 20
    }, {
        id: item.rottenmushroom3,
        img: {
            src: ["img/inv-rotten-mushroom3-out.png", "img/inv-rotten-mushroom3-in.png", "img/inv-rotten-mushroom3-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Rotten Mushroom", "Go on, have a bite!"),
        stack: 20,
        loot: Mv.rottenmushroom3,
        wait: 5,
        mnw: 46,     //  STATS (damage/food/energy stats)
        mW: 20
    }, {
        id: item.lapadoine,
        img: {
            src: ["img/inv-lapadoine-out.png", "img/inv-lapadoine-in.png", "img/inv-lapadoine-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Lapadone", "You are faster a certain time.", Ww.medicine, [
            [item.syringe, 1],
            [item.chemicalcomponent, 1],
            [item.mushroom, 1],
            [item.ghoulblood, 1]
        ], 1, [
            [station.agitator, 45000]
        ], 14),
        mnw: 47,     //  STATS (damage/food/energy stats)
        stack: 5,
        loot: Mv.lapadoine,
        wait: 10
    }, {
        id: item.lapabot,
        img: {
            src: ["img/inv-lapabot-out.png", "img/inv-lapabot-in.png", "img/inv-lapabot-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("LapaBot", "Repair your base for you", Ww.survival, [
            [item.shapedmetal, 6],
            [item.electronicpart, 1],
            [item.smallwire, 1],
            [item.alloys, 1]
        ], 1, [
            [station.researchbench, 100000]
        ], 8),
        stack: 5,
        loot: Mv.lapabot,
        MmwnN: Mv.tomato,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [30, 30, 30, 30],
        height: [30, 30, 30, 30],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [35, 35, 35, 35],
        Nmn: [35, 35, 35, 35],
        putableimg: {
            src: "img/clear-blue-lapabot.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-lapabot.png",
            W: {
                m: 0
            }
        },
        WNv: 0,
        mwM: 0,
        behavior: vWN.mMwmV,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.nMnNW,
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [{
            src: "img/lapabot0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/lapabot1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/lapabot2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/lapabot3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/lapabot4.png",
            W: {
                m: 0
            }
        }],
        WnVMV: {
            src: "img/day-lapabot-builder.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.metalpart,
        Mwm: 68,
        WmW: ((5 * 8) * 60) * 1000,
        health: 250,
        mW: 0,
        nMnVw: 315360000000,
        vvMMW: creatures.lapabot,
        vMvvV: 20000,
        mmNMn: 4,
        VVvmM: 1
    }, {
        id: item.smallwire,
        img: {
            src: ["img/inv-small-wire-out.png", "img/inv-small-wire-in.png", "img/inv-small-wire-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Small Wire", "Find it on TV's and computers in abandonned houses"),
        stack: 255,
        loot: Mv.smallwire,
        mW: 40
    }, {
        id: item.pumpkin,
        img: {
            src: ["img/inv-pumpkin-out.png", "img/inv-pumpkin-in.png", "img/inv-pumpkin-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Pumpkin", "Eat it or craft a pumpkin ghoul"),
        stack: 20,
        loot: Mv.pumpkin,
        wait: 5,
        vWVMV: 10,
        nNmmM: item.rottenpumpkin,
        mnw: 48,     //  STATS (damage/food/energy stats)
        mW: 24
    }, {
        id: item.rottenpumpkin,
        img: {
            src: ["img/inv-rotten-pumpkin-out.png", "img/inv-rotten-pumpkin-in.png", "img/inv-rotten-pumpkin-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Rotten Pumpkin", "You should not click"),
        stack: 20,
        loot: Mv.rottenpumpkin,
        wait: 5,
        mnw: 49,     //  STATS (damage/food/energy stats)
        mW: 20
    }, {
        id: item.ghoulseed,
        img: {
            src: ["img/inv-ghoul5-out.png", "img/inv-ghoul5-in.png", "img/inv-ghoul5-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Ghoul Seed", "Plant your pumpkin pet", -1, [
            [item.pumpkin, 1],
            [item.ghoulblood, 1]
        ], 1, [
            [station.firepart, 30000],
            [station.bbq, 20000]
        ], 99),
        stack: 40,
        loot: Mv.ghoulseed,
        MmwnN: Mv.tomato,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [30, 30, 30, 30],
        height: [30, 30, 30, 30],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [35, 35, 35, 35],
        Nmn: [35, 35, 35, 35],
        putableimg: {
            src: "img/clear-blue-root.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-root.png",
            W: {
                m: 0
            }
        },
        WNv: 0,
        mwM: 0,
        behavior: vWN.mMwmV,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.MWnVn,
        impactaudio: objectaudio.pillow,
        destroyaudio: objectaudio.pillowdes,
        Nn: [{
            src: "img/day-root0-ghoul.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-root1-ghoul.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-root2-ghoul.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-root3-ghoul.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-root4-ghoul.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.orange,
        Mwm: 68,
        WmW: ((5 * 8) * 60) * 1000,
        health: 250,
        mW: 0,
        nMnVw: 120000,
        vvMMW: creatures.pumpkinghoul,
        vMvvV: 15000,
        mmNMn: 3,
        VVvmM: 0
    }, {
        id: item.extractor,
        img: {
            src: ["img/inv-extractor-out.png", "img/inv-extractor-in.png", "img/inv-extractor-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Extractor", "Allows you to extract minerals from the ground", Ww.survival, [
            [item.alloys, 2],
            [item.shapedmetal, 10],
            [item.shapeduranium, 2],
            [item.smallwire, 2],
            [item.electronicpart, 1]
        ], 1, [
            [station.researchbench, 100000]
        ], 12),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: 740000,
        WvV: 0,
        z: 1,
        MWW: station.extractor,
        stack: 255,
        loot: Mv.extractor,
        wait: 10,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-extractor.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-extractor.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.vwMnv,
        NnN: 16,
        wwN: {
            src: "img/e-extractor.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [{
            src: "img/day-extractor.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-extractor-rotate.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-extractor-off.png",
            W: {
                m: 0
            }
        }],
        NmVwM: [
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0]
        ],
        NWm: particulesitems.metalpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 500,
        mW: 0
    }, {
        id: item.antidote,
        img: {
            src: ["img/inv-antidote-out.png", "img/inv-antidote-in.png", "img/inv-antidote-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Antidote", "Remove the withdrawal effects (pink skin)", Ww.medicine, [
            [item.syringe, 1],
            [item.chemicalcomponent, 1],
            [item.mushroom, 1],
            [item.antidoteflower, 1]
        ], 1, [
            [station.agitator, 45000]
        ], 14),
        mnw: 50,     //  STATS (damage/food/energy stats)
        stack: 5,
        loot: Mv.antidote,
        wait: 10
    }, {
        id: item.antidoteflower,
        img: {
            src: ["img/inv-antidote-flower-out.png", "img/inv-antidote-flower-in.png", "img/inv-antidote-flower-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Rare Flower", "Use it to make an antidote"),
        stack: 5,
        loot: Mv.antidoteflower,
        mW: 400
    }, {
        id: item.treeseed,
        img: {
            src: ["img/inv-seed-tree-out.png", "img/inv-seed-tree-in.png", "img/inv-seed-tree-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Tree Seed", "Plant your forest", Ww.plant, [
            [item.acorn, 1]
        ], 5, [
            [station.firepart, 60000],
            [station.bbq, 40000]
        ]),
        stack: 100,
        loot: Mv.treeseed,
        MmwnN: Mv.orange,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [30, 30, 30, 30],
        height: [30, 30, 30, 30],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [35, 35, 35, 35],
        Nmn: [35, 35, 35, 35],
        putableimg: {
            src: "img/clear-blue-plant-tree.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-plant-tree.png",
            W: {
                m: 0
            }
        },
        WNv: 0,
        mwM: 0,
        behavior: vWN.Mwmnm,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.NMVvM,
        impactaudio: objectaudio.wood,
        destroyaudio: objectaudio.wooddes,
        Nn: [{
            src: "img/day-plant-tree0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-plant-tree1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-plant-tree2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-plant-tree3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-plant4-orange.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.wood,
        Mwm: 68,
        WmW: ((5 * 8) * 60) * 1000,
        health: 150,
        mW: 0
    }, {
        id: item.acorn,
        img: {
            src: ["img/inv-acorn-out.png", "img/inv-acorn-in.png", "img/inv-acorn-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Acorn", "Eat it or plant a tree"),
        stack: 20,
        loot: Mv.acorn,
        wait: 5,
        vWVMV: 3,
        nNmmM: item.rottenacorn,
        mnw: 51,     //  STATS (damage/food/energy stats)
        mW: 24
    }, {
        id: item.rottenacorn,
        img: {
            src: ["img/inv-rotten-acorn-out.png", "img/inv-rotten-acorn-in.png", "img/inv-rotten-acorn-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Rotten Acorn", "Not really good"),
        stack: 20,
        loot: Mv.rottenacorn,
        wait: 5,
        mnw: 52,     //  STATS (damage/food/energy stats)
        mW: 20
    }, {
        id: item.lasersniper,
        img: {
            src: ["img/inv-laser-sniper-out.png", "img/inv-laser-sniper-in.png", "img/inv-laser-sniper-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Laser Sniper", "Faster than a sniper", Ww.weapon, [
            [item.alloys, 8],
            [item.shapedmetal, 6],
            [item.shapeduranium, 5],
            [item.wires, 3],
            [item.electronicpart, 3]
        ], 1, [
            [station.teslabench, 180000]
        ], 14, item.laserpistol, 2),
        mnw: 53,     //  STATS (damage/food/energy stats)
        vMv: item.energycell,
        stack: 1,
        loot: Mv.lasersniper,
        wait: 10
    }, {
        id: item.halbot,
        img: {
            src: ["img/inv-hal-bot-out.png", "img/inv-hal-bot-in.png", "img/inv-hal-bot-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("HAL Bot", "Protect you", Ww.survival, [
            [item.shapedmetal, 6],
            [item.electronicpart, 1],
            [item.smallwire, 1],
            [item.alloys, 1]
        ], 1, [
            [station.researchbench, 100000]
        ], 8),
        stack: 5,
        loot: Mv.halbot,
        MmwnN: Mv.tomato,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [30, 30, 30, 30],
        height: [30, 30, 30, 30],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [35, 35, 35, 35],
        Nmn: [35, 35, 35, 35],
        putableimg: {
            src: "img/clear-blue-hal-bot.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-hal-bot.png",
            W: {
                m: 0
            }
        },
        WNv: 0,
        mwM: 0,
        behavior: vWN.mMwmV,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.nMnNW,
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [{
            src: "img/hal-bot0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/hal-bot1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/hal-bot2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/hal-bot3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/hal-bot4.png",
            W: {
                m: 0
            }
        }],
        WnVMV: {
            src: "img/day-hal-bot-builder.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.metalpart,
        Mwm: 68,
        WmW: ((5 * 8) * 60) * 1000,
        health: 400,
        mW: 0,
        nMnVw: 315360000000,
        vvMMW: creatures.halbot,
        vMvvV: 8000,
        mmNMn: 4,
        VVvmM: 1
    }, {
        id: item.teslabot,
        img: {
            src: ["img/inv-tesla-bot-out.png", "img/inv-tesla-bot-in.png", "img/inv-tesla-bot-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Tesla Bot", "Protect you", Ww.survival, [
            [item.shapeduranium, 3],
            [item.electronicpart, 1],
            [item.smallwire, 3],
            [item.wires, 3],
            [item.alloys, 3]
        ], 1, [
            [station.teslabench, 200000]
        ], 16),
        stack: 5,
        loot: Mv.teslabot,
        MmwnN: Mv.tomato,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [30, 30, 30, 30],
        height: [30, 30, 30, 30],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [35, 35, 35, 35],
        Nmn: [35, 35, 35, 35],
        putableimg: {
            src: "img/clear-blue-tesla-bot.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-tesla-bot.png",
            W: {
                m: 0
            }
        },
        WNv: 0,
        mwM: 0,
        behavior: vWN.mMwmV,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.nMnNW,
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [{
            src: "img/tesla-bot0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/tesla-bot1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/tesla-bot2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/tesla-bot3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/tesla-bot4.png",
            W: {
                m: 0
            }
        }],
        WnVMV: {
            src: "img/day-lapabot-builder.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.metalpart,
        Mwm: 68,
        WmW: ((5 * 8) * 60) * 1000,
        health: 500,
        mW: 0,
        nMnVw: 315360000000,
        vvMMW: creatures.teslabot,
        vMvvV: 20000,
        mmNMn: 4,
        VVvmM: 1
    }, {
        id: item.cable,
        img: {
            src: ["img/inv-wire0-out.png", "img/inv-wire0-in.png", "img/inv-wire0-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Cable", "Create automatic mechanisms", Ww.cable, [
            [item.smallwire, 1]
        ], 3, [
            [station.weldingmachine, 15000]
        ]),
        stack: 255,
        loot: Mv.cable,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-wire0.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-wire0.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.cable,
        mwv: 0,
        MWv: [
            [1, 1, 0, 0],
            [0, 0, 1, 1],
            [1, 1, 0, 0],
            [0, 0, 1, 1]
        ],
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.NnMNn,
        impactaudio: objectaudio.pillow,
        destroyaudio: objectaudio.pillowdes,
        Nn: {
            src: "img/day-wire0.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.barrel,
        Mwm: 40,
        WmW: 315360000000,
        health: 250,
        mW: 0
    }, {
        id: item.cable2,
        img: {
            src: ["img/inv-wire1-out.png", "img/inv-wire1-in.png", "img/inv-wire1-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Cable", "Create automatic mechanisms", Ww.cable, [
            [item.smallwire, 1]
        ], 3, [
            [station.weldingmachine, 15000]
        ]),
        stack: 255,
        loot: Mv.cable2,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-wire1.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-wire1.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.cable,
        mwv: 0,
        MWv: [
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 1]
        ],
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.NnMNn,
        impactaudio: objectaudio.pillow,
        destroyaudio: objectaudio.pillowdes,
        Nn: {
            src: "img/day-wire1.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.barrel,
        Mwm: 40,
        WmW: 315360000000,
        health: 250,
        mW: 0
    }, {
        id: item.cable3,
        img: {
            src: ["img/inv-wire2-out.png", "img/inv-wire2-in.png", "img/inv-wire2-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Cable", "Create automatic mechanisms", Ww.cable, [
            [item.smallwire, 1]
        ], 3, [
            [station.weldingmachine, 15000]
        ]),
        stack: 255,
        loot: Mv.cable3,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-wire2.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-wire2.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.cable,
        mwv: 0,
        MWv: [
            [0, 1, 0, 1],
            [0, 1, 1, 0],
            [1, 0, 1, 0],
            [1, 0, 0, 1]
        ],
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.NnMNn,
        impactaudio: objectaudio.pillow,
        destroyaudio: objectaudio.pillowdes,
        Nn: {
            src: "img/day-wire2.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.barrel,
        Mwm: 40,
        WmW: 315360000000,
        health: 250,
        mW: 0
    }, {
        id: item.cable4,
        img: {
            src: ["img/inv-wire3-out.png", "img/inv-wire3-in.png", "img/inv-wire3-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Cable", "Create automatic mechanisms", Ww.cable, [
            [item.smallwire, 1]
        ], 3, [
            [station.weldingmachine, 15000]
        ]),
        stack: 255,
        loot: Mv.cable4,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-wire3.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-wire3.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.cable,
        mwv: 0,
        MWv: [
            [0, 1, 1, 1],
            [1, 1, 1, 0],
            [1, 0, 1, 1],
            [1, 1, 0, 1]
        ],
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.NnMNn,
        impactaudio: objectaudio.pillow,
        destroyaudio: objectaudio.pillowdes,
        Nn: {
            src: "img/day-wire3.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.barrel,
        Mwm: 40,
        WmW: 315360000000,
        health: 250,
        mW: 0
    }, {
        id: item.switch,
        img: {
            src: ["img/inv-switch-out.png", "img/inv-switch-in.png", "img/inv-switch-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Switch", "Turn on/off mechanisms", Ww.cable, [
            [item.shapedmetal, 1],
            [item.smallwire, 1]
        ], 3, [
            [station.weldingmachine, 15000]
        ]),
        stack: 255,
        loot: Mv.switch,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-switch.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-switch.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.cable,
        mwv: 1,
        MWv: [
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 1]
        ],
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.mvVVM,
        NnN: 37,
        wwN: {
            src: "img/e-turnon.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [{
            src: "img/day-switch-off.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-switch-on.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.metalpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 250,
        mW: 0
    }, {
        id: item.orgate,
        img: {
            src: ["img/inv-switch-or-out.png", "img/inv-switch-or-in.png", "img/inv-switch-or-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Gate OR", "Activate only if an entry is on.", Ww.cable, [
            [item.shapedmetal, 1],
            [item.smallwire, 1]
        ], 3, [
            [station.weldingmachine, 15000]
        ]),
        stack: 255,
        loot: Mv.orgate,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-switch-or.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-switch-or.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.cable,
        mwv: 1,
        MWv: [
            [1, 0, 0, 0],
            [0, 0, 0, 1],
            [0, 1, 0, 0],
            [0, 0, 1, 0]
        ],
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.NnMNn,
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: {
            src: "img/day-switch-or.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.metalpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 250,
        mW: 0
    }, {
        id: item.andgate,
        img: {
            src: ["img/inv-switch-and-out.png", "img/inv-switch-and-in.png", "img/inv-switch-and-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Gate AND", "Activate only if all entries are on.", Ww.cable, [
            [item.shapedmetal, 1],
            [item.smallwire, 1]
        ], 3, [
            [station.weldingmachine, 15000]
        ]),
        stack: 255,
        loot: Mv.andgate,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-switch-and.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-switch-and.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.cable,
        mwv: 1,
        MWv: [
            [1, 0, 0, 0],
            [0, 0, 0, 1],
            [0, 1, 0, 0],
            [0, 0, 1, 0]
        ],
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.NnMNn,
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: {
            src: "img/day-switch-and.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.metalpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 250,
        mW: 0
    }, {
        id: item.notgate,
        img: {
            src: ["img/inv-switch-reverse-out.png", "img/inv-switch-reverse-in.png", "img/inv-switch-reverse-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Gate NOT", "Activate only if no entry is on.", Ww.cable, [
            [item.shapedmetal, 1],
            [item.smallwire, 1]
        ], 3, [
            [station.weldingmachine, 15000]
        ]),
        stack: 255,
        loot: Mv.notgate,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-switch-reverse.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-switch-reverse.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.cable,
        mwv: 1,
        MWv: [
            [1, 0, 1, 1],
            [1, 1, 0, 1],
            [0, 1, 1, 1],
            [1, 1, 1, 0]
        ],
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.NnMNn,
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: {
            src: "img/day-switch-reverse.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.metalpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 250,
        mW: 0
    }, {
        id: item.lamp,
        img: {
            src: ["img/inv-lamp-white-out.png", "img/inv-lamp-white-in.png", "img/inv-lamp-white-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Lamp", "Turn on when connected, damage ghoul", Ww.cable, [
            [item.shapedmetal, 1],
            [item.smallwire, 1]
        ], 3, [
            [station.weldingmachine, 15000]
        ]),
        stack: 255,
        loot: Mv.lamp,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-lamp.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-lamp.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.cable,
        mwv: 0,
        MWv: [
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 1]
        ],
        nvN: 0,
        MMN: 2,
        wwW: 22,
        WnW: 0,
        NM: Mw.vnVwv,
        VvmvM: Mw.mVwvv,
        NnN: 36,
        wwN: {
            src: "img/e-light.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: {
            src: "img/day-lamp-off.png",
            W: {
                m: 0
            }
        },
        wVnWm: [{
            src: "img/day-lamp-white.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-lamp-yellow.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-lamp-green.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-lamp-clear-blue.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-lamp-purple.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-lamp-pink.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-lamp-orange.png",
            W: {
                m: 0
            }
        }],
        MwmWn: [{
            src: "img/day-lamp-light-white.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-lamp-light-yellow.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-lamp-light-green.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-lamp-light-clear-blue.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-lamp-light-purple.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-lamp-light-pink.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-lamp-light-orange.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.metalpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 600,
        mW: 0
    }, {
        id: item.cablewall,
        img: {
            src: ["img/inv-cable-wall-out.png", "img/inv-cable-wall-in.png", "img/inv-cable-wall-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Cable  - Wall", "Wall that can be connected to a cable", Ww.cable, [
            [item.shapedmetal, 8],
            [item.smallwire, 1]
        ], 1, [
            [station.weldingmachine, 15000]
        ], 7),
        stack: 255,
        loot: Mv.cablewall,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 0,
        z: 1,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-cable-wall.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-cable-wall.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.cable,
        mwv: 0,
        MWv: [
            [1, 1, 0, 0],
            [0, 0, 1, 1],
            [1, 1, 0, 0],
            [0, 0, 1, 1]
        ],
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.VWWwm,
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [{
            src: "img/day-cable-wall.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-cable-wall1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-cable-wall2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-cable-wall3.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.metalpart,
        Mwm: 40,
        WmW: 315360000000,
        health: 15000,
        mW: 0
    }, {
        id: item.autodoor,
        img: {
            src: ["img/inv-automatic-door-out.png", "img/inv-automatic-door-in.png", "img/inv-automatic-door-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Automatic Door", "Connect it to a switch to open and close it.", Ww.cable, [
            [item.shapedmetal, 8],
            [item.smallwire, 2],
            [item.electronicpart, 1]
        ], 1, [
            [station.weldingmachine, 15000]
        ], 7),
        stack: 255,
        loot: Mv.autodoor,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 0,
        z: 1,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-automatic-door.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-automatic-door.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.cable,
        mwv: 0,
        MWv: [
            [0, 1, 1, 1],
            [1, 1, 1, 0],
            [1, 0, 1, 1],
            [1, 1, 0, 1]
        ],
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.WvNvn,
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [
            [{
                src: "img/day-automatic-door-off.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-automatic-door1-off.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-automatic-door2-off.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-automatic-door3-off.png",
                W: {
                    m: 0
                }
            }],
            [{
                src: "img/day-automatic-door-on.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-automatic-door1-on.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-automatic-door2-on.png",
                W: {
                    m: 0
                }
            }, {
                src: "img/day-automatic-door3-on.png",
                W: {
                    m: 0
                }
            }]
        ],
        NWm: particulesitems.metalpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 15000,
        mW: 0
    }, {
        id: item.platform,
        img: {
            src: ["img/inv-platform-out.png", "img/inv-platform-in.png", "img/inv-platform-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Platform", "Weight detector", Ww.cable, [
            [item.shapedmetal, 1],
            [item.smallwire, 1]
        ], 3, [
            [station.weldingmachine, 15000]
        ]),
        stack: 255,
        loot: Mv.platform,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-platform-off.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-platform-off.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.cable,
        mwv: 1,
        MWv: [
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 1]
        ],
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.mvWww,
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: {
            src: "img/day-platform-off.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.fridge,
        Mwm: 80,
        WmW: 315360000000,
        health: 250,
        mW: 0
    }, {
        id: item.stonecave,
        img: {
            src: ["img/inv-stone-cave-out.png", "img/inv-stone-cave-in.png", "img/inv-stone-cave-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Stone Cave", "Build mountains.", -1, [
            [item.stone, 140]
        ], 1, [
            [station.workbench, 30000]
        ], 99),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 1,
        z: 1,
        stack: 255,
        loot: Mv.stonecave,
        wait: 10,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-stone-cave.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-stone-cave.png",
            W: {
                m: 0
            }
        },
        Mvw: 1,
        vVwVM: item.stonecave,
        VWN: 0,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.Mvw,
        MmvNw: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        WVW: [{
            src: "img/day-stone-cave-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.stone,
        destroyaudio: objectaudio.stonedes,
        Nn: [{
            src: "img/day-stone-cave0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave7.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave8.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave9.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave10.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave11.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave12.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave13.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave14.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave15.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave16.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave17.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave18.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave19.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave20.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave21.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave22.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave23.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave24.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave25.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave26.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave27.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave28.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave29.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave30.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave31.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave32.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave33.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave34.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave35.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave36.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave37.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave38.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave39.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave40.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave41.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave42.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave43.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave44.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave45.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-stone-cave46.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.stone,
        Mwm: 80,
        WmW: 315360000000,
        health: 300,
        mW: 0
    }, {
        id: item.bunkerwall,
        img: {
            src: ["img/inv-bunker-wall-out.png", "img/inv-bunker-wall-in.png", "img/inv-bunker-wall-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Bunker Wall", "Good old memory of the wasteland.", -1, [
            [item.stone, 150],
            [item.shapedmetal, 12]
        ], 1, [
            [station.workbench, 30000]
        ], 99),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 1,
        z: 1,
        stack: 255,
        loot: Mv.bunkerwall,
        wait: 10,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-bunker-wall.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-bunker-wall.png",
            W: {
                m: 0
            }
        },
        Mvw: 1,
        vVwVM: item.stonecave,
        VWN: 0,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.Mvw,
        MmvNw: [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        WVW: [{
            src: "img/day-bunker-wall-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [{
            src: "img/day-bunker-wall0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall7.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall8.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall9.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall10.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall11.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall12.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall13.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall14.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall15.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall16.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall17.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall18.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall19.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall20.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall21.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall22.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall23.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall24.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall25.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall26.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall27.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall28.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall29.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall30.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall31.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall32.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall33.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall34.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall35.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall36.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall37.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall38.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall39.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall40.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall41.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall42.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall43.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall44.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall45.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-bunker-wall46.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.steel,
        Mwm: 80,
        WmW: 315360000000,
        health: 10000,
        mW: 0
    }, {
        id: item.mustardfloor,
        img: {
            src: ["img/inv-mustard-floor-out.png", "img/inv-mustard-floor-in.png", "img/inv-mustard-floor-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Golden Floor", "Players can't spawn on it", Ww.building, [
            [item.leather, 2]
        ], 2, [
            [station.workbench, 15000]
        ]),
        stack: 255,
        loot: Mv.mustardfloor,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 2,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-stone-floor.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-stone-floor.png",
            W: {
                m: 0
            }
        },
        Mvw: 1,
        vVwVM: item.mustardfloor,
        VWN: 0,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.nwVWW,
        WVW: [{
            src: "img/day-mustard-floor-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.pillowdes,
        Nn: [{
            src: "img/day-mustard-floor-0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-7.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-8.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-9.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-10.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-11.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-12.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-13.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-14.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-15.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-16.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-17.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-18.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-19.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-20.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-21.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-22.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-23.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-24.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-25.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-26.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-27.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-28.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-29.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-30.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-31.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-32.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-33.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-34.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-35.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-36.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-37.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-38.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-39.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-40.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-41.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-42.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-43.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-44.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-45.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-mustard-floor-46.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.gold,
        Mwm: 80,
        WmW: 315360000000,
        health: 3000,
        mW: 0
    }, {
        id: item.redfloor,
        img: {
            src: ["img/inv-red-floor-out.png", "img/inv-red-floor-in.png", "img/inv-red-floor-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Red floor", "Players can't spawn on it", Ww.building, [
            [item.leather, 2]
        ], 2, [
            [station.workbench, 15000]
        ]),
        stack: 255,
        loot: Mv.redfloor,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 2,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/day-clear-blue-stone-floor.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/day-redprint-stone-floor.png",
            W: {
                m: 0
            }
        },
        Mvw: 1,
        vVwVM: item.redfloor,
        VWN: 0,
        WNv: 0,
        Vvm: 1,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.nwVWW,
        WVW: [{
            src: "img/day-red-floor-broken0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-broken1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-broken2.png",
            W: {
                m: 0
            }
        }],
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.pillowdes,
        Nn: [{
            src: "img/day-red-floor-0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-3.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-4.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-5.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-6.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-7.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-8.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-9.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-10.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-11.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-12.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-13.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-14.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-15.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-16.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-17.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-18.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-19.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-20.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-21.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-22.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-23.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-24.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-25.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-26.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-27.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-28.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-29.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-30.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-31.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-32.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-33.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-34.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-35.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-36.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-37.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-38.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-39.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-40.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-41.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-42.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-43.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-44.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-45.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-red-floor-46.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.mushroom,
        Mwm: 80,
        WmW: 315360000000,
        health: 3000,
        mW: 0
    }, {
        id: item.weldingmachine,
        img: {
            src: ["img/inv-welding-machine-out.png", "img/inv-welding-machine-in.png", "img/inv-welding-machine-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Welding Machine", "Allow you to make logic gates", Ww.survival, [
            [item.junk, 2],
            [item.shapedmetal, 4],
            [item.electronicpart, 1]
        ], 1, [
            [station.workbench, 50000]
        ]),
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: 0,
        z: 1,
        MWW: station.weldingmachine,
        stack: 255,
        loot: Mv.weldingmachine,
        wait: 10,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-welding-machine.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-welding-machine.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.nwv,
        MWv: 0,
        nvN: 0,
        MMN: 1,
        WnW: 0,
        NM: Mw.nwWMW,
        NnN: 16,
        wwN: {
            src: "img/e-welding-machine.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: {
            src: "img/day-welding-machine.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.metalpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 500,
        mW: 0
    }, {
        id: item.cable4,
        img: {
            src: ["img/inv-wire4-out.png", "img/inv-wire4-in.png", "img/inv-wire4-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Cable  - Bridge", "Create automatic mechanisms", Ww.cable, [
            [item.smallwire, 1]
        ], 3, [
            [station.weldingmachine, 15000]
        ]),
        stack: 255,
        loot: Mv.cable4,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-wire4.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-wire4.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.cable,
        mwv: 0,
        MWv: [
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 1]
        ],
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.NnMNn,
        impactaudio: objectaudio.pillow,
        destroyaudio: objectaudio.pillowdes,
        Nn: {
            src: "img/day-wire4.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.barrel,
        Mwm: 40,
        WmW: 315360000000,
        health: 250,
        mW: 0
    }, {
        id: item.timer,
        img: {
            src: ["img/inv-timer-out.png", "img/inv-timer-in.png", "img/inv-timer-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Gate Timer", "Emit a signal regularly.", Ww.cable, [
            [item.shapedmetal, 1],
            [item.smallwire, 1]
        ], 3, [
            [station.weldingmachine, 15000]
        ]),
        stack: 255,
        loot: Mv.timer,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-timer.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-timer.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.cable,
        mwv: 1,
        MWv: [
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 1],
            [1, 1, 1, 1]
        ],
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.Mvnmn,
        NnN: 38,
        wwN: {
            src: "img/e-light.png",
            W: {
                m: 0
            }
        },
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: [{
            src: "img/day-timer-0.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-timer-1.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-timer-2.png",
            W: {
                m: 0
            }
        }, {
            src: "img/day-timer-3.png",
            W: {
                m: 0
            }
        }],
        NWm: particulesitems.metalpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 250,
        mW: 0
    }, {
        id: item.xorgate,
        img: {
            src: ["img/inv-xor-out.png", "img/inv-xor-in.png", "img/inv-xor-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Gate Xor", "Activate only if only one entry is on.", Ww.cable, [
            [item.shapedmetal, 1],
            [item.smallwire, 1]
        ], 3, [
            [station.weldingmachine, 15000]
        ]),
        stack: 255,
        loot: Mv.xorgate,
        wait: 10,
        mnw: 21,     //  STATS (damage/food/energy stats)
        MNM: -1,
        WvV: -1,
        z: 0,
        mN: 1000,
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        Wwv: [0, 0, 0, 0],
        nWn: [0, 0, 0, 0],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        putableimg: {
            src: "img/clear-blue-xor.png",
            W: {
                m: 0
            }
        },
        notputableimg: {
            src: "img/redprint-xor.png",
            W: {
                m: 0
            }
        },
        Mvw: 0,
        VWN: 0,
        WNv: 0,
        Vvm: 0,
        mwM: 0,
        behavior: vWN.cable,
        mwv: 1,
        MWv: [
            [1, 0, 0, 0],
            [0, 0, 0, 1],
            [0, 1, 0, 0],
            [0, 0, 1, 0]
        ],
        nvN: 0,
        MMN: 0,
        WnW: 0,
        NM: Mw.NnMNn,
        impactaudio: objectaudio.metal,
        destroyaudio: objectaudio.metaldes,
        Nn: {
            src: "img/day-xor.png",
            W: {
                m: 0
            }
        },
        NWm: particulesitems.metalpart,
        Mwm: 80,
        WmW: 315360000000,
        health: 250,
        mW: 0
    },
    
    // VISION SCALE

    {
        id: item.skilleye1,
        img: {
            src: ["img/skill-eye1-out.png", "img/skill-eye1-in.png", "img/skill-eye1-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Vision 1", "Improve your vision", Ww.skill, win.undefined, win.undefined, win.undefined, 0),
        scale: -0.25
    },
    
    {
        id: item.skilleye2,
        img: {
            src: ["img/skill-eye2-out.png", "img/skill-eye2-in.png", "img/skill-eye2-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Vision 2", "Improve your vision", Ww.skill, win.undefined, win.undefined, win.undefined, 5, item.skilleye1),
        scale: -0.35
    },
    
    {
        id: item.skilleye3,
        img: {
            src: ["img/skill-eye3-out.png", "img/skill-eye3-in.png", "img/skill-eye3-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Vision 3", "Improve your vision", Ww.skill, win.undefined, win.undefined, win.undefined, 7, item.skilleye2),
        scale: -0.45
    },
    
    // VISION END

    {
        id: item.builderskill1,
        img: {
            src: ["img/skill-builder1-out.png", "img/skill-builder1-in.png", "img/skill-builder1-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Builder 1", "Multiplies some craft by two", Ww.skill, win.undefined, win.undefined, win.undefined, 6, win.undefined, 2)
    }, {
        id: item.builderskill2,
        img: {
            src: ["img/skill-builder2-out.png", "img/skill-builder2-in.png", "img/skill-builder2-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Builder 2", "Repair much faster", Ww.skill, win.undefined, win.undefined, win.undefined, 18, item.builderskill1)
    },
    
    // INVENTORY

    {
        id: item.inventoryskill1,
        img: {
            src: ["img/skill-inv1-out.png", "img/skill-inv1-in.png", "img/skill-inv1-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Inventory 1", "Add a slot in your inventory", Ww.skill, win.undefined, win.undefined, win.undefined, 0),
        vvmNV: 1
    },

    {
        id: item.inventoryskill2,
        img: {
            src: ["img/skill-inv2-out.png", "img/skill-inv2-in.png", "img/skill-inv2-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Inventory 2", "Add a slot in your inventory", Ww.skill, win.undefined, win.undefined, win.undefined, 5, item.inventoryskill1),
        vvmNV: 1
    },
    
    {
        id: item.inventoryskill3,
        img: {
            src: ["img/skill-inv3-out.png", "img/skill-inv3-in.png", "img/skill-inv3-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Inventory 3", "Add a slot in your bag", Ww.skill, win.undefined, win.undefined, win.undefined, 7, item.inventoryskill2),
        vvmNV: 1
    },
    
    {
        id: item.inventoryskill4,
        img: {
            src: ["img/skill-inv4-out.png", "img/skill-inv4-in.png", "img/skill-inv4-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Inventory 4", "Add two slots in your bag", Ww.skill, win.undefined, win.undefined, win.undefined, 10, item.inventoryskill3, 2),
        vvmNV: 2
    },

    {
        id: item.inventoryskill5,
        img: {
            src: ["img/skill-inv5-out.png", "img/skill-inv5-in.png", "img/skill-inv5-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Inventory 5", "Add three slots in your bag", Ww.skill, win.undefined, win.undefined, win.undefined, 12, item.inventoryskill4, 3),
        vvmNV: 3
    },
    
       // INVENTORY END

       
    {
        id: item.lightweightskill,
        img: {
            src: ["img/skill-lightweight-out.png", "img/skill-lightweight-in.png", "img/skill-lightweight-click.png"],
            W: [{
                m: 0
            }, {
                m: 0
            }, {
                m: 0
            }]
        },
        detail: new vn("Light Weight", "Less likely to trigger traps.", Ww.skill, win.undefined, win.undefined, win.undefined, 8)
    }];
    Nw = 0;
    var nW = {
        sofapart: Nw++,
        sofapart2: Nw++,
        sofapart3: Nw++,
        WwvNW: Nw++,
        NWNnm: Nw++,
        bedpart: Nw++,
        bedpart2: Nw++,
        vWVWW: Nw++,
        textnumberitem: Nw++,
        WNVMm: Nw++,
        NvWVV: Nw++,
        NMvVn: Nw++,
        VWw: Nw++,
        MVvwm: Nw++,
        mmV: Nw++,
        wwVWW: Nw++,
        NwvnV: Nw++,
        vWwVv: Nw++,
        safepart: Nw++,
        vwNWV: Nw++,
        wnMNM: Nw++,
        WNWVm: Nw++,
        nWwvV: Nw++,
        MnWmv: Nw++,
        vVV: Nw++,
        vMw: Nw++,
        garbagepart: Nw++,
        mmwVV: Nw++,
        VVvnV: Nw++,
        nnMmW: Nw++,
        MNmWW: Nw++,
        NnwvW: Nw++,
        Vnwmv: Nw++,
        mmmwn: Nw++,
        nNnVv: Nw++,
        nnM: Nw++,
        NvmwW: Nw++,
        vwmnW: Nw++,
        nmWMm: Nw++,
        wNmMv: Nw++,
        vWwmV: Nw++,
        NNvnv: Nw++,
        vNWWv: Nw++,
        VWnwN: Nw++,
        NWwwM: Nw++,
        NMWVV: Nw++,
        WVWWM: Nw++,
        wVmWM: Nw++,
        WmNvV: Nw++,
        WmmNw: Nw++,
        Mmvmn: Nw++,
        VwWNv: Nw++,
        NwwNM: Nw++,
        NvVmW: Nw++,
        MMmnW: Nw++,
        nWNnm: Nw++,
        nVwnn: Nw++,
        VmNVm: Nw++,
        NVwVM: Nw++
    };
    Nw = 0;
    var MwmnM = items[item.NvMvM].nvN;
    MwmnM[Nw] = {
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.VNv,
        Nn: {
            src: "img/day-road0.png",
            W: {
                m: 0
            }
        },
        detail: new vn("", "", -1, [
            [item.stone, 100]
        ]),
        health: 100000000,
        mW: 0,
        NWm: particulesitems.woodtree,
        Mwm: 70,
        angle: win.Math.PI,
        WvwVM: 0,
        VVmmM: 0,
        loot: null,
        MMN: 0,
        z: 0,
        WvV: 2,
        WnW: 0,
        WmW: 315360000000
    };
    for (var place = 0; place < 45; place++) {
        Nw++;
        MwmnM[Nw] = win.JSON.parse(win.JSON.stringify(MwmnM[0]));
        MwmnM[Nw].Nn.src = ("img/day-road" + Nw) + ".png";
    }
    var VV = items[item.MMnVW].nvN;
    VV[nW.sofapart] = {
        width: [100, 100, 100, 100],
        height: [100, 100, 100, 100],
        wwn: [0, 0, 0, 0],
        Nmn: [0, 0, 0, 0],
        impactaudio: objectaudio.pillow,
        destroyaudio: objectaudio.pillowdes,
        Nn: {
            src: "img/day-sofa0.png",
            W: {
                m: 0
            }
        },
        detail: new vn("", "", -1, [
            [item.wood, 99],
            [item.leather, 9],
            [item.string, 6]
        ]),
        health: 450,
        mW: 0,
        NWm: particulesitems.sofapart,
        Mwm: 70,
        angle: win.Math.PI,
        WvwVM: 0,
        VVmmM: 0,
        loot: null,
        MMN: 1,
        z: 1,
        WvV: 0,
        WnW: 0,
        NnN: 25,
        mwM: 0,
        damage: 0,
        WWv: 0,
        WmW: 315360000000
    };
    VV[nW.sofapart2] = win.JSON.parse(win.JSON.stringify(VV[nW.sofapart]));
    VV[nW.sofapart2].Nn.src = "img/day-sofa1.png";
    VV[nW.sofapart2].NWm = particulesitems.sofapart2;
    VV[nW.sofapart3] = win.JSON.parse(win.JSON.stringify(VV[nW.sofapart2]));
    VV[nW.sofapart3].Nn.src = "img/day-sofa2.png";
    VV[nW.WwvNW] = win.JSON.parse(win.JSON.stringify(VV[nW.sofapart]));
    VV[nW.WwvNW].Nn.src = "img/day-sofa3.png";
    VV[nW.WwvNW].NWm = particulesitems.sofapart3;
    VV[nW.NWNnm] = win.JSON.parse(win.JSON.stringify(VV[nW.WwvNW]));
    VV[nW.NWNnm].Nn.src = "img/day-sofa4.png";
    VV[nW.vNWWv] = win.JSON.parse(win.JSON.stringify(VV[nW.WwvNW]));
    VV[nW.vNWWv].Nn.src = "img/day-sofa6.png";
    VV[nW.NNvnv] = win.JSON.parse(win.JSON.stringify(VV[nW.sofapart]));
    VV[nW.NNvnv].Nn.src = "img/day-renforced-door.png";
    VV[nW.NNvnv].NWm = particulesitems.steel;
    VV[nW.NNvnv].detail = new vn("", "", -1, [
        [item.shapedmetal, 40]
    ]);
    VV[nW.NNvnv].health = 7000;
    VV[nW.mmmwn] = win.JSON.parse(win.JSON.stringify(VV[nW.sofapart]));
    VV[nW.mmmwn].Nn.src = "img/day-electronic-box0.png";
    VV[nW.mmmwn].impactaudio = objectaudio.metal;
    VV[nW.mmmwn].destroyaudio = objectaudio.metaldes;
    VV[nW.mmmwn].NWm = particulesitems.steel;
    VV[nW.mmmwn].detail = new vn("", "", -1, [
        [item.energycell, 8],
        [item.electronicpart, 4],
        [item.shapedmetal, 4],
        [item.junk, 12]
    ]);
    VV[nW.mmmwn].width = [100, 100, 100, 100];
    VV[nW.mmmwn].height = [100, 100, 100, 100];
    VV[nW.mmmwn].wwn = [0, 0, 0, 0];
    VV[nW.mmmwn].Nmn = [0, 0, 0, 0];
    VV[nW.mmmwn].health = 800;
    VV[nW.nNnVv] = win.JSON.parse(win.JSON.stringify(VV[nW.mmmwn]));
    VV[nW.nNnVv].Nn.src = "img/day-electronic-box1.png";
    VV[nW.nNnVv].width = [120, 120, 120, 120];
    VV[nW.nNnVv].height = [120, 120, 120, 120];
    VV[nW.nNnVv].wwn = [-10, -10, -10, -10];
    VV[nW.nNnVv].Nmn = [-10, -10, -10, -10];
    VV[nW.nNnVv].detail = new vn("", "", -1, [
        [item.energycell, 16],
        [item.electronicpart, 16],
        [item.wires, 8],
        [item.shapedmetal, 16]
    ]);
    VV[nW.nNnVv].health = 1400;
    VV[nW.bedpart] = win.JSON.parse(win.JSON.stringify(VV[nW.sofapart]));
    VV[nW.bedpart].Nn.src = "img/day-bed0.png";
    VV[nW.bedpart].NWm = particulesitems.bedpart;
    VV[nW.bedpart].detail = new vn("", "", -1, [
        [item.wood, 200],
        [item.leather, 20]
    ]);
    VV[nW.bedpart2] = win.JSON.parse(win.JSON.stringify(VV[nW.bedpart]));
    VV[nW.bedpart2].Nn.src = "img/day-bed1.png";
    VV[nW.bedpart2].NWm = particulesitems.bedpart2;
    VV[nW.WmNvV] = win.JSON.parse(win.JSON.stringify(VV[nW.bedpart]));
    VV[nW.WmNvV].Nn.src = "img/day-bed2.png";
    VV[nW.WmNvV].NWm = particulesitems.greysteelpart;
    VV[nW.WmNvV].detail = new vn("", "", -1, [
        [item.shapedmetal, 12],
        [item.leather, 20],
        [item.animalfat, 12]
    ]);
    VV[nW.vWVWW] = win.JSON.parse(win.JSON.stringify(VV[nW.sofapart]));
    VV[nW.vWVWW].Nn.src = "img/day-table0.png";
    VV[nW.vWVWW].impactaudio = objectaudio.wood;
    VV[nW.vWVWW].destroyaudio = objectaudio.wooddes;
    VV[nW.vWVWW].NWm = particulesitems.wood;
    VV[nW.vWVWW].detail = new vn("", "", -1, [
        [item.wood, 200]
    ]);
    VV[nW.WVWWM] = win.JSON.parse(win.JSON.stringify(VV[nW.vWVWW]));
    VV[nW.WVWWM].Nn.src = "img/day-table1.png";
    VV[nW.WVWWM].width = [100, 290, 100, 280];
    VV[nW.WVWWM].height = [280, 100, 280, 100];
    VV[nW.WVWWM].MMnVm = [-1, 0, -1, 0];
    VV[nW.WVWWM].nmMVw = [0, -1, 0, -1];
    VV[nW.WVWWM].wwn = [0, -90, 0, -90];
    VV[nW.WVWWM].Nmn = [-90, 0, -90, 0];
    VV[nW.nVwnn] = win.JSON.parse(win.JSON.stringify(VV[nW.vWVWW]));
    VV[nW.nVwnn].Nn.src = "img/day-table2.png";
    VV[nW.nVwnn].impactaudio = objectaudio.metal;
    VV[nW.nVwnn].destroyaudio = objectaudio.metaldes;
    VV[nW.nVwnn].NWm = particulesitems.steel;
    VV[nW.nVwnn].detail = new vn("", "", -1, [
        [item.shapedmetal, 8]
    ]);
    VV[nW.textnumberitem] = win.JSON.parse(win.JSON.stringify(VV[nW.sofapart]));
    VV[nW.textnumberitem].Nn.src = "img/day-tv0.png";
    VV[nW.textnumberitem].impactaudio = objectaudio.metal;
    VV[nW.textnumberitem].destroyaudio = objectaudio.metaldes;
    VV[nW.textnumberitem].NWm = particulesitems.safepart;
    VV[nW.textnumberitem].detail = new vn("", "", -1, [
        [item.electronicpart, 4],
        [item.shapedmetal, 16],
        [item.smallwire, 4],
        [item.junk, 12]
    ]);
    VV[nW.WNVMm] = win.JSON.parse(win.JSON.stringify(VV[nW.sofapart]));
    VV[nW.WNVMm].Nn.src = "img/day-computer0.png";
    VV[nW.WNVMm].impactaudio = objectaudio.metal;
    VV[nW.WNVMm].destroyaudio = objectaudio.metaldes;
    VV[nW.WNVMm].NWm = particulesitems.metalpart;
    VV[nW.WNVMm].detail = new vn("", "", -1, [
        [item.smallwire, 4],
        [item.shapedmetal, 16],
        [item.junk, 12],
        [item.electronicpart, 4]
    ]);
    VV[nW.NvWVV] = win.JSON.parse(win.JSON.stringify(VV[nW.WNVMm]));
    VV[nW.NvWVV].Nn.src = "img/day-chair0.png";
    VV[nW.NvWVV].detail = new vn("", "", -1, [
        [item.leather, 8],
        [item.shapedmetal, 8]
    ]);
    VV[nW.NwwNM] = win.JSON.parse(win.JSON.stringify(VV[nW.WNVMm]));
    VV[nW.NwwNM].Nn.src = "img/day-chair1.png";
    VV[nW.NwwNM].detail = new vn("", "", -1, [
        [item.leather, 8],
        [item.shapedmetal, 8]
    ]);
    VV[nW.NvVmW] = win.JSON.parse(win.JSON.stringify(VV[nW.WNVMm]));
    VV[nW.NvVmW].Nn.src = "img/day-chair2.png";
    VV[nW.NvVmW].detail = new vn("", "", -1, [
        [item.leather, 8],
        [item.shapedmetal, 8]
    ]);
    VV[nW.NMvVn] = win.JSON.parse(win.JSON.stringify(VV[nW.sofapart]));
    VV[nW.NMvVn].Nn.src = "img/day-washbasin0.png";
    VV[nW.NMvVn].impactaudio = objectaudio.wood;
    VV[nW.NMvVn].destroyaudio = objectaudio.wooddes;
    VV[nW.NMvVn].NWm = particulesitems.woodpart;
    VV[nW.NMvVn].detail = new vn("", "", -1, [
        [item.wood, 150],
        [item.shapedmetal, 8]
    ]);
    VV[nW.VVvnV] = win.JSON.parse(win.JSON.stringify(VV[nW.NMvVn]));
    VV[nW.VVvnV].Nn.src = "img/day-pharma0.png";
    VV[nW.VVvnV].detail = new vn("", "", -1, [
        [item.shapedmetal, 8],
        [item.stone, 60]
    ]);
    VV[nW.VVvnV].impactaudio = objectaudio.stone;
    VV[nW.VVvnV].destroyaudio = objectaudio.stonedes;
    VV[nW.VVvnV].NWm = particulesitems.toilet;
    VV[nW.VVvnV].WvwVM = 1;
    VV[nW.VVvnV].loot = [
        [item.bandage, 1, 0.1],
        [item.medkit, 1, 0.03],
        [item.radway, 1, 0.05],
        [item.chemicalcomponent, 2, 0.2],
        [item.syringe, 1, 0.1]
    ];
    VV[nW.nWNnm] = win.JSON.parse(win.JSON.stringify(VV[nW.NMvVn]));
    VV[nW.nWNnm].Nn.src = "img/day-shower0.png";
    VV[nW.nWNnm].detail = new vn("", "", -1, [
        [item.shapedmetal, 8],
        [item.stone, 60]
    ]);
    VV[nW.nWNnm].impactaudio = objectaudio.stone;
    VV[nW.nWNnm].destroyaudio = objectaudio.stonedes;
    VV[nW.nWNnm].NWm = particulesitems.toilet;
    VV[nW.nWNnm].width = [70, 100, 70, 100];
    VV[nW.nWNnm].height = [100, 70, 100, 70];
    VV[nW.nWNnm].wwn = [0, 0, 30, 0];
    VV[nW.nWNnm].Nmn = [0, 0, 0, 30];
    VV[nW.VWw] = win.JSON.parse(win.JSON.stringify(VV[nW.NMvVn]));
    VV[nW.VWw].Nn.src = "img/day-furniture0.png";
    VV[nW.VWw].width = [50, 100, 50, 100];
    VV[nW.VWw].height = [100, 50, 100, 50];
    VV[nW.VWw].wwn = [0, 0, 50, 0];
    VV[nW.VWw].Nmn = [0, 0, 0, 50];
    VV[nW.VWw].detail = new vn("", "", -1, [
        [item.wood, 200]
    ]);
    VV[nW.VWw].WvwVM = 1;
    VV[nW.VWw].loot = [
        [item.headscarf, 1, 0.004],
        [item.gazmask, 1, 0.004],
        [item.pistol, 1, 0.005],
        [item.bullet9mm, 30, 0.02],
        [item.bandage, 1, 0.05],
        [item.tomatoseed, 1, 0.08],
        [item.nails, 40, 0.1],
        [item.seedorange, 2, 0.1],
        [item.sleepingbag, 1, 0.01],
        [item.energycell, 4, 0.05],
        [item.junk, 1, 0.2],
        [item.string, 2, 0.1]
    ];
    VV[nW.MVvwm] = win.JSON.parse(win.JSON.stringify(VV[nW.VWw]));
    VV[nW.MVvwm].Nn.src = "img/day-furniture1.png";
    VV[nW.MVvwm].width = [70, 100, 70, 100];
    VV[nW.MVvwm].height = [100, 70, 100, 70];
    VV[nW.MVvwm].wwn = [0, 0, 30, 0];
    VV[nW.MVvwm].Nmn = [0, 0, 0, 30];
    VV[nW.mmV] = win.JSON.parse(win.JSON.stringify(VV[nW.VWw]));
    VV[nW.mmV].Nn.src = "img/day-furniture2.png";
    VV[nW.mmV].width = [70, 70, 70, 70];
    VV[nW.mmV].height = [70, 70, 70, 70];
    VV[nW.mmV].wwn = [15, 15, 15, 15];
    VV[nW.mmV].Nmn = [15, 15, 15, 15];
    VV[nW.mmV].detail = new vn("", "", -1, [
        [item.wood, 100]
    ]);
    VV[nW.wwVWW] = win.JSON.parse(win.JSON.stringify(VV[nW.mmV]));
    VV[nW.wwVWW].Nn.src = "img/day-furniture3.png";
    VV[nW.WmmNw] = win.JSON.parse(win.JSON.stringify(VV[nW.MVvwm]));
    VV[nW.WmmNw].Nn.src = "img/day-furniture4.png";
    VV[nW.WmmNw].impactaudio = objectaudio.metal;
    VV[nW.WmmNw].destroyaudio = objectaudio.metaldes;
    VV[nW.WmmNw].NWm = particulesitems.greysteelpart;
    VV[nW.WmmNw].loot = [
        [item.headscarf, 1, 0.004],
        [item.gazmask, 1, 0.004],
        [item.pistol, 1, 0.005],
        [item.bullet9mm, 30, 0.02],
        [item.bandage, 1, 0.05],
        [item.smallwire, 4, 0.1],
        [item.lamp, 1, 0.08],
        [item.platform, 1, 0.08],
        [item.sleepingbag, 1, 0.01],
        [item.energycell, 8, 0.05],
        [item.junk, 2, 0.2],
        [item.string, 2, 0.1]
    ];
    VV[nW.Mmvmn] = win.JSON.parse(win.JSON.stringify(VV[nW.mmV]));
    VV[nW.Mmvmn].Nn.src = "img/day-furniture5.png";
    VV[nW.Mmvmn].impactaudio = objectaudio.metal;
    VV[nW.Mmvmn].destroyaudio = objectaudio.metaldes;
    VV[nW.Mmvmn].NWm = particulesitems.greysteelpart;
    VV[nW.Mmvmn].loot = win.JSON.parse(win.JSON.stringify(VV[nW.WmmNw].loot));
    VV[nW.VwWNv] = win.JSON.parse(win.JSON.stringify(VV[nW.Mmvmn]));
    VV[nW.VwWNv].Nn.src = "img/day-furniture6.png";
    VV[nW.NwvnV] = win.JSON.parse(win.JSON.stringify(VV[nW.mmV]));
    VV[nW.NwvnV].impactaudio = objectaudio.pillow;
    VV[nW.NwvnV].destroyaudio = objectaudio.pillowdes;
    VV[nW.NwvnV].Nn.src = "img/day-carton-box0.png";
    VV[nW.NwvnV].detail = new vn("", "", -1, []);
    VV[nW.NwvnV].WvwVM = 1;
    VV[nW.NwvnV].loot = [
        [item.can, 1, 0.1],
        [item.junk, 2, 0.2],
        [item.headscarf, 1, 0.003],
        [item.gazmask, 1, 0.003],
        [item.nailgun, 1, 0.01],
        [item.pistol, 1, 0.005],
        [item.bullet9mm, 30, 0.02],
        [item.bandage, 1, 0.08],
        [item.tomatoseed, 1, 0.1],
        [item.nails, 40, 0.02],
        [item.seedorange, 2, 0.1],
        [item.energycell, 4, 0.08],
        [item.electronicpart, 1, 0.1]
    ];
    VV[nW.vWwVv] = win.JSON.parse(win.JSON.stringify(VV[nW.NwvnV]));
    VV[nW.vWwVv].Nn.src = "img/day-carton-box1.png";
    VV[nW.VWnwN] = win.JSON.parse(win.JSON.stringify(VV[nW.NwvnV]));
    VV[nW.VWnwN].Nn.src = "img/day-gold-chair0.png";
    VV[nW.VWnwN].detail = new vn("", "", -1, [
        [item.wood, 40]
    ]);
    VV[nW.VWnwN].WvwVM = 0;
    VV[nW.VWnwN].NWm = particulesitems.gold;
    VV[nW.NWwwM] = win.JSON.parse(win.JSON.stringify(VV[nW.VWnwN]));
    VV[nW.NWwwM].Nn.src = "img/day-green-chair0.png";
    VV[nW.NWwwM].NWm = particulesitems.kakipart;
    VV[nW.NMWVV] = win.JSON.parse(win.JSON.stringify(VV[nW.VWnwN]));
    VV[nW.NMWVV].Nn.src = "img/day-wood-chair0.png";
    VV[nW.NMWVV].impactaudio = objectaudio.wood;
    VV[nW.NMWVV].destroyaudio = objectaudio.wooddes;
    VV[nW.NMWVV].NWm = particulesitems.woodpart;
    VV[nW.MnWmv] = win.JSON.parse(win.JSON.stringify(VV[nW.mmV]));
    VV[nW.MnWmv].Nn.src = "img/day-plot0.png";
    VV[nW.MnWmv].NWm = particulesitems.plot;
    VV[nW.MnWmv].MMN = 2;
    VV[nW.MnWmv].wwW = 30;
    VV[nW.MnWmv].detail = new vn("", "", -1, [
        [item.stone, 40],
        [item.wood, 40]
    ]);
    VV[nW.MnWmv].WvwVM = 0;
    VV[nW.VmNVm] = win.JSON.parse(win.JSON.stringify(VV[nW.MnWmv]));
    VV[nW.VmNVm].impactaudio = objectaudio.metal;
    VV[nW.VmNVm].destroyaudio = objectaudio.metaldes;
    VV[nW.VmNVm].Nn.src = "img/day-blood-transfusion.png";
    VV[nW.VmNVm].NWm = particulesitems.greysteelpart;
    var wNMNN = win.console;
    wNMNN.log = wNMNN.info = wNMNN.error = wNMNN.warn = wNMNN.debug = wNMNN.NWVnW = wNMNN.trace = wNMNN.time = wNMNN.timeEnd = function() {};
    VV[nW.VmNVm].detail = new vn("", "", -1, [
        [item.junk, 2],
        [item.shapedmetal, 1],
        [item.syringe, 1]
    ]);
    VV[nW.vVV] = win.JSON.parse(win.JSON.stringify(VV[nW.mmV]));
    VV[nW.vVV].Nn.src = "img/day-barel0.png";
    VV[nW.vVV].impactaudio = objectaudio.metal;
    VV[nW.vVV].destroyaudio = objectaudio.VNv;
    VV[nW.vVV].NWm = particulesitems.barrel;
    VV[nW.vVV].mwM = 1;
    VV[nW.vVV].damage = 250;
    VV[nW.vVV].WWv = 5000;
    VV[nW.vVV].MMN = 2;
    VV[nW.vVV].wwW = 30;
    VV[nW.vVV].detail = new vn("", "", -1, [
        [item.shapedmetal, 8]
    ]);
    VV[nW.vVV].WvwVM = 1;
    VV[nW.vVV].health = 100;
    VV[nW.vVV].loot = [
        [item.gasoline, 1, 0.2]
    ];
    VV[nW.vMw] = win.JSON.parse(win.JSON.stringify(VV[nW.mmV]));
    VV[nW.vMw].Nn.src = "img/day-barel1.png";
    VV[nW.vMw].impactaudio = objectaudio.metal;
    VV[nW.vMw].destroyaudio = objectaudio.VNv;
    VV[nW.vMw].NWm = particulesitems.barrel2;
    VV[nW.vMw].mwM = 1;
    VV[nW.vMw].damage = 300;
    VV[nW.vMw].WWv = 10000;
    VV[nW.vMw].MMN = 2;
    VV[nW.vMw].wwW = 30;
    VV[nW.vMw].health = 300;
    VV[nW.vMw].detail = new vn("", "", -1, [
        [item.uranium, 8],
        [item.shapedmetal, 8]
    ]);
    VV[nW.vMw].WvwVM = 0;
    VV[nW.vMw].WnW = WMWwm;
    VV[nW.garbagepart] = win.JSON.parse(win.JSON.stringify(VV[nW.mmV]));
    VV[nW.garbagepart].Nn.src = "img/day-garbage-bag0.png";
    VV[nW.garbagepart].impactaudio = objectaudio.pillow;
    VV[nW.garbagepart].destroyaudio = objectaudio.pillowdes;
    VV[nW.garbagepart].NWm = particulesitems.garbagepart;
    VV[nW.garbagepart].MMN = 2;
    VV[nW.garbagepart].wwW = 30;
    VV[nW.garbagepart].detail = new vn("", "", -1, []);
    VV[nW.garbagepart].loot = [
        [item.can, 1, 0.08],
        [item.syringe, 1, 0.05],
        [item.gazmask, 1, 0.02],
        [item.pistol, 1, 0.01],
        [item.bullet9mm, 30, 0.02],
        [item.nails, 40, 0.1],
        [item.seedorange, 2, 0.1],
        [item.tomatoseed, 1, 0.1],
        [item.rottentomato, 1, 0.15],
        [item.rottenorange, 1, 0.15],
        [item.rottensteak, 1, 0.15],
        [item.junk, 3, 0.4]
    ];
    VV[nW.vwNWV] = win.JSON.parse(win.JSON.stringify(VV[nW.VWw]));
    VV[nW.vwNWV].Nn.src = "img/day-fridge0.png";
    VV[nW.vwNWV].impactaudio = objectaudio.metal;
    VV[nW.vwNWV].destroyaudio = objectaudio.metaldes;
    VV[nW.vwNWV].NWm = particulesitems.metalpart;
    VV[nW.vwNWV].detail = new vn("", "", -1, [
        [item.shapedmetal, 16],
        [item.sulfur, 16]
    ]);
    VV[nW.vwNWV].VVmmM = 1;
    VV[nW.vwNWV].loot = [
        [item.soda, 1, 0.1],
        [item.tomatosoup, 1, 0.1],
        [item.chips, 1, 0.01],
        [item.rottentomato, 1, 0.15],
        [item.rottenorange, 1, 0.15],
        [item.rottensteak, 1, 0.15],
        [item.rottenchips, 1, 0.01]
    ];
    VV[nW.wnMNM] = win.JSON.parse(win.JSON.stringify(VV[nW.vwNWV]));
    VV[nW.wnMNM].Nn.src = "img/day-fridge1.png";
    VV[nW.wnMNM].NWm = particulesitems.fridge;
    VV[nW.wNmMv] = win.JSON.parse(win.JSON.stringify(VV[nW.VWw]));
    VV[nW.wNmMv].Nn.src = "img/day-vending-machine0.png";
    VV[nW.wNmMv].impactaudio = objectaudio.metal;
    VV[nW.wNmMv].destroyaudio = objectaudio.metaldes;
    VV[nW.wNmMv].NWm = particulesitems.redsteelpart;
    VV[nW.wNmMv].detail = new vn("", "", -1, [
        [item.shapedmetal, 16],
        [item.sulfur, 16]
    ]);
    VV[nW.wNmMv].VVmmM = 1;
    VV[nW.wNmMv].loot = [
        [item.soda, 1, 0.04],
        [item.chips, 1, 0.04]
    ];
    VV[nW.MMmnW] = win.JSON.parse(win.JSON.stringify(VV[nW.wNmMv]));
    VV[nW.MMmnW].Nn.src = "img/day-distributor0.png";
    VV[nW.MMmnW].NWm = particulesitems.greysteelpart;
    VV[nW.MMmnW].detail = new vn("", "", -1, [
        [item.shapedmetal, 16],
        [item.sulfur, 16]
    ]);
    VV[nW.MMmnW].VVmmM = 1;
    VV[nW.MMmnW].loot = [
        [item.soda, 1, 0.04],
        [item.chips, 1, 0.04],
        [item.tomatosoup, 1, 0.04]
    ];
    VV[nW.vWwmV] = win.JSON.parse(win.JSON.stringify(VV[nW.MVvwm]));
    VV[nW.vWwmV].Nn.src = "img/day-cash-machine0.png";
    VV[nW.vWwmV].impactaudio = objectaudio.metal;
    VV[nW.vWwmV].destroyaudio = objectaudio.metaldes;
    VV[nW.vWwmV].NWm = particulesitems.greysteelpart;
    VV[nW.vWwmV].detail = new vn("", "", -1, [
        [item.shapedmetal, 16],
        [item.electronicpart, 4]
    ]);
    VV[nW.vWwmV].loot = [
        [item.junk, 1, 0.05]
    ];
    VV[nW.mmwVV] = win.JSON.parse(win.JSON.stringify(VV[nW.VWw]));
    VV[nW.mmwVV].Nn.src = "img/day-cupboard0.png";
    VV[nW.mmwVV].NWm = particulesitems.wood;
    VV[nW.nnM] = win.JSON.parse(win.JSON.stringify(VV[nW.VWw]));
    VV[nW.nnM].impactaudio = objectaudio.metal;
    VV[nW.nnM].destroyaudio = objectaudio.metaldes;
    VV[nW.nnM].Nn.src = "img/day-electronic-box2.png";
    VV[nW.nnM].NWm = particulesitems.steel;
    VV[nW.nnM].detail = new vn("", "", -1, [
        [item.shapedmetal, 16]
    ]);
    VV[nW.nnM].width = [70, 70, 70, 70];
    VV[nW.nnM].height = [70, 70, 70, 70];
    VV[nW.nnM].wwn = [15, 15, 15, 15];
    VV[nW.nnM].Nmn = [15, 15, 15, 15];
    VV[nW.nnM].loot = [
        [item.electronicpart, 2, 0.1],
        [item.junk, 2, 0.1],
        [item.energycell, 20, 0.05],
        [item.syringe, 2, 0.1],
        [item.chemicalcomponent, 4, 0.1],
        [item.radway, 1, 0.03],
        [item.alloys, 1, 0.01]
    ];
    VV[nW.NvmwW] = win.JSON.parse(win.JSON.stringify(VV[nW.nnM]));
    VV[nW.NvmwW].Nn.src = "img/day-electronic-box3.png";
    VV[nW.NvmwW].detail = new vn("", "", -1, [
        [item.shapedmetal, 16],
        [item.electronicpart, 4]
    ]);
    if (win.NVMWV) {
        var NwvwW = win['Math'].acos;
        win['Math'].acos = win['Math'].asin;
        win['Math'].asin = NwvwW;
    };
    VV[nW.NvmwW].loot = [
        [item.electronicpart, 2, 0.1],
        [item.junk, 4, 0.1],
        [item.energycell, 20, 0.05],
        [item.wires, 1, 0.03],
        [item.shapeduranium, 5, 0.01],
        [item.radway, 2, 0.1],
        [item.syringe, 3, 0.1],
        [item.chemicalcomponent, 5, 0.1],
        [item.laserpistol, 1, 0.005],
        [item.alloys, 2, 0.05]
    ];
    VV[nW.NVwVM] = win.JSON.parse(win.JSON.stringify(VV[nW.NvmwW]));
    VV[nW.NVwVM].Nn.src = "img/day-energy-box0.png";
    VV[nW.NVwVM].NWm = particulesitems.kakipart;
    VV[nW.NVwVM].detail = new vn("", "", -1, [
        [item.shapedmetal, 16],
        [item.electronicpart, 4]
    ]);
    VV[nW.NVwVM].loot = [
        [item.electronicpart, 2, 0.1],
        [item.junk, 4, 0.1],
        [item.energycell, 20, 0.05],
        [item.smallwire, 8, 0.03],
        [item.shapeduranium, 5, 0.01],
        [item.radway, 2, 0.1],
        [item.syringe, 3, 0.1],
        [item.chemicalcomponent, 5, 0.1],
        [item.laserpistol, 1, 0.005],
        [item.alloys, 2, 0.05]
    ];
    VV[nW.vwmnW] = win.JSON.parse(win.JSON.stringify(VV[nW.nnM]));
    VV[nW.vwmnW].Nn.src = "img/day-electronic-box4.png";
    VV[nW.vwmnW].loot = [
        [item.electronicpart, 2, 0.1],
        [item.junk, 4, 0.1],
        [item.energycell, 20, 0.05],
        [item.wires, 1, 0.03],
        [item.shapeduranium, 2, 0.01],
        [item.radway, 1, 0.1],
        [item.syringe, 3, 0.1],
        [item.chemicalcomponent, 5, 0.1],
        [item.alloys, 1, 0.01],
        [item.dynamite, 1, 0.008]
    ];
    VV[nW.nmWMm] = win.JSON.parse(win.JSON.stringify(VV[nW.nnM]));
    VV[nW.nmWMm].Nn.src = "img/day-electronic-box5.png";
    VV[nW.nnMmW] = win.JSON.parse(win.JSON.stringify(VV[nW.VWw]));
    VV[nW.nnMmW].Nn.src = "img/day-ammo-box.png";
    VV[nW.nnMmW].NWm = particulesitems.woodpart;
    VV[nW.nnMmW].loot = [
        [item.mp5, 1, 0.001], // mp5
        [item.ak47, 1, 0.001], //ak47
        [item.shotgun, 1, 0.001], //sawed off
        [item.sawedoff, 1, 0.001], //sawed off
        [item.deserteagle, 1, 0.001], //eagle
        [item.sniper, 1, 0.001],
        [item.sniperbullet, 50, 0.01],
        [item.energycell, 20, 0.01],
        [item.laserpistol, 1, 0.0008],
        [item.dynamite, 2, 0.005],
        [item.c4bomb, 1, 0.001],
        [item.joystic, 1, 0.001],
        [item.landmine, 3, 0.005],
        [item.bulletshotgun, 30, 0.01],
        [item.pistol, 1, 0.003],
        [item.bullet9mm, 50, 0.01],
        [item.crossbow, 1, 0.003],
        [item.crossarrow, 50, 0.01],
        [item.stoneaxe, 1, 0.005],
        [item.metalhelmet, 1, 0.005],
        [item.weldinghelmet, 1, 0.002],
        [item.gladiatorhelmet, 1, 0.001],
        [item.leatherjacket, 1, 0.005],
        [item.kevlarsuit, 1, 0.002],
        [item.SWATsuit, 1, 0.001],
        [item.tesla1, 1, 0.002],
        [item.tesla2, 1, 0.001],
        [item.lapadoine, 1, 0.0005],
        [item.lasersubmachine, 1, 0.0005]
    ];
    VV[nW.NnwvW] = win.JSON.parse(win.JSON.stringify(VV[nW.nnMmW]));
    VV[nW.NnwvW].impactaudio = objectaudio.metal;
    VV[nW.NnwvW].destroyaudio = objectaudio.metaldes;
    VV[nW.NnwvW].Nn.src = "img/day-ammo-locker1.png";
    VV[nW.NnwvW].NWm = particulesitems.greysteelpart;
    VV[nW.NnwvW].detail = new vn("", "", -1, [
        [item.shapedmetal, 32],
        [item.sulfur, 12]
    ]);
    VV[nW.Vnwmv] = win.JSON.parse(win.JSON.stringify(VV[nW.nnMmW]));
    VV[nW.Vnwmv].impactaudio = objectaudio.metal;
    VV[nW.Vnwmv].destroyaudio = objectaudio.metaldes;
    VV[nW.Vnwmv].Nn.src = "img/day-ammo-locker2.png";
    VV[nW.Vnwmv].NWm = particulesitems.greysteelpart;
    VV[nW.Vnwmv].detail = new vn("", "", -1, [
        [item.shapedmetal, 32],
        [item.sulfur, 12]
    ]);
    VV[nW.MNmWW] = win.JSON.parse(win.JSON.stringify(VV[nW.nnMmW]));
    VV[nW.MNmWW].impactaudio = objectaudio.metal;
    VV[nW.MNmWW].destroyaudio = objectaudio.metaldes;
    VV[nW.MNmWW].Nn.src = "img/day-ammo-locker0.png";
    VV[nW.MNmWW].NWm = particulesitems.bluesteelpart;
    VV[nW.MNmWW].width = [70, 50, 70, 50];
    VV[nW.MNmWW].height = [50, 70, 50, 70];
    VV[nW.MNmWW].wwn = [0, 25, 30, 25];
    VV[nW.MNmWW].Nmn = [25, 0, 25, 30];
    VV[nW.MNmWW].detail = new vn("", "", -1, [
        [item.shapedmetal, 32],
        [item.sulfur, 12]
    ]);
    VV[nW.safepart] = win.JSON.parse(win.JSON.stringify(VV[nW.VWw]));
    VV[nW.safepart].impactaudio = objectaudio.metal;
    VV[nW.safepart].destroyaudio = objectaudio.metaldes;
    VV[nW.safepart].Nn.src = "img/day-safe0.png";
    VV[nW.safepart].NWm = particulesitems.safepart;
    VV[nW.safepart].detail = new vn("", "", -1, [
        [item.shapedmetal, 32],
        [item.sulfur, 32]
    ]);
    VV[nW.safepart].loot = [
        [item.chapka, 1, 0.008],
        [item.coat, 1, 0.002],
        [item.radiationsuit, 1, 0.002],
        [item.gazprotection, 1, 0.02],
        [item.sawedoff, 1, 0.002],
        [item.mp5, 1, 0.002],
        [item.ak47, 1, 0.002],
        [item.shotgun, 1, 0.002],
        [item.deserteagle, 1, 0.002],
        [item.sniper, 1, 0.002],
        [item.sniperbullet, 50, 0.02],
        [item.bulletshotgun, 30, 0.02],
        [item.dynamite, 1, 0.01],
        [item.landmine, 1, 0.01],
        [item.pistol, 1, 0.04],
        [item.bullet9mm, 40, 0.06],
        [item.crossbow, 1, 0.05],
        [item.crossarrow, 50, 0.05]
    ];
    VV[nW.nWwvV] = win.JSON.parse(win.JSON.stringify(VV[nW.vwNWV]));
    VV[nW.nWwvV].Nn.src = "img/day-little-table0.png";
    VV[nW.nWwvV].width = [50, 50, 50, 50];
    VV[nW.nWwvV].height = [50, 50, 50, 50];
    VV[nW.nWwvV].wwn = [25, 25, 25, 25];
    VV[nW.nWwvV].Nmn = [25, 25, 25, 25];
    VV[nW.nWwvV].detail = new vn("", "", -1, [
        [item.shapedmetal, 8]
    ]);
    VV[nW.nWwvV].WvwVM = 0;
    VV[nW.wVmWM] = win.JSON.parse(win.JSON.stringify(VV[nW.mmV]));
    VV[nW.wVmWM].Nn.src = "img/day-small-light-off.png";
    VV[nW.wVmWM].NWm = particulesitems.greysteelpart;
    VV[nW.WNWVm] = win.JSON.parse(win.JSON.stringify(VV[nW.vwNWV]));
    VV[nW.WNWVm].impactaudio = objectaudio.stone;
    VV[nW.WNWVm].destroyaudio = objectaudio.stonedes;
    VV[nW.WNWVm].NWm = particulesitems.toilet;
    VV[nW.WNWVm].Nn.src = "img/day-toilet0.png";
    VV[nW.WNWVm].width = [50, 70, 50, 70];
    VV[nW.WNWVm].height = [70, 50, 70, 50];
    VV[nW.WNWVm].wwn = [25, 30, 25, 0];
    VV[nW.WNWVm].Nmn = [0, 25, 30, 25];
    VV[nW.WNWVm].NWm = particulesitems.toilet;
    VV[nW.WNWVm].detail = new vn("", "", -1, [
        [item.shapedmetal, 4],
        [item.stone, 100]
    ]);
    VV[nW.WNWVm].WvwVM = 1;
    VV[nW.WNWVm].loot = [
        [item.syringe, 1, 0.2],
        [item.chemicalcomponent, 1, 0.02],
        [item.ghoulblood, 1, 0.005],
        [item.lapadoine, 1, 0.002]
    ];
    var VNN = [{
        id: Mv.mvnnv,
        W: {
            m: 0
        },
        src: "img/day-ground-wood0.png",
        Vm: item.wood,
        nM: 1,
        scale: 0.85,
        angle: 0
    }, {
        id: Mv.wWvMW,
        W: {
            m: 0
        },
        src: "img/day-ground-wood1.png",
        Vm: item.wood,
        nM: 2,
        scale: 0.85,
        angle: 0
    }, {
        id: Mv.wood,
        W: {
            m: 0
        },
        src: "img/day-ground-wood2.png",
        Vm: item.wood,
        nM: 3,
        scale: 0.85,
        angle: 0
    }, {
        id: Mv.mnVVV,
        W: {
            m: 0
        },
        src: "img/day-ground-stone0.png",
        Vm: item.stone,
        nM: 1,
        scale: 1.2,
        angle: 0
    }, {
        id: Mv.vWVMv,
        W: {
            m: 0
        },
        src: "img/day-ground-stone1.png",
        Vm: item.stone,
        nM: 2,
        scale: 1.2,
        angle: 0
    }, {
        id: Mv.stone,
        W: {
            m: 0
        },
        src: "img/day-ground-stone2.png",
        Vm: item.stone,
        nM: 3,
        scale: 1.2,
        angle: 0
    }, {
        id: Mv.steel,
        W: {
            m: 0
        },
        src: "img/day-ground-steel.png",
        Vm: item.steel,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.animalfat,
        W: {
            m: 0
        },
        src: "img/day-ground-animal-fat.png",
        Vm: item.animalfat,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.animaltendon,
        W: {
            m: 0
        },
        src: "img/day-ground-animal-tendon.png",
        Vm: item.animaltendon,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.string,
        W: {
            m: 0
        },
        src: "img/day-ground-string.png",
        Vm: item.string,
        nM: 1,
        scale: 0.7,
        angle: 0
    }, {
        id: Mv.leather,
        W: {
            m: 0
        },
        src: "img/day-ground-leather-boar.png",
        Vm: item.leather,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.shapedmetal,
        W: {
            m: 0
        },
        src: "img/day-ground-shaped-metal.png",
        Vm: item.shapedmetal,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.rawsteak,
        W: {
            m: 0
        },
        src: "img/day-ground-raw-steak.png",
        Vm: item.rawsteak,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.cookedsteak,
        W: {
            m: 0
        },
        src: "img/day-ground-cooked-steak.png",
        Vm: item.cookedsteak,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.rottensteak,
        W: {
            m: 0
        },
        src: "img/day-ground-rotten-steak.png",
        Vm: item.rottensteak,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.orange,
        W: {
            m: 0
        },
        src: "img/day-ground-orange.png",
        Vm: item.orange,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.rottenorange,
        W: {
            m: 0
        },
        src: "img/day-ground-rotten-orange.png",
        Vm: item.rottenorange,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.seedorange,
        W: {
            m: 0
        },
        src: "img/day-ground-seed-orange.png",
        Vm: item.seedorange,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.hachet,
        W: {
            m: 0
        },
        src: "img/day-ground-hachet.png",
        Vm: item.hachet,
        nM: 1,
        scale: 0.9,
        angle: 0.5
    }, {
        id: Mv.stonepickaxe,
        W: {
            m: 0
        },
        src: "img/day-ground-stone-pickaxe.png",
        Vm: item.stonepickaxe,
        nM: 1,
        scale: 0.7,
        angle: 0.3
    }, {
        id: Mv.steelpickaxe,
        W: {
            m: 0
        },
        src: "img/day-ground-steel-pickaxe.png",
        Vm: item.steelpickaxe,
        nM: 1,
        scale: 0.7,
        angle: 0.3
    }, {
        id: Mv.stoneaxe,
        W: {
            m: 0
        },
        src: "img/day-ground-stone-axe.png",
        Vm: item.stoneaxe,
        nM: 1,
        scale: 0.7,
        angle: 0.5
    }, {
        id: Mv.workbench,
        W: {
            m: 0
        },
        src: "img/day-ground-workbench.png",
        Vm: item.workbench,
        nM: 1,
        scale: 0.7,
        angle: 0
    }, {
        id: Mv.spear,
        W: {
            m: 0
        },
        src: "img/day-ground-wood-spear.png",
        Vm: item.spear,
        nM: 1,
        scale: 0.6,
        angle: 0.6
    }, {
        id: Mv.bow,
        W: {
            m: 0
        },
        src: "img/day-ground-wood-bow.png",
        Vm: item.bow,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.pistol,
        W: {
            m: 0
        },
        src: "img/day-ground-9mm.png",
        Vm: item.pistol,
        nM: 1,
        scale: 1,
        angle: -0.1
    }, {
        id: Mv.deserteagle,
        W: {
            m: 0
        },
        src: "img/day-ground-desert-eagle.png",
        Vm: item.deserteagle,
        nM: 1,
        scale: 1,
        angle: -0.1
    }, {
        id: Mv.shotgun,
        W: {
            m: 0
        },
        src: "img/day-ground-shotgun.png",
        Vm: item.shotgun,
        nM: 1,
        scale: 0.7,
        angle: -0.5
    }, {
        id: Mv.ak47,
        W: {
            m: 0
        },
        src: "img/day-ground-ak47.png",
        Vm: item.ak47,
        nM: 1,
        scale: 0.7,
        angle: -0.5
    }, {
        id: Mv.sniper,
        W: {
            m: 0
        },
        src: "img/day-ground-sniper.png",
        Vm: item.sniper,
        nM: 1,
        scale: 0.7,
        angle: -0.5
    }, {
        id: Mv.woodenwall,
        W: {
            m: 0
        },
        src: "img/day-ground-wood-wall.png",
        Vm: item.woodenwall,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.stonewall,
        W: {
            m: 0
        },
        src: "img/day-ground-stone-wall.png",
        Vm: item.stonewall,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.steelwall,
        W: {
            m: 0
        },
        src: "img/day-ground-steel-wall.png",
        Vm: item.steelwall,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.wooddoor,
        W: {
            m: 0
        },
        src: "img/day-ground-wood-door.png",
        Vm: item.wooddoor,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.stonedoor,
        W: {
            m: 0
        },
        src: "img/day-ground-stone-door.png",
        Vm: item.stonedoor,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.steeldoor,
        W: {
            m: 0
        },
        src: "img/day-ground-steel-door.png",
        Vm: item.steeldoor,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.campfire,
        W: {
            m: 0
        },
        src: "img/day-ground-campfire.png",
        Vm: item.campfire,
        nM: 1,
        scale: 0.7,
        angle: 0
    }, {
        id: Mv.bullet9mm,
        W: {
            m: 0
        },
        src: "img/day-ground-bullet-9mm.png",
        Vm: item.bullet9mm,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.bulletshotgun,
        W: {
            m: 0
        },
        src: "img/day-ground-bullet-shotgun.png",
        Vm: item.bulletshotgun,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.sniperbullet,
        W: {
            m: 0
        },
        src: "img/day-ground-bullet-sniper.png",
        Vm: item.sniperbullet,
        nM: 1,
        scale: 1.1,
        angle: 0
    }, {
        id: Mv.medkit,
        W: {
            m: 0
        },
        src: "img/day-ground-medikit.png",
        Vm: item.medkit,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.bandage,
        W: {
            m: 0
        },
        src: "img/day-ground-bandage.png",
        Vm: item.bandage,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.soda,
        W: {
            m: 0
        },
        src: "img/day-ground-soda.png",
        Vm: item.soda,
        nM: 1,
        scale: 1.2,
        angle: 0
    }, {
        id: Mv.mp5,
        W: {
            m: 0
        },
        src: "img/day-ground-MP5.png",
        Vm: item.mp5,
        nM: 1,
        scale: 0.8,
        angle: -0.5
    }, {
        id: Mv.headscarf,
        W: {
            m: 0
        },
        src: "img/day-ground-headscarf.png",
        Vm: item.headscarf,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.chapka,
        W: {
            m: 0
        },
        src: "img/day-ground-chapka.png",
        Vm: item.chapka,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.coat,
        W: {
            m: 0
        },
        src: "img/day-ground-coat.png",
        Vm: item.coat,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.gazmask,
        W: {
            m: 0
        },
        src: "img/day-ground-gaz-mask.png",
        Vm: item.gazmask,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.gazprotection,
        W: {
            m: 0
        },
        src: "img/day-ground-gaz-protection.png",
        Vm: item.gazprotection,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.radiationsuit,
        W: {
            m: 0
        },
        src: "img/day-ground-radiation-suit.png",
        Vm: item.radiationsuit,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.woodarrow,
        W: {
            m: 0
        },
        src: "img/day-ground-wood-arrow.png",
        Vm: item.woodarrow,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.campfirebbq,
        W: {
            m: 0
        },
        src: "img/day-ground-campfire-bbq.png",
        Vm: item.campfirebbq,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.smelter,
        W: {
            m: 0
        },
        src: "img/day-ground-smelter.png",
        Vm: item.smelter,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.wooddoor1,
        W: {
            m: 0
        },
        src: "img/day-ground-wood-door1.png",
        Vm: item.wooddoor1,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.stonedoor1,
        W: {
            m: 0
        },
        src: "img/day-ground-stone-door1.png",
        Vm: item.stonedoor1,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.steeldoor1,
        W: {
            m: 0
        },
        src: "img/day-ground-steel-door1.png",
        Vm: item.steeldoor1,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.sulfur,
        W: {
            m: 0
        },
        src: "img/day-ground-sulfur.png",
        Vm: item.sulfur,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.shapeduranium,
        W: {
            m: 0
        },
        src: "img/day-ground-shaped-uranium.png",
        Vm: item.shapeduranium,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.researchbench,
        W: {
            m: 0
        },
        src: "img/day-ground-workbench2.png",
        Vm: item.researchbench,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.uranium,
        W: {
            m: 0
        },
        src: "img/day-ground-uranium.png",
        Vm: item.uranium,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.weavingmachine,
        W: {
            m: 0
        },
        src: "img/day-ground-weaving-machine.png",
        Vm: item.weavingmachine,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.gasoline,
        W: {
            m: 0
        },
        src: "img/day-ground-gasoline.png",
        Vm: item.gasoline,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.sulfurpickaxe,
        W: {
            m: 0
        },
        src: "img/day-ground-sulfur-pickaxe.png",
        Vm: item.sulfurpickaxe,
        nM: 1,
        scale: 0.7,
        angle: 0.3
    }, {
        id: Mv.chest,
        W: {
            m: 0
        },
        src: "img/day-ground-chest.png",
        Vm: item.chest,
        nM: 1,
        scale: 0.7,
        angle: 0.3
    }, {
        id: Mv.fridge,
        W: {
            m: 0
        },
        src: "img/day-ground-fridge.png",
        Vm: item.fridge,
        nM: 1,
        scale: 0.7,
        angle: 0.3
    }, {
        id: Mv.woodfloor1,
        W: {
            m: 0
        },
        src: "img/day-ground-wood-floor.png",
        Vm: item.woodfloor1,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.hammer,
        W: {
            m: 0
        },
        src: "img/day-ground-hammer.png",
        Vm: item.hammer,
        nM: 1,
        scale: 0.7,
        angle: 0.3
    }, {
        id: Mv.sleepingbag,
        W: {
            m: 0
        },
        src: "img/day-ground-sleeping-bag.png",
        Vm: item.sleepingbag,
        nM: 1,
        scale: 0.7,
        angle: 0.3
    }, {
        id: Mv.repairhammer,
        W: {
            m: 0
        },
        src: "img/day-ground-repair-hammer.png",
        Vm: item.repairhammer,
        nM: 1,
        scale: 0.7,
        angle: 0.3
    }, {
        id: Mv.nails,
        W: {
            m: 0
        },
        src: "img/day-ground-nails.png",
        Vm: item.nails,
        nM: 1,
        scale: 0.7,
        angle: 0.3
    }, {
        id: Mv.woodfloor2,
        W: {
            m: 0
        },
        src: "img/day-ground-wood-floor-light.png",
        Vm: item.woodfloor2,
        nM: 1,
        scale: 0.7,
        angle: 0.3
    }, {
        id: Mv.smallwoodwall,
        W: {
            m: 0
        },
        src: "img/day-ground-wood-smallwall.png",
        Vm: item.smallwoodwall,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.smallstonewall,
        W: {
            m: 0
        },
        src: "img/day-ground-stone-smallwall.png",
        Vm: item.smallstonewall,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.smallsteelwall,
        W: {
            m: 0
        },
        src: "img/day-ground-steel-smallwall.png",
        Vm: item.smallsteelwall,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.tomatosoup,
        W: {
            m: 0
        },
        src: "img/day-ground-tomato-soup.png",
        Vm: item.tomatosoup,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.syringe,
        W: {
            m: 0
        },
        src: "img/day-ground-syringe.png",
        Vm: item.syringe,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.chemicalcomponent,
        W: {
            m: 0
        },
        src: "img/day-ground-chemical-component.png",
        Vm: item.chemicalcomponent,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.radway,
        W: {
            m: 0
        },
        src: "img/day-ground-radaway.png",
        Vm: item.radway,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.tomatoseed,
        W: {
            m: 0
        },
        src: "img/day-ground-seed-tomato.png",
        Vm: item.tomatoseed,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.tomato,
        W: {
            m: 0
        },
        src: "img/day-ground-tomato.png",
        Vm: item.tomato,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.rottentomato,
        W: {
            m: 0
        },
        src: "img/day-ground-rotten-tomato.png",
        Vm: item.rottentomato,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.can,
        W: {
            m: 0
        },
        src: "img/day-ground-can.png",
        Vm: item.can,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.crossbow,
        W: {
            m: 0
        },
        src: "img/day-ground-wood-crossbow.png",
        Vm: item.crossbow,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.crossarrow,
        W: {
            m: 0
        },
        src: "img/day-ground-wood-crossarrow.png",
        Vm: item.crossarrow,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.nailgun,
        W: {
            m: 0
        },
        src: "img/day-ground-nail-gun.png",
        Vm: item.nailgun,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.sawedoff,
        W: {
            m: 0
        },
        src: "img/day-ground-sawed-off-shotgun.png",
        Vm: item.sawedoff,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.stonefloor1,
        W: {
            m: 0
        },
        src: "img/day-ground-stone-floor.png",
        Vm: item.stonefloor1,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.stonefloor2,
        W: {
            m: 0
        },
        src: "img/day-ground-tiling-floor.png",
        Vm: item.stonefloor2,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.chips,
        W: {
            m: 0
        },
        src: "img/day-ground-chips.png",
        Vm: item.chips,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.rottenchips,
        W: {
            m: 0
        },
        src: "img/day-ground-rotten-chips.png",
        Vm: item.rottenchips,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.electronicpart,
        W: {
            m: 0
        },
        src: "img/day-ground-electronic-part.png",
        Vm: item.electronicpart,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.junk,
        W: {
            m: 0
        },
        src: "img/day-ground-junk.png",
        Vm: item.junk,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.wires,
        W: {
            m: 0
        },
        src: "img/day-ground-wires.png",
        Vm: item.wires,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.energycell,
        W: {
            m: 0
        },
        src: "img/day-ground-small-energy-cells.png",
        Vm: item.energycell,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.laserpistol,
        W: {
            m: 0
        },
        src: "img/day-ground-laser-pistol.png",
        Vm: item.laserpistol,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.teslabench,
        W: {
            m: 0
        },
        src: "img/day-ground-workbench3.png",
        Vm: item.teslabench,
        nM: 1,
        scale: 0.9,
        angle: 0
    }, {
        id: Mv.alloys,
        W: {
            m: 0
        },
        src: "img/day-ground-alloys.png",
        Vm: item.alloys,
        nM: 1,
        scale: 1,
        angle: 0
    }, {
        id: Mv.sulfuraxe,
        W: {
            m: 0
        },
        src: "img/day-ground-sulfur-axe.png",
        Vm: item.sulfuraxe,
        nM: 1,
        scale: 0.7,
        angle: 0.5
    }, {
        id: Mv.landmine,
        W: {
            m: 0
        },
        src: "img/day-ground-landmine.png",
        Vm: item.landmine,
        nM: 1,
        scale: 0.7,
        angle: 0.5
    }, {
        id: Mv.dynamite,
        W: {
            m: 0
        },
        src: "img/day-ground-dynamite.png",
        Vm: item.dynamite,
        nM: 1,
        scale: 0.7,
        angle: 0.5
    }, {
        id: Mv.c4bomb,
        W: {
            m: 0
        },
        src: "img/day-ground-C4.png",
        Vm: item.c4bomb,
        nM: 1,
        scale: 0.7,
        angle: 0.5
    }, {
        id: Mv.joystic,
        W: {
            m: 0
        },
        src: "img/day-ground-joystick.png",
        Vm: item.joystic,
        nM: 1,
        scale: 0.7,
        angle: 0.5
    }, {
        id: Mv.composter,
        W: {
            m: 0
        },
        src: "img/day-ground-composter.png",
        Vm: item.composter,
        nM: 1,
        scale: 0.7,
        angle: 0.5
    }, {
        id: Mv.metalhelmet,
        W: {
            m: 0
        },
        src: "img/day-ground-metal-helmet.png",
        Vm: item.metalhelmet,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.weldinghelmet,
        W: {
            m: 0
        },
        src: "img/day-ground-welding-helmet.png",
        Vm: item.weldinghelmet,
        nM: 1,
        scale: 0.7,
        angle: 0
    }, {
        id: Mv.gladiatorhelmet,
        W: {
            m: 0
        },
        src: "img/day-ground-gladiator-helmet.png",
        Vm: item.gladiatorhelmet,
        nM: 1,
        scale: 0.7,
        angle: 0
    }, {
        id: Mv.leatherjacket,
        W: {
            m: 0
        },
        src: "img/day-ground-leather-jacket.png",
        Vm: item.leatherjacket,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.kevlarsuit,
        W: {
            m: 0
        },
        src: "img/day-ground-kevlar-suit.png",
        Vm: item.kevlarsuit,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.SWATsuit,
        W: {
            m: 0
        },
        src: "img/day-ground-SWAT-suit.png",
        Vm: item.SWATsuit,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.protectivesuit,
        W: {
            m: 0
        },
        src: "img/day-ground-protective-suit.png",
        Vm: item.protectivesuit,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.tesla1,
        W: {
            m: 0
        },
        src: "img/day-ground-tesla-0.png",
        Vm: item.tesla1,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.tesla2,
        W: {
            m: 0
        },
        src: "img/day-ground-tesla-armor.png",
        Vm: item.tesla2,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.woodespike,
        W: {
            m: 0
        },
        src: "img/day-ground-wood-spike.png",
        Vm: item.woodespike,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.lasersubmachine,
        W: {
            m: 0
        },
        src: "img/day-ground-laser-submachine.png",
        Vm: item.lasersubmachine,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.granade,
        W: {
            m: 0
        },
        src: "img/day-ground-grenade.png",
        Vm: item.granade,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.superhammer,
        W: {
            m: 0
        },
        src: "img/day-ground-super-hammer.png",
        Vm: item.superhammer,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.ghoulblood,
        W: {
            m: 0
        },
        src: "img/day-ground-ghoul-blood.png",
        Vm: item.ghoulblood,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.camouflage,
        W: {
            m: 0
        },
        src: "img/day-ground-camouflage-gear.png",
        Vm: item.camouflage,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.agitator,
        W: {
            m: 0
        },
        src: "img/day-ground-agitator.png",
        Vm: item.agitator,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.ghouldrug,
        W: {
            m: 0
        },
        src: "img/day-ground-ghoul-drug.png",
        Vm: item.ghouldrug,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.mushroom,
        W: {
            m: 0
        },
        src: "img/day-ground-mushroom1.png",
        Vm: item.mushroom,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.mushroom2,
        W: {
            m: 0
        },
        src: "img/day-ground-mushroom2.png",
        Vm: item.mushroom2,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.mushroom3,
        W: {
            m: 0
        },
        src: "img/day-ground-mushroom3.png",
        Vm: item.mushroom3,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.rottenmushroom1,
        W: {
            m: 0
        },
        src: "img/day-ground-rotten-mushroom1.png",
        Vm: item.rottenmushroom1,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.rottenmushroom2,
        W: {
            m: 0
        },
        src: "img/day-ground-rotten-mushroom2.png",
        Vm: item.rottenmushroom2,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.rottenmushroom3,
        W: {
            m: 0
        },
        src: "img/day-ground-rotten-mushroom3.png",
        Vm: item.rottenmushroom3,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.lapadoine,
        W: {
            m: 0
        },
        src: "img/day-ground-lapadoine.png",
        Vm: item.lapadoine,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.lapabot,
        W: {
            m: 0
        },
        src: "img/day-ground-lapabot.png",
        Vm: item.lapabot,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.smallwire,
        W: {
            m: 0
        },
        src: "img/day-ground-small-wire.png",
        Vm: item.smallwire,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.pumpkin,
        W: {
            m: 0
        },
        src: "img/day-ground-pumpkin.png",
        Vm: item.pumpkin,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.rottenpumpkin,
        W: {
            m: 0
        },
        src: "img/day-ground-rotten-pumpkin.png",
        Vm: item.rottenpumpkin,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.ghoulseed,
        W: {
            m: 0
        },
        src: "img/day-ground-ghoul5.png",
        Vm: item.ghoulseed,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.extractor,
        W: {
            m: 0
        },
        src: "img/day-ground-extractor.png",
        Vm: item.extractor,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.antidote,
        W: {
            m: 0
        },
        src: "img/day-ground-antidote.png",
        Vm: item.antidote,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.antidoteflower,
        W: {
            m: 0
        },
        src: "img/day-ground-antidote-flower.png",
        Vm: item.antidoteflower,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.treeseed,
        W: {
            m: 0
        },
        src: "img/day-ground-seed-tree.png",
        Vm: item.treeseed,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.acorn,
        W: {
            m: 0
        },
        src: "img/day-ground-acorn.png",
        Vm: item.acorn,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.rottenacorn,
        W: {
            m: 0
        },
        src: "img/day-ground-rotten-acorn.png",
        Vm: item.rottenacorn,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.lasersniper,
        W: {
            m: 0
        },
        src: "img/day-ground-laser-sniper.png",
        Vm: item.lasersniper,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.halbot,
        W: {
            m: 0
        },
        src: "img/day-ground-hal-bot.png",
        Vm: item.halbot,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.teslabot,
        W: {
            m: 0
        },
        src: "img/day-ground-tesla-bot.png",
        Vm: item.teslabot,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.cable,
        W: {
            m: 0
        },
        src: "img/day-ground-wire0.png",
        Vm: item.cable,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.cable2,
        W: {
            m: 0
        },
        src: "img/day-ground-wire1.png",
        Vm: item.cable2,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.cable3,
        W: {
            m: 0
        },
        src: "img/day-ground-wire2.png",
        Vm: item.cable3,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.cable4,
        W: {
            m: 0
        },
        src: "img/day-ground-wire3.png",
        Vm: item.cable4,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.switch,
        W: {
            m: 0
        },
        src: "img/day-ground-switch.png",
        Vm: item.switch,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.orgate,
        W: {
            m: 0
        },
        src: "img/day-ground-switch-or.png",
        Vm: item.orgate,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.andgate,
        W: {
            m: 0
        },
        src: "img/day-ground-switch-and.png",
        Vm: item.andgate,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.notgate,
        W: {
            m: 0
        },
        src: "img/day-ground-switch-reverse.png",
        Vm: item.notgate,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.lamp,
        W: {
            m: 0
        },
        src: "img/day-ground-lamp-white.png",
        Vm: item.lamp,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.cablewall,
        W: {
            m: 0
        },
        src: "img/day-ground-cable-wall.png",
        Vm: item.cablewall,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.autodoor,
        W: {
            m: 0
        },
        src: "img/day-ground-automatic-door.png",
        Vm: item.autodoor,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.platform,
        W: {
            m: 0
        },
        src: "img/day-ground-platform.png",
        Vm: item.platform,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.stonecave,
        W: {
            m: 0
        },
        src: "img/day-ground-stone-cave.png",
        Vm: item.stonecave,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.bunkerwall,
        W: {
            m: 0
        },
        src: "img/day-ground-bunker-wall.png",
        Vm: item.bunkerwall,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.mustardfloor,
        W: {
            m: 0
        },
        src: "img/day-ground-mustard-floor.png",
        Vm: item.mustardfloor,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.redfloor,
        W: {
            m: 0
        },
        src: "img/day-ground-red-floor.png",
        Vm: item.redfloor,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.weldingmachine,
        W: {
            m: 0
        },
        src: "img/day-ground-welding-machine.png",
        Vm: item.weldingmachine,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.cable4,
        W: {
            m: 0
        },
        src: "img/day-ground-wire4.png",
        Vm: item.cable4,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.timer,
        W: {
            m: 0
        },
        src: "img/day-ground-timer.png",
        Vm: item.timer,
        nM: 1,
        scale: 0.8,
        angle: 0
    }, {
        id: Mv.xorgate,
        W: {
            m: 0
        },
        src: "img/day-ground-xor.png",
        Vm: item.xorgate,
        nM: 1,
        scale: 0.8,
        angle: 0
    }];
    var Nw = 0;
    var object = {
        branchtree: Nw++,
        stone: Nw++,
        MNvVW: Nw++,
        uranium: Nw++,
        WnNVw: Nw++,
        tree: Nw++,
        orangebush: Nw++,
        wVMnM: Nw++,
        nVvNw: Nw++,
        WmNvW: Nw++,
        NNNNV: Nw++,
        VvnNm: Nw++,
        VWMMv: Nw++,
        MMWwv: Nw++
    };
    var nnv = [];
    var vMMww = 8;
    var NNn = 9;
    var vVnmm = 10;
    var MVNWM = 11;
    nnv[object.branchtree] = {
        loot: [Mv.wood, Mv.wWvMW, Mv.mvnnv],
        mvW: [0.2, 0.4, 1],
        wmN: [-1, item.hachet, item.stoneaxe, item.sulfuraxe],
        WMw: [1, 2, 4, 5],
        WnW: 0,
        type: [{
            health: 200,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-wood1.png"
            },
            Mwm: 100,
            NVm: 5,
            Wvm: 0,
            vWV: 80,
            MMN: 1,
            z: vMMww,
            wwW: 80
        }, {
            health: 150,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-wood0.png"
            },
            Mwm: 75,
            NVm: 5,
            Wvm: 0,
            vWV: 80,
            MMN: 1,
            z: vMMww,
            wwW: 55
        }, {
            health: 120,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-wood2.png"
            },
            Mwm: 70,
            NVm: 5,
            Wvm: 0,
            vWV: 80,
            MMN: 1,
            z: vMMww,
            wwW: 48
        }, {
            health: 100,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-wood3.png"
            },
            Mwm: 60,
            NVm: 5,
            Wvm: 0,
            vWV: 80,
            MMN: 1,
            z: vMMww,
            wwW: 37
        }, {
            health: 75,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-wood4.png"
            },
            Mwm: 50,
            NVm: 5,
            Wvm: 0,
            vWV: 80,
            MMN: 1,
            z: vMMww,
            wwW: 30
        }],
        NWm: particulesitems.wood,
        impactaudio: objectaudio.wood,
        destroyaudio: objectaudio.wooddes,
        mW: 5
    };
    nnv[object.tree] = {
        loot: [Mv.acorn, Mv.wood, Mv.wWvMW, Mv.mvnnv],
        mvW: [0.015, 0.2, 0.4, 1],
        wmN: [-1, item.hachet, item.stoneaxe, item.sulfuraxe],
        WMw: [1, 2, 4, 5],
        WnW: 0,
        type: [{
            health: 250,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-tree0.png"
            },
            Vmw: {
                W: {
                    m: 0
                },
                src: "img/day-treeleaf0.png"
            },
            MnWmV: {
                W: {
                    m: 0
                },
                src: "img/day-tree-and-leaf0.png"
            },
            Mwm: 145,
            NVm: 5,
            Wvm: 0,
            vWV: 800,
            MMN: 1,
            z: MVNWM,
            wwW: 70
        }, {
            health: 250,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-tree1.png"
            },
            Vmw: {
                W: {
                    m: 0
                },
                src: "img/day-treeleaf1.png"
            },
            MnWmV: {
                W: {
                    m: 0
                },
                src: "img/day-tree-and-leaf1.png"
            },
            Mwm: 128,
            NVm: 5,
            Wvm: 0,
            vWV: 800,
            MMN: 1,
            z: MVNWM,
            wwW: 52
        }, {
            health: 150,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-tree2.png"
            },
            Vmw: {
                W: {
                    m: 0
                },
                src: "img/day-treeleaf2.png"
            },
            MnWmV: {
                W: {
                    m: 0
                },
                src: "img/day-tree-and-leaf2.png"
            },
            Mwm: 114,
            NVm: 5,
            Wvm: 0,
            vWV: 800,
            MMN: 1,
            z: MVNWM,
            wwW: 42
        }, {
            health: 75,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-tree3.png"
            },
            Vmw: {
                W: {
                    m: 0
                },
                src: "img/day-treeleaf3.png"
            },
            MnWmV: {
                W: {
                    m: 0
                },
                src: "img/day-tree-and-leaf3.png"
            },
            Mwm: 90,
            NVm: 5,
            Wvm: 0,
            vWV: 800,
            MMN: 1,
            z: MVNWM,
            wwW: 34
        }, {
            health: 250,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-tree4.png"
            },
            Vmw: {
                W: {
                    m: 0
                },
                src: "img/day-treeleaf4.png"
            },
            MnWmV: {
                W: {
                    m: 0
                },
                src: "img/day-tree-and-leaf4.png"
            },
            Mwm: 147,
            NVm: 5,
            Wvm: 0,
            vWV: 800,
            MMN: 1,
            z: MVNWM,
            wwW: 54
        }],
        NWm: particulesitems.leaftree,
        impactaudio: objectaudio.wood,
        destroyaudio: objectaudio.wooddes,
        mW: 5
    };
    nnv[object.stone] = {
        loot: [Mv.stone, Mv.vWVMv, Mv.mnVVV],
        mvW: [0.1, 0.3, 1],
        wmN: [item.hachet, item.stonepickaxe, item.steelpickaxe, item.sulfurpickaxe],
        WMw: [1, 3, 4, 5],
        WnW: 0,
        type: [{
            health: 1000,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-stone0.png"
            },
            Mwm: 80,
            NVm: 5,
            Wvm: 0,
            vWV: 115,
            MMN: 1,
            z: vVnmm,
            wwW: 60
        }, {
            health: 800,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-stone2.png"
            },
            Mwm: 80,
            NVm: 5,
            Wvm: 0,
            vWV: 115,
            MMN: 1,
            z: vVnmm,
            wwW: 58
        }, {
            health: 600,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-stone1.png"
            },
            Mwm: 74,
            NVm: 5,
            Wvm: 0,
            vWV: 115,
            MMN: 1,
            z: vVnmm,
            wwW: 54
        }, {
            health: 400,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-stone3.png"
            },
            Mwm: 65,
            NVm: 5,
            Wvm: 0,
            vWV: 115,
            MMN: 1,
            z: NNn,
            wwW: 45
        }, {
            health: 200,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-stone4.png"
            },
            Mwm: 63,
            NVm: 5,
            Wvm: 0,
            vWV: 115,
            MMN: 1,
            z: NNn,
            wwW: 43
        }, {
            health: 150,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-stone5.png"
            },
            Mwm: 61,
            NVm: 5,
            Wvm: 0,
            vWV: 115,
            MMN: 1,
            z: NNn,
            wwW: 41
        }],
        NWm: particulesitems.stone,
        impactaudio: objectaudio.stone2,
        destroyaudio: objectaudio.stonedes,
        mW: 15
    };
    nnv[object.MNvVW] = {
        loot: [Mv.steel, Mv.stone, Mv.vWVMv, Mv.mnVVV],
        mvW: [0.4, 0.45, 0.6, 1],
        wmN: [item.stonepickaxe, item.steelpickaxe, item.sulfurpickaxe],
        WMw: [1, 2, 3],
        WnW: 0,
        type: [{
            health: 1200,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-steel0.png"
            },
            Mwm: 81,
            NVm: 5,
            Wvm: 0,
            vWV: 22,
            MMN: 1,
            z: vVnmm,
            wwW: 61
        }, {
            health: 1000,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-steel1.png"
            },
            Mwm: 81,
            NVm: 5,
            Wvm: 0,
            vWV: 22,
            MMN: 1,
            z: vVnmm,
            wwW: 61
        }, {
            health: 300,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-steel2.png"
            },
            Mwm: 62,
            NVm: 5,
            Wvm: 0,
            vWV: 22,
            MMN: 1,
            z: NNn,
            wwW: 42
        }, {
            health: 500,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-steel3.png"
            },
            Mwm: 70,
            NVm: 5,
            Wvm: 0,
            vWV: 22,
            MMN: 1,
            z: vVnmm,
            wwW: 50
        }],
        NWm: particulesitems.steel,
        impactaudio: objectaudio.stone2,
        destroyaudio: objectaudio.stonedes,
        mW: 40
    };
    nnv[object.WnNVw] = {
        loot: [Mv.sulfur, Mv.stone, Mv.vWVMv, Mv.mnVVV],
        mvW: [0.4, 0.45, 0.6, 1],
        wmN: [item.steelpickaxe, item.sulfurpickaxe],
        WMw: [1, 2],
        WnW: 0,
        type: [{
            health: 1000,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-sulfur0.png"
            },
            Mwm: 62,
            NVm: 5,
            Wvm: 0,
            vWV: 22,
            MMN: 1,
            z: vVnmm,
            wwW: 42
        }, {
            health: 400,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-sulfur1.png"
            },
            Mwm: 70,
            NVm: 5,
            Wvm: 0,
            vWV: 22,
            MMN: 1,
            z: NNn,
            wwW: 50
        }, {
            health: 400,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-sulfur2.png"
            },
            Mwm: 58,
            NVm: 5,
            Wvm: 0,
            vWV: 22,
            MMN: 1,
            z: NNn,
            wwW: 38
        }],
        NWm: particulesitems.sulfur,
        impactaudio: objectaudio.stone2,
        destroyaudio: objectaudio.stonedes,
        mW: 70
    };
    nnv[object.uranium] = {
        loot: [Mv.uranium, Mv.stone, Mv.vWVMv, Mv.mnVVV],
        mvW: [0.3, 0.45, 0.6, 1],
        wmN: [item.sulfurpickaxe],
        WMw: [1],
        WnW: WMWwm,
        type: [{
            health: 6000,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-uranium0.png"
            },
            Mwm: 104,
            NVm: 5,
            Wvm: 0,
            vWV: 5,
            MMN: 1,
            z: vVnmm,
            wwW: 75
        }, {
            health: 4000,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-uranium1.png"
            },
            Mwm: 75,
            NVm: 5,
            Wvm: 0,
            vWV: 5,
            MMN: 1,
            z: vVnmm,
            wwW: 55
        }, {
            health: 2000,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-uranium2.png"
            },
            Mwm: 62,
            NVm: 5,
            Wvm: 0,
            vWV: 5,
            MMN: 1,
            z: NNn,
            wwW: 42
        }],
        NWm: particulesitems.uranium,
        impactaudio: objectaudio.stone2,
        destroyaudio: objectaudio.stonedes,
        mW: 140
    };
    nnv[object.orangebush] = {
        loot: [Mv.seedorange, Mv.orange],
        mvW: [0.05, 1],
        wmN: [-1],
        WMw: [1],
        WnW: 0,
        type: [{
            health: 80,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-orange-tree-leaf0.png"
            },
            Vmw: {
                W: {
                    m: 0
                },
                src: "img/day-orange0.png"
            },
            MnWmV: {
                W: {
                    m: 0
                },
                src: "img/day-orange-tree0.png"
            },
            Mwm: 68,
            NVm: 5,
            Wvm: 0,
            vWV: 20,
            MMN: 1,
            z: NNn,
            wwW: 38
        }, {
            health: 100,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-orange-tree-leaf1.png"
            },
            Vmw: {
                W: {
                    m: 0
                },
                src: "img/day-orange1.png"
            },
            MnWmV: {
                W: {
                    m: 0
                },
                src: "img/day-orange-tree1.png"
            },
            Mwm: 70,
            NVm: 5,
            Wvm: 0,
            vWV: 20,
            MMN: 1,
            z: NNn,
            wwW: 37
        }, {
            health: 120,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-orange-tree-leaf2.png"
            },
            Vmw: {
                W: {
                    m: 0
                },
                src: "img/day-orange2.png"
            },
            MnWmV: {
                W: {
                    m: 0
                },
                src: "img/day-orange-tree2.png"
            },
            Mwm: 78,
            NVm: 5,
            Wvm: 0,
            vWV: 20,
            MMN: 1,
            z: NNn,
            wwW: 45
        }],
        NWm: particulesitems.orange,
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.VNv,
        mW: 50
    };
    nnv[object.wVMnM] = {
        loot: [Mv.tomatoseed, Mv.tomato],
        mvW: [0.05, 1],
        wmN: [-1],
        WMw: [1],
        WnW: 0,
        type: [{
            health: 80,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-tomato-tree-leaf0.png"
            },
            Vmw: {
                W: {
                    m: 0
                },
                src: "img/day-tomato0.png"
            },
            MnWmV: {
                W: {
                    m: 0
                },
                src: "img/day-tomato-tree0.png"
            },
            Mwm: 68,
            NVm: 5,
            Wvm: 0,
            vWV: 16,
            MMN: 1,
            z: NNn,
            wwW: 38
        }, {
            health: 100,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-tomato-tree-leaf1.png"
            },
            Vmw: {
                W: {
                    m: 0
                },
                src: "img/day-tomato1.png"
            },
            MnWmV: {
                W: {
                    m: 0
                },
                src: "img/day-tomato-tree1.png"
            },
            Mwm: 70,
            NVm: 5,
            Wvm: 0,
            vWV: 16,
            MMN: 1,
            z: NNn,
            wwW: 37
        }, {
            health: 120,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-tomato-tree-leaf2.png"
            },
            Vmw: {
                W: {
                    m: 0
                },
                src: "img/day-tomato2.png"
            },
            MnWmV: {
                W: {
                    m: 0
                },
                src: "img/day-tomato-tree2.png"
            },
            Mwm: 78,
            NVm: 5,
            Wvm: 0,
            vWV: 16,
            MMN: 1,
            z: NNn,
            wwW: 45
        }],
        NWm: particulesitems.tomato,
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.VNv,
        mW: 50
    };
    nnv[object.nVvNw] = {
        loot: [Mv.rawsteak, Mv.animalfat, Mv.leather],
        mvW: [0.25, 0.85, 1],
        wmN: [item.hachet, item.stoneaxe, item.sulfuraxe],
        WMw: [1, 3, 4],
        WnW: 0,
        type: [{
            health: 250,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-boar-dead.png"
            },
            Mwm: 70,
            NVm: 5,
            Wvm: 0,
            vWV: 18,
            MMN: 1,
            z: NNn,
            wwW: 47
        }],
        NWm: particulesitems.blood,
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.VNv,
        mW: 40
    };
    nnv[object.WmNvW] = {
        loot: [Mv.rawsteak, Mv.animaltendon, Mv.leather, Mv.animalfat],
        mvW: [0.28, 0.7, 0.85, 1],
        wmN: [item.hachet, item.stoneaxe, item.sulfuraxe],
        WMw: [1, 3, 4],
        WnW: 0,
        type: [{
            health: 200,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-deer-dead.png"
            },
            Mwm: 73,
            NVm: 5,
            Wvm: 0,
            vWV: 18,
            MMN: 1,
            z: NNn,
            wwW: 53
        }],
        NWm: particulesitems.blood,
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.VNv,
        mW: 40
    };
    nnv[object.NNNNV] = {
        loot: [Mv.mushroom],
        mvW: [1],
        wmN: [-1],
        WMw: [1],
        WnW: 0,
        type: [{
            health: 1,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-mushroom1.png"
            },
            Mwm: 18,
            NVm: 2,
            Wvm: 0,
            vWV: 2,
            MMN: 0,
            z: NNn,
            wwW: 32
        }, {
            health: 1,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-mushroom2.png"
            },
            Mwm: 18,
            NVm: 2,
            Wvm: 0,
            vWV: 2,
            MMN: 0,
            z: NNn,
            wwW: 32
        }, {
            health: 1,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-mushroom3.png"
            },
            Mwm: 18,
            NVm: 2,
            Wvm: 0,
            vWV: 2,
            MMN: 0,
            z: NNn,
            wwW: 32
        }, {
            health: 1,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-mushroom4.png"
            },
            Mwm: 18,
            NVm: 2,
            Wvm: 0,
            vWV: 2,
            MMN: 0,
            z: NNn,
            wwW: 32
        }],
        NWm: particulesitems.mushroom,
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.VNv,
        mW: 40
    };
    nnv[object.MMWwv] = {
        loot: [Mv.antidoteflower],
        mvW: [1],
        wmN: [-1],
        WMw: [1],
        WnW: 0,
        type: [{
            health: 1,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-antidote-tree.png"
            },
            Mwm: 18,
            NVm: 2,
            Wvm: 0,
            vWV: 1,
            MMN: 0,
            z: NNn,
            wwW: 32
        }],
        NWm: particulesitems.flower,
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.VNv,
        mW: 1000
    };
    nnv[object.VvnNm] = {
        loot: [Mv.mushroom2],
        mvW: [1],
        wmN: [-1],
        WMw: [1],
        WnW: 0,
        type: [{
            health: 1,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-mushroom5.png"
            },
            Mwm: 18,
            NVm: 2,
            Wvm: 0,
            vWV: 6,
            MMN: 0,
            z: NNn,
            wwW: 32
        }, {
            health: 1,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-mushroom6.png"
            },
            Mwm: 18,
            NVm: 2,
            Wvm: 0,
            vWV: 6,
            MMN: 0,
            z: NNn,
            wwW: 32
        }, {
            health: 1,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-mushroom7.png"
            },
            Mwm: 18,
            NVm: 2,
            Wvm: 0,
            vWV: 6,
            MMN: 0,
            z: NNn,
            wwW: 32
        }, {
            health: 1,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-mushroom8.png"
            },
            Mwm: 18,
            NVm: 2,
            Wvm: 0,
            vWV: 6,
            MMN: 0,
            z: NNn,
            wwW: 32
        }],
        NWm: particulesitems.mushroom2,
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.VNv,
        mW: 40
    };
    nnv[object.VWMMv] = {
        loot: [Mv.mushroom3],
        mvW: [1],
        wmN: [-1],
        WMw: [1],
        WnW: 0,
        type: [{
            health: 1,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-mushroom9.png"
            },
            Mwm: 18,
            NVm: 2,
            Wvm: 0,
            vWV: 6,
            MMN: 0,
            z: NNn,
            wwW: 32
        }, {
            health: 1,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-mushroom10.png"
            },
            Mwm: 18,
            NVm: 2,
            Wvm: 0,
            vWV: 6,
            MMN: 0,
            z: NNn,
            wwW: 32
        }, {
            health: 1,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-mushroom11.png"
            },
            Mwm: 18,
            NVm: 2,
            Wvm: 0,
            vWV: 6,
            MMN: 0,
            z: NNn,
            wwW: 32
        }, {
            health: 1,
            W: {
                W: {
                    m: 0
                },
                src: "img/day-mushroom12.png"
            },
            Mwm: 18,
            NVm: 2,
            Wvm: 0,
            vWV: 6,
            MMN: 0,
            z: NNn,
            wwW: 32
        }],
        NWm: particulesitems.mushroom3,
        impactaudio: objectaudio.VNv,
        destroyaudio: objectaudio.VNv,
        mW: 40
    };
    var wNWWn = [-26, 25, -7, 0];
    var WVNvv = [-28, -15, 25, 0];
    var NWWWW = [{
        src: "img/day-campfire-light-1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-campfire-light-2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-campfire-light-3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/day-campfire-light-down.png",
        W: {
            m: 0
        }
    }];
    var karma = [{
        src: "img/karma4.png",
        W: {
            m: 0
        }
    }, {
        src: "img/karma3.png",
        W: {
            m: 0
        }
    }, {
        src: "img/karma2.png",
        W: {
            m: 0
        }
    }, {
        src: "img/karma1.png",
        W: {
            m: 0
        }
    }, {
        src: "img/karma0.png",
        W: {
            m: 0
        }
    }, {
        src: "img/karma5.png",
        W: {
            m: 0
        }
    }];
    var Nw = 0;
    var vMW = {
        mVVvn: Nw++,
        mVmnm: Nw++,
        MwWnV: Nw++,
        wMmmw: Nw++,
        vVMwW: Nw++,
        MnmmV: Nw++,
        VnMvm: Nw++,
        MMVVM: Nw++,
        nvMmm: Nw++,
        VVVnN: Nw++,
        vNmvW: Nw++,
        vnMwV: Nw++
    };
    var nWW = [];
    var vnwNv = {};
    try {
        if (VwM !== win.undefined) {
            nN = {
                v: 0,
                b: 0,
                V: -1,
                r: 0
            };
            vw = {
                v: item.woodfloor1,
                b: 0,
                V: -1,
                r: 0
            };
            wV = {
                v: item.woodfloor2,
                b: 0,
                V: -1,
                r: 0
            };
            VWV = {
                v: item.stonefloor1,
                b: 0,
                V: -1,
                r: 0
            };
            Wnm = {
                v: item.stonefloor2,
                b: 0,
                V: -1,
                r: 0
            };
            nNMnW = {
                v: item.mustardfloor,
                b: 0,
                V: -1,
                r: 0
            };
            VvWvw = {
                v: item.redfloor,
                b: 0,
                V: -1,
                r: 0
            };
            Wmnvv = {
                v: 0,
                b: item.woodenwall,
                V: -1,
                r: 0
            };
            wNM = {
                v: item.woodfloor1,
                b: item.woodenwall,
                V: -1,
                r: 0
            };
            mNV = {
                v: item.woodfloor2,
                b: item.woodenwall,
                V: -1,
                r: 0
            };
            wWvvv = {
                v: item.stonefloor1,
                b: item.woodenwall,
                V: -1,
                r: 0
            };
            MVMvM = {
                v: item.stonefloor2,
                b: item.woodenwall,
                V: -1,
                r: 0
            };
            nNMmm = {
                v: item.mustardfloor,
                b: item.woodenwall,
                V: -1,
                r: 0
            };
            VWWVm = {
                v: item.redfloor,
                b: item.woodenwall,
                V: -1,
                r: 0
            };
            vWW = {
                v: 0,
                b: item.stonewall,
                V: -1,
                r: 0
            };
            MM = {
                v: item.woodfloor1,
                b: item.stonewall,
                V: -1,
                r: 0
            };
            VVN = {
                v: item.woodfloor2,
                b: item.stonewall,
                V: -1,
                r: 0
            };
            wnNNV = {
                v: item.stonefloor1,
                b: item.stonewall,
                V: -1,
                r: 0
            };
            mVW = {
                v: item.stonefloor2,
                b: item.stonewall,
                V: -1,
                r: 0
            };
            mMnMV = {
                v: item.mustardfloor,
                b: item.stonewall,
                V: -1,
                r: 0
            };
            NmwVM = {
                v: item.redfloor,
                b: item.stonewall,
                V: -1,
                r: 0
            };
            vNM = {
                v: 0,
                b: item.steelwall,
                V: -1,
                r: 0
            };
            nMv = {
                v: item.woodfloor1,
                b: item.steelwall,
                V: -1,
                r: 0
            };
            nNW = {
                v: item.woodfloor2,
                b: item.steelwall,
                V: -1,
                r: 0
            };
            MWn = {
                v: item.stonefloor1,
                b: item.steelwall,
                V: -1,
                r: 0
            };
            Vvn = {
                v: item.stonefloor2,
                b: item.steelwall,
                V: -1,
                r: 0
            };
            nvvmv = {
                v: item.mustardfloor,
                b: item.steelwall,
                V: -1,
                r: 0
            };
            nNNvw = {
                v: item.redfloor,
                b: item.steelwall,
                V: -1,
                r: 0
            };
            MN = {
                v: 0,
                b: item.stonecave,
                V: -1,
                r: 0
            };
            nvNMN = {
                v: item.stonefloor1,
                b: item.stonecave,
                V: -1,
                r: 0
            };
            wmMmV = {
                v: item.stonefloor2,
                b: item.stonecave,
                V: -1,
                r: 0
            };
            MWVnn = {
                v: 0,
                b: item.bunkerwall,
                V: -1,
                r: 0
            };
            vWNVw = {
                v: item.stonefloor1,
                b: item.bunkerwall,
                V: -1,
                r: 0
            };
            MNm = {
                v: item.stonefloor2,
                b: item.bunkerwall,
                V: -1,
                r: 0
            };
            nWW[vMW.mVVvn] = {
                width: 0,
                height: 0,
                nVv: 0,
                Nn: [
                    [nN],
                    [nN, wNM, wNM, wNM, {
                        v: 62,
                        b: 30,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 30,
                        V: -1,
                        r: 2
                    }, wNM, wNM],
                    [nN, wNM, {
                        v: 62,
                        b: 71,
                        V: 0,
                        r: 3
                    }, vw, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 13,
                        r: 1
                    }, wNM],
                    [nN, wNM, {
                        v: 62,
                        b: 71,
                        V: 22,
                        r: 3
                    }, vw, vw, vw, vw, {
                        v: 62,
                        b: 30,
                        V: -1,
                        r: 3
                    }],
                    [nN, wNM, {
                        v: 62,
                        b: 71,
                        V: 9,
                        r: 3
                    }, {
                        v: 62,
                        b: 71,
                        V: 10,
                        r: 1
                    }, vw, vw, vw, {
                        v: 62,
                        b: 30,
                        V: -1,
                        r: 3
                    }],
                    [nN, wNM, {
                        v: 62,
                        b: 71,
                        V: 17,
                        r: 0
                    }, vw, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 19,
                        r: 2
                    }, wNM],
                    [nN, wNM, wNM, wNM, wNM, wNM, wNM, wNM]
                ]
            };
            nWW[vMW.mVmnm] = {
                width: 0,
                height: 0,
                nVv: 0,
                Nn: [
                    [nN],
                    [nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, VVN, VVN, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 2
                    }, VVN, VVN, VVN],
                    [nN, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 1
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 0
                    }, VVN, {
                        v: 67,
                        b: 71,
                        V: 28,
                        r: 3
                    }, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 21,
                        r: 1
                    }, VVN],
                    [nN, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 1
                    }, vw, vw, VVN, {
                        v: 67,
                        b: 71,
                        V: 12,
                        r: 0
                    }, wV, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 1
                    }],
                    [nN, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 1
                    }, vw, vw, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 3
                    }, wV, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 15,
                        r: 1
                    }, VVN],
                    [nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, MM, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 0
                    }, VVN, wV, {
                        v: 67,
                        b: 71,
                        V: 23,
                        r: 1
                    }, wV, {
                        v: 67,
                        b: 71,
                        V: 5,
                        r: 1
                    }, VVN],
                    [nN, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 0
                    }, MM, vw, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 2
                    }, MM],
                    [nN, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 0
                    }, MM, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 2
                    }, vw, vw, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 14,
                        r: 1
                    }, MM],
                    [nN, nN, MM, {
                        v: 67,
                        b: 71,
                        V: 27,
                        r: 0
                    }, wV, wV, {
                        v: 62,
                        b: 71,
                        V: 8,
                        r: 3
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 1,
                        r: 1
                    }, MM],
                    [nN, nN, MM, {
                        v: 67,
                        b: 71,
                        V: 27,
                        r: 0
                    }, wV, {
                        v: 67,
                        b: 71,
                        V: 7,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 0
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 2,
                        r: 1
                    }, MM],
                    [nN, nN, MM, {
                        v: 67,
                        b: 71,
                        V: 20,
                        r: 0
                    }, wV, wV, vw, vw, vw, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 1
                    }],
                    [nN, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 1
                    }, MM, MM, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 0
                    }, MM, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 0
                    }, MM, MM],
                    [nN, nN, nN, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 2
                    }, nN, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 0
                    }, {
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 0
                    }]
                ]
            };
            nWW[vMW.MwWnV] = {
                width: 0,
                height: 0,
                nVv: 0,
                Nn: [
                    [nN],
                    [nN, nN, nN, MM, MM, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, MM, MM, VVN, VVN, VVN, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 1
                    }],
                    [nN, nN, nN, MM, {
                        v: 67,
                        b: 71,
                        V: 27,
                        r: 0
                    }, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 23,
                        r: 3
                    }, MM, {
                        v: 67,
                        b: 71,
                        V: 5,
                        r: 0
                    }, {
                        v: 67,
                        b: 71,
                        V: 13,
                        r: 1
                    }, VVN, vw, vw, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 1
                    }],
                    [nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, MM, {
                        v: 67,
                        b: 71,
                        V: 20,
                        r: 0
                    }, wV, {
                        v: 67,
                        b: 71,
                        V: 7,
                        r: 3
                    }, {
                        v: 67,
                        b: 71,
                        V: 16,
                        r: 2
                    }, MM, wV, wV, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 3
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 1
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 1
                    }],
                    [nN, vw, {
                        v: 62,
                        b: 71,
                        V: 2,
                        r: 1
                    }, MM, {
                        v: 67,
                        b: 71,
                        V: 11,
                        r: 3
                    }, wV, wV, wV, MM, wV, {
                        v: 67,
                        b: 71,
                        V: 12,
                        r: 2
                    }, VVN, VVN, VVN, vWW],
                    [nN, vw, vw, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 1
                    }, vw, vw, vw, vw, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 3
                    }, wV, wV, VVN, {
                        v: 67,
                        b: 71,
                        V: 25,
                        r: 2
                    }, {
                        v: 67,
                        b: 71,
                        V: 3,
                        r: 1
                    }, VVN],
                    [nN, vw, vw, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 1
                    }, vw, vw, vw, vw, MM, wV, wV, {
                        v: 67,
                        b: 51,
                        V: -1,
                        r: 1
                    }, wV, {
                        v: 67,
                        b: 71,
                        V: 18,
                        r: 2
                    }, VVN],
                    [nN, vw, vw, vWW, {
                        v: 62,
                        b: 71,
                        V: 3,
                        r: 3
                    }, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 16,
                        r: 2
                    }, MM, VVN, VVN, VVN, VVN, VVN, VVN],
                    [nN, vw, {
                        v: 62,
                        b: 71,
                        V: 26,
                        r: 0
                    }, MM, {
                        v: 0,
                        b: 71,
                        V: 4,
                        r: 3
                    }, {
                        v: 62,
                        b: 71,
                        V: 22,
                        r: 1
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 8,
                        r: 1
                    }, MM, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 1
                    }, nN, {
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 0
                    }],
                    [nN, vw, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 0
                    }, MM, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 1
                    }, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 14,
                        r: 1
                    }, MM, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 1
                    }],
                    [nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, MM, MM, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 0
                    }, MM, MM, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 1
                    }]
                ]
            };
            nWW[vMW.wMmmw] = {
                width: 0,
                height: 0,
                nVv: 0,
                Nn: [
                    [nN],
                    [nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 31,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 31,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, VVN, VVN, VVN, VVN],
                    [nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 71,
                        V: 23,
                        r: 2
                    }, nN, nN, nN, nN, nN, VVN, {
                        v: 67,
                        b: 71,
                        V: 21,
                        r: 0
                    }, {
                        v: 67,
                        b: 71,
                        V: 28,
                        r: 0
                    }, VVN],
                    [nN, MM, MM, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 2
                    }, MM, MM, nN, VVN, wV, wV, VVN],
                    [nN, MM, {
                        v: 62,
                        b: 71,
                        V: 12,
                        r: 0
                    }, vw, vw, vw, MM, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 2
                    }, VVN, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 0
                    }, VVN, VVN],
                    [nN, MM, vw, {
                        v: 62,
                        b: 71,
                        V: 2,
                        r: 0
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 14,
                        r: 1
                    }, MM, vw, vw, vw, vw, MM],
                    [nN, MM, {
                        v: 62,
                        b: 71,
                        V: 0,
                        r: 3
                    }, {
                        v: 62,
                        b: 71,
                        V: 7,
                        r: 0
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 8,
                        r: 1
                    }, MM, vw, {
                        v: 62,
                        b: 71,
                        V: 14,
                        r: 2
                    }, {
                        v: 62,
                        b: 71,
                        V: 5,
                        r: 2
                    }, vw, MM],
                    [nN, MM, vw, {
                        v: 62,
                        b: 71,
                        V: 1,
                        r: 2
                    }, vw, vw, MM, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 2
                    }, MM, MM, MM, MM, VVN],
                    [nN, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 1
                    }, vw, vw, vw, vw, vw, vw, vw, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 3
                    }, wV, wV, VVN],
                    [nN, MM, vw, vw, vw, vw, vw, vw, vw, VVN, {
                        v: 67,
                        b: 71,
                        V: 25,
                        r: 3
                    }, {
                        v: 67,
                        b: 71,
                        V: 18,
                        r: 3
                    }, VVN],
                    [nN, MM, MM, MM, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 2
                    }, MM, MM, MM, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 2
                    }, VVN, VVN, VVN, VVN],
                    [nN, MM, {
                        v: 62,
                        b: 71,
                        V: 20,
                        r: 1
                    }, {
                        v: 62,
                        b: 71,
                        V: 11,
                        r: 0
                    }, vw, vw, MM, {
                        v: 67,
                        b: 71,
                        V: 24,
                        r: 0
                    }, wV, wV, wV, wV, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 3
                    }],
                    [nN, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 1
                    }, vw, vw, vw, vw, MM, {
                        v: 67,
                        b: 71,
                        V: 23,
                        r: 0
                    }, wV, wV, wV, wV, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 3
                    }],
                    [nN, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 1
                    }, vw, vw, vw, vw, MM, MM, MM, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }],
                    [nN, MM, {
                        v: 62,
                        b: 71,
                        V: 14,
                        r: 2
                    }, {
                        v: 62,
                        b: 71,
                        V: 13,
                        r: 3
                    }, {
                        v: 62,
                        b: 71,
                        V: 12,
                        r: 3
                    }, vw, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 1
                    }, {
                        v: 67,
                        b: 71,
                        V: 12,
                        r: 2
                    }, MM],
                    [nN, MM, MM, MM, MM, MM, VVN, MM, MM]
                ]
            };
            nWW[vMW.vVMwW] = {
                width: 0,
                height: 0,
                nVv: 0,
                Nn: [
                    [nN],
                    [nN, VVN, VVN, VVN, VVN, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 2
                    }, VVN, VVN, VVN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, vWW],
                    [nN, VVN, {
                        v: 67,
                        b: 71,
                        V: 12,
                        r: 0
                    }, wV, {
                        v: 67,
                        b: 71,
                        V: 5,
                        r: 0
                    }, wV, {
                        v: 67,
                        b: 71,
                        V: 11,
                        r: 1
                    }, VVN, {
                        v: 67,
                        b: 71,
                        V: 13,
                        r: 0
                    }, wV, wV, VVN],
                    [nN, VVN, {
                        v: 67,
                        b: 71,
                        V: 13,
                        r: 0
                    }, wV, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 19,
                        r: 2
                    }, VVN, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 21,
                        r: 1
                    }, VVN],
                    [nN, VVN, {
                        v: 67,
                        b: 71,
                        V: 9,
                        r: 3
                    }, wV, {
                        v: 67,
                        b: 71,
                        V: 7,
                        r: 1
                    }, wV, {
                        v: 67,
                        b: 71,
                        V: 26,
                        r: 3
                    }, VVN, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 28,
                        r: 1
                    }, VVN],
                    [nN, VVN, {
                        v: 67,
                        b: 71,
                        V: 13,
                        r: 0
                    }, wV, wV, wV, wV, VVN, wV, VVN, VVN, VVN],
                    [nN, VVN, {
                        v: 67,
                        b: 71,
                        V: 9,
                        r: 3
                    }, {
                        v: 67,
                        b: 71,
                        V: 10,
                        r: 1
                    }, {
                        v: 67,
                        b: 71,
                        V: 12,
                        r: 3
                    }, wV, wV, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 1
                    }, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 27,
                        r: 2
                    }, VVN],
                    [nN, VVN, VVN, VVN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, VVN, VVN, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 0
                    }, VVN, VVN, VVN],
                    [nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 3
                    }, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 3
                    }]
                ]
            };
            nWW[vMW.MnmmV] = {
                width: 0,
                height: 0,
                nVv: 0,
                Nn: [
                    [nN],
                    [nN, MM, MM, MM, MM, MM, MM, MM, MM, MM, MM, MM, MM, MM, MM, MM, MM],
                    [nN, MM, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 0
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 9,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 9,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 9,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 9,
                        r: 0
                    }, vw, MM, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 0
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 1,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 2,
                        r: 0
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 1
                    }, MM, {
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 1
                    }],
                    [nN, MM, wV, wV, {
                        v: 62,
                        b: 71,
                        V: 10,
                        r: 2
                    }, {
                        v: 62,
                        b: 71,
                        V: 10,
                        r: 2
                    }, {
                        v: 62,
                        b: 71,
                        V: 10,
                        r: 2
                    }, {
                        v: 62,
                        b: 71,
                        V: 10,
                        r: 2
                    }, vw, MM, {
                        v: 62,
                        b: 71,
                        V: 39,
                        r: 0
                    }, vw, vw, vw, vw, vw, MM],
                    [nN, MM, {
                        v: 67,
                        b: 71,
                        V: 39,
                        r: 3
                    }, wV, wV, wV, wV, wV, wV, {
                        v: 62,
                        b: 150,
                        V: -1,
                        r: 3
                    }, wV, wV, wV, wV, wV, wV, {
                        v: 67,
                        b: 51,
                        V: -1,
                        r: 1
                    }],
                    [nN, MM, {
                        v: 85,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 85,
                        b: 31,
                        V: -1,
                        r: 2
                    }, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 1
                    }, wV, wV, wV, wV, {
                        v: 62,
                        b: 150,
                        V: -1,
                        r: 3
                    }, wV, wV, wV, wV, wV, wV, {
                        v: 67,
                        b: 51,
                        V: -1,
                        r: 3
                    }],
                    [nN, MM, {
                        v: 85,
                        b: 71,
                        V: 28,
                        r: 3
                    }, Wnm, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 1
                    }, {
                        v: 62,
                        b: 71,
                        V: 10,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 10,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 10,
                        r: 0
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 149,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 71,
                        V: 40,
                        r: 1
                    }, {
                        v: 62,
                        b: 71,
                        V: 7,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 7,
                        r: 1
                    }, MM],
                    [nN, MM, {
                        v: 85,
                        b: 71,
                        V: 21,
                        r: 3
                    }, Wnm, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 1
                    }, {
                        v: 62,
                        b: 71,
                        V: 9,
                        r: 2
                    }, {
                        v: 62,
                        b: 71,
                        V: 9,
                        r: 2
                    }, {
                        v: 62,
                        b: 71,
                        V: 9,
                        r: 2
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 142,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 140,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 140,
                        V: -1,
                        r: 1
                    }, {
                        v: 62,
                        b: 140,
                        V: -1,
                        r: 1
                    }, {
                        v: 62,
                        b: 144,
                        V: -1,
                        r: 0
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 8,
                        r: 1
                    }, MM],
                    [nN, MM, MM, MM, MM, MM, MM, MM, MM, mVW, {
                        v: 0,
                        b: 71,
                        V: 41,
                        r: 2
                    }, mVW, mVW, mVW, MM, MM, MM],
                    [nN, nN, nN, nN, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 3
                    }, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 3
                    }, nN, nN, nN, mVW, Wnm, Wnm, {
                        v: 85,
                        b: 71,
                        V: 18,
                        r: 2
                    }, mVW, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 0
                    }],
                    [nN, nN, nN, nN, nN, nN, nN, nN, nN, mVW, {
                        v: 85,
                        b: 71,
                        V: 25,
                        r: 1
                    }, Wnm, {
                        v: 85,
                        b: 71,
                        V: 19,
                        r: 2
                    }, mVW],
                    [nN, nN, nN, nN, nN, nN, nN, nN, nN, mVW, mVW, mVW, mVW, mVW]
                ]
            };
            nWW[vMW.VnMvm] = {
                width: 0,
                height: 0,
                nVv: 0,
                Nn: [
                    [nN],
                    [nN, wNM, wNM, wNM, {
                        v: 67,
                        b: 50,
                        V: -1,
                        r: 2
                    }, wNM, wNM, wNM],
                    [nN, wNM, {
                        v: 62,
                        b: 71,
                        V: 9,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 8,
                        r: 0
                    }, wV, {
                        v: 62,
                        b: 71,
                        V: 13,
                        r: 1
                    }, {
                        v: 62,
                        b: 71,
                        V: 6,
                        r: 0
                    }, wNM],
                    [nN, wNM, {
                        v: 62,
                        b: 71,
                        V: 10,
                        r: 2
                    }, vw, wV, vw, vw, wNM],
                    [nN, {
                        v: 67,
                        b: 50,
                        V: -1,
                        r: 1
                    }, wV, wV, {
                        v: 67,
                        b: 148,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 144,
                        V: -1,
                        r: 0
                    }, wV, {
                        v: 67,
                        b: 50,
                        V: -1,
                        r: 3
                    }],
                    [nN, wNM, {
                        v: 62,
                        b: 71,
                        V: 28,
                        r: 3
                    }, vw, wV, vw, {
                        v: 62,
                        b: 71,
                        V: 19,
                        r: 2
                    }, wNM],
                    [nN, wNM, {
                        v: 62,
                        b: 71,
                        V: 21,
                        r: 3
                    }, vw, wV, vw, {
                        v: 62,
                        b: 71,
                        V: 26,
                        r: 2
                    }, wNM],
                    [nN, wNM, wNM, wNM, {
                        v: 67,
                        b: 50,
                        V: -1,
                        r: 0
                    }, wNM, wNM, wNM]
                ]
            };
            nWW[vMW.MMVVM] = {
                width: 0,
                height: 0,
                nVv: 0,
                Nn: [
                    [nN],
                    [nN, vWW, vWW, vWW, vWW, vWW, vWW, vWW, vWW],
                    [nN, vWW, {
                        v: 62,
                        b: 148,
                        V: -1,
                        r: 1
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 16,
                        r: 1
                    }, {
                        v: 62,
                        b: 71,
                        V: 39,
                        r: 1
                    }, vw, {
                        v: 62,
                        b: 148,
                        V: -1,
                        r: 1
                    }, vWW],
                    [nN, vWW, {
                        v: 62,
                        b: 140,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 140,
                        V: -1,
                        r: 0
                    }, vWW],
                    [nN, vWW, {
                        v: 62,
                        b: 140,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 69,
                        V: -1,
                        r: 1
                    }, VWV, VWV, {
                        v: 84,
                        b: 69,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 140,
                        V: -1,
                        r: 0
                    }, vWW],
                    [nN, vWW, {
                        v: 62,
                        b: 140,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 69,
                        V: -1,
                        r: 1
                    }, VWV, VWV, {
                        v: 84,
                        b: 69,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 140,
                        V: -1,
                        r: 0
                    }, vWW],
                    [nN, vWW, {
                        v: 62,
                        b: 140,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 69,
                        V: -1,
                        r: 1
                    }, VWV, VWV, {
                        v: 84,
                        b: 69,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 140,
                        V: -1,
                        r: 0
                    }, vWW],
                    [nN, vWW, {
                        v: 62,
                        b: 140,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 140,
                        V: -1,
                        r: 0
                    }, vWW],
                    [nN, vWW, {
                        v: 62,
                        b: 148,
                        V: -1,
                        r: 1
                    }, {
                        v: 62,
                        b: 144,
                        V: -1,
                        r: 0
                    }, vw, vw, {
                        v: 62,
                        b: 144,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 148,
                        V: -1,
                        r: 1
                    }, vWW],
                    [nN, vWW, vWW, vWW, {
                        v: 84,
                        b: 31,
                        V: -1,
                        r: 2
                    }, {
                        v: 84,
                        b: 31,
                        V: -1,
                        r: 2
                    }, vWW, vWW, vWW, {
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 1
                    }],
                    [nN, vWW, {
                        v: 84,
                        b: 71,
                        V: 8,
                        r: 0
                    }, {
                        v: 84,
                        b: 71,
                        V: 8,
                        r: 0
                    }, VWV, VWV, {
                        v: 84,
                        b: 71,
                        V: 8,
                        r: 0
                    }, {
                        v: 84,
                        b: 71,
                        V: 8,
                        r: 0
                    }, vWW, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 1
                    }],
                    [nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 31,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 31,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }]
                ]
            };
            nWW[vMW.nvMmm] = {
                width: 0,
                height: 0,
                nVv: 0,
                Nn: [
                    [nN],
                    [nN, wV, {
                        v: 67,
                        b: 148,
                        V: -1,
                        r: 0
                    }, wV, wV, wV, {
                        v: 67,
                        b: 151,
                        V: -1,
                        r: 3
                    }, {
                        v: 67,
                        b: 148,
                        V: -1,
                        r: 3
                    }, nN, nN, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 0
                    }, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 3
                    }, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 3
                    }],
                    [nN, nNW, {
                        v: 67,
                        b: 149,
                        V: -1,
                        r: 0
                    }, nNW, {
                        v: 67,
                        b: 150,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 150,
                        V: -1,
                        r: 0
                    }, nNW, {
                        v: 67,
                        b: 149,
                        V: -1,
                        r: 0
                    }, nMv, nMv, vNM, vNM, vNM, vNM],
                    [nN, vNM, {
                        v: 62,
                        b: 148,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 151,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 143,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 143,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 140,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 148,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 0
                    }, nMv, {
                        v: 84,
                        b: 71,
                        V: 23,
                        r: 0
                    }, {
                        v: 84,
                        b: 71,
                        V: 28,
                        r: 0
                    }, {
                        v: 84,
                        b: 71,
                        V: 28,
                        r: 0
                    }, vNM, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 3
                    }],
                    [nN, vNM, vw, wV, wV, wV, wV, {
                        v: 62,
                        b: 142,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 146,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 32,
                        V: -1,
                        r: 3
                    }, VWV, VWV, VWV, vNM],
                    [nN, vNM, {
                        v: 62,
                        b: 71,
                        V: 4,
                        r: 3
                    }, wV, {
                        v: 67,
                        b: 71,
                        V: 7,
                        r: 3
                    }, {
                        v: 67,
                        b: 71,
                        V: 7,
                        r: 3
                    }, wV, {
                        v: 62,
                        b: 71,
                        V: 3,
                        r: 1
                    }, {
                        v: 0,
                        b: 149,
                        V: -1,
                        r: 0
                    }, vNM, vNM, Wnm, Wnm, vNM],
                    [nN, vNM, {
                        v: 62,
                        b: 71,
                        V: 3,
                        r: 3
                    }, wV, {
                        v: 67,
                        b: 71,
                        V: 7,
                        r: 3
                    }, {
                        v: 67,
                        b: 71,
                        V: 7,
                        r: 3
                    }, wV, {
                        v: 62,
                        b: 71,
                        V: 4,
                        r: 1
                    }, {
                        v: 0,
                        b: 149,
                        V: -1,
                        r: 0
                    }, {
                        v: 85,
                        b: 71,
                        V: 21,
                        r: 3
                    }, {
                        v: 85,
                        b: 32,
                        V: -1,
                        r: 3
                    }, Wnm, Wnm, vNM],
                    [nN, vNM, vw, wV, wV, wV, wV, vw, {
                        v: 0,
                        b: 149,
                        V: -1,
                        r: 0
                    }, vNM, vNM, vNM, vNM, vNM],
                    [nN, vNM, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 3
                    }, vw, vw, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 3
                    }, {
                        v: 0,
                        b: 149,
                        V: -1,
                        r: 0
                    }, vNM],
                    [nN, nNW, nNW, nNW, {
                        v: 67,
                        b: 52,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 52,
                        V: -1,
                        r: 2
                    }, nNW, nNW, {
                        v: 0,
                        b: 149,
                        V: -1,
                        r: 0
                    }, nNW],
                    [nN, nNW, {
                        v: 67,
                        b: 71,
                        V: 27,
                        r: 1
                    }, wV, wV, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 16,
                        r: 1
                    }, {
                        v: 67,
                        b: 144,
                        V: -1,
                        r: 3
                    }, nNW],
                    [nN, {
                        v: 67,
                        b: 70,
                        V: -1,
                        r: 1
                    }, wV, vw, vw, vw, wV, {
                        v: 67,
                        b: 71,
                        V: 13,
                        r: 0
                    }, wV, nNW],
                    [nN, {
                        v: 67,
                        b: 70,
                        V: -1,
                        r: 1
                    }, wV, {
                        v: 62,
                        b: 71,
                        V: 4,
                        r: 3
                    }, vw, vw, wV, {
                        v: 67,
                        b: 71,
                        V: 9,
                        r: 3
                    }, {
                        v: 67,
                        b: 71,
                        V: 10,
                        r: 1
                    }, nNW, {
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 3
                    }],
                    [nN, nNW, {
                        v: 67,
                        b: 71,
                        V: 27,
                        r: 0
                    }, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 3,
                        r: 2
                    }, wV, wV, wV, nNW, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 2
                    }],
                    [nN, nNW, {
                        v: 67,
                        b: 71,
                        V: 18,
                        r: 0
                    }, wV, wV, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 23,
                        r: 0
                    }, {
                        v: 67,
                        b: 71,
                        V: 12,
                        r: 3
                    }, nNW],
                    [nN, nNW, nNW, nNW, {
                        v: 67,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 70,
                        V: -1,
                        r: 0
                    }, nNW, nNW, nNW, nNW]
                ]
            };
            nWW[vMW.VVVnN] = {
                width: 0,
                height: 0,
                nVv: 0,
                Nn: [
                    [nN],
                    [nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 151,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 148,
                        V: -1,
                        r: 0
                    }, nN, {
                        v: 0,
                        b: 148,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 151,
                        V: -1,
                        r: 0
                    }],
                    [nN, Wmnvv, Wmnvv, {
                        v: 0,
                        b: 30,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 30,
                        V: -1,
                        r: 2
                    }, Vvn, Vvn, {
                        v: 67,
                        b: 149,
                        V: -1,
                        r: 2
                    }, {
                        v: 67,
                        b: 150,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 149,
                        V: -1,
                        r: 0
                    }, Vvn],
                    [nN, Wmnvv, {
                        v: 0,
                        b: 71,
                        V: 23,
                        r: 3
                    }, nN, nN, Vvn, {
                        v: 67,
                        b: 71,
                        V: 9,
                        r: 0
                    }, {
                        v: 67,
                        b: 143,
                        V: -1,
                        r: 3
                    }, {
                        v: 67,
                        b: 146,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 143,
                        V: -1,
                        r: 1
                    }, Vvn, {
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 2
                    }],
                    [nN, Wmnvv, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 3
                    }, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 3
                    }, {
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 3
                    }, Vvn, {
                        v: 67,
                        b: 71,
                        V: 10,
                        r: 2
                    }, {
                        v: 67,
                        b: 151,
                        V: -1,
                        r: 1
                    }, wV, {
                        v: 67,
                        b: 151,
                        V: -1,
                        r: 1
                    }, Vvn, Vvn, Vvn],
                    [nN, Wmnvv, {
                        v: 0,
                        b: 144,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 144,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 144,
                        V: -1,
                        r: 3
                    }, Vvn, wV, wV, wV, wV, {
                        v: 62,
                        b: 71,
                        V: 20,
                        r: 1
                    }, {
                        v: 62,
                        b: 71,
                        V: 11,
                        r: 0
                    }, {
                        v: 62,
                        b: 70,
                        V: -1,
                        r: 3
                    }],
                    [nN, Vvn, {
                        v: 85,
                        b: 149,
                        V: -1,
                        r: 0
                    }, {
                        v: 85,
                        b: 149,
                        V: -1,
                        r: 0
                    }, {
                        v: 85,
                        b: 149,
                        V: -1,
                        r: 0
                    }, Vvn, {
                        v: 62,
                        b: 32,
                        V: -1,
                        r: 2
                    }, nMv, {
                        v: 67,
                        b: 71,
                        V: 8,
                        r: 0
                    }, wV, vw, vw, {
                        v: 62,
                        b: 70,
                        V: -1,
                        r: 3
                    }],
                    [nN, {
                        v: 85,
                        b: 70,
                        V: -1,
                        r: 1
                    }, {
                        v: 85,
                        b: 147,
                        V: -1,
                        r: 2
                    }, {
                        v: 85,
                        b: 146,
                        V: -1,
                        r: 2
                    }, {
                        v: 85,
                        b: 140,
                        V: -1,
                        r: 2
                    }, Vvn, vw, {
                        v: 62,
                        b: 70,
                        V: -1,
                        r: 3
                    }, wV, wV, vw, vw, {
                        v: 62,
                        b: 70,
                        V: -1,
                        r: 3
                    }],
                    [nN, Vvn, {
                        v: 85,
                        b: 71,
                        V: 31,
                        r: 0
                    }, {
                        v: 85,
                        b: 142,
                        V: -1,
                        r: 3
                    }, {
                        v: 85,
                        b: 146,
                        V: -1,
                        r: 1
                    }, {
                        v: 85,
                        b: 150,
                        V: -1,
                        r: 1
                    }, {
                        v: 62,
                        b: 71,
                        V: 5,
                        r: 2
                    }, {
                        v: 62,
                        b: 70,
                        V: -1,
                        r: 3
                    }, {
                        v: 67,
                        b: 71,
                        V: 0,
                        r: 2
                    }, wV, {
                        v: 62,
                        b: 71,
                        V: 10,
                        r: 3
                    }, {
                        v: 62,
                        b: 71,
                        V: 7,
                        r: 0
                    }, {
                        v: 62,
                        b: 70,
                        V: -1,
                        r: 3
                    }],
                    [nN, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, {
                        v: 85,
                        b: 32,
                        V: -1,
                        r: 2
                    }, Vvn, Vvn, Vvn],
                    [nN, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 0
                    }, {
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 0
                    }, Vvn, {
                        v: 85,
                        b: 71,
                        V: 28,
                        r: 3
                    }, Wnm, Wnm, Vvn, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 0
                    }, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 0
                    }],
                    [nN, nN, nN, nN, nN, nN, Vvn, {
                        v: 85,
                        b: 71,
                        V: 21,
                        r: 3
                    }, Wnm, {
                        v: 85,
                        b: 71,
                        V: 18,
                        r: 3
                    }, Vvn],
                    [nN, nN, nN, nN, nN, nN, Vvn, Vvn, Vvn, Vvn, Vvn]
                ]
            };
            nWW[vMW.vNmvW] = {
                width: 0,
                height: 0,
                nVv: WMWwm,
                Nn: [
                    [nN],
                    [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 111,
                        V: -1,
                        r: 3
                    }, nN, nN, {
                        v: 0,
                        b: 111,
                        V: -1,
                        r: 3
                    }, nN, {
                        v: 0,
                        b: 111,
                        V: -1,
                        r: 3
                    }, nN, {
                        v: 0,
                        b: 111,
                        V: -1,
                        r: 3
                    }, nN, nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 26,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 24,
                        r: 0
                    }, nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 0
                    }],
                    [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nNW, nNW, nNW, nNW, nNW, nNW, nNW, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 0
                    }],
                    [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, Vvn, {
                        v: 85,
                        b: 71,
                        V: 37,
                        r: 1
                    }, {
                        v: 85,
                        b: 71,
                        V: 28,
                        r: 0
                    }, Wnm, {
                        v: 85,
                        b: 71,
                        V: 31,
                        r: 1
                    }, {
                        v: 85,
                        b: 71,
                        V: 32,
                        r: 1
                    }, Vvn, {
                        v: 85,
                        b: 71,
                        V: 37,
                        r: 1
                    }, Wnm, Wnm, Vvn, nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nNW, vw, {
                        v: 62,
                        b: 70,
                        V: -1,
                        r: 3
                    }, wV, wV, {
                        v: 62,
                        b: 71,
                        V: 13,
                        r: 2
                    }, nNW, MWn, MWn, MWn, MWn],
                    [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, Vvn, Wnm, Wnm, Wnm, Wnm, Wnm, Vvn, Wnm, Wnm, {
                        v: 85,
                        b: 71,
                        V: 36,
                        r: 1
                    }, Vvn, nN, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 0
                    }, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, {
                        v: 0,
                        b: 71,
                        V: 23,
                        r: 0
                    }, nNW, vw, {
                        v: 62,
                        b: 71,
                        V: 40,
                        r: 2
                    }, wV, wV, {
                        v: 62,
                        b: 71,
                        V: 12,
                        r: 2
                    }, nNW, {
                        v: 84,
                        b: 71,
                        V: 26,
                        r: 3
                    }, {
                        v: 84,
                        b: 71,
                        V: 17,
                        r: 3
                    }, VWV, MWn],
                    [nN, nN, nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 0
                    }, MWn, MWn, {
                        v: 84,
                        b: 52,
                        V: -1,
                        r: 0
                    }, MWn, MWn, Vvn, Vvn, MWn, {
                        v: 85,
                        b: 71,
                        V: 41,
                        r: 0
                    }, MWn, {
                        v: 85,
                        b: 71,
                        V: 41,
                        r: 0
                    }, Vvn, vNM, Vvn, Vvn, Vvn, Vvn, Vvn, Vvn, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, {
                        v: 0,
                        b: 151,
                        V: -1,
                        r: 1
                    }, {
                        v: 67,
                        b: 150,
                        V: -1,
                        r: 1
                    }, wV, wV, wV, wV, vw, nNW, VWV, VWV, {
                        v: 84,
                        b: 71,
                        V: 18,
                        r: 2
                    }, MWn],
                    [nN, nN, nN, nN, nN, nN, nN, nN, nN, MWn, VWV, VWV, VWV, VWV, {
                        v: 84,
                        b: 71,
                        V: 35,
                        r: 2
                    }, {
                        v: 84,
                        b: 71,
                        V: 35,
                        r: 2
                    }, VWV, VWV, VWV, VWV, {
                        v: 84,
                        b: 71,
                        V: 35,
                        r: 2
                    }, {
                        v: 84,
                        b: 71,
                        V: 35,
                        r: 2
                    }, VWV, VWV, VWV, VWV, {
                        v: 84,
                        b: 71,
                        V: 33,
                        r: 2
                    }, Vvn, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, {
                        v: 0,
                        b: 151,
                        V: -1,
                        r: 1
                    }, {
                        v: 67,
                        b: 150,
                        V: -1,
                        r: 1
                    }, wV, wV, wV, wV, vw, {
                        v: 67,
                        b: 71,
                        V: 41,
                        r: 1
                    }, VWV, VWV, {
                        v: 84,
                        b: 71,
                        V: 18,
                        r: 2
                    }, MWn],
                    [nN, nN, nN, nN, nN, nN, nN, nN, nN, MWn, {
                        v: 84,
                        b: 71,
                        V: 9,
                        r: 0
                    }, VWV, VWV, VWV, VWV, VWV, {
                        v: 84,
                        b: 151,
                        V: -1,
                        r: 1
                    }, VWV, VWV, {
                        v: 84,
                        b: 151,
                        V: -1,
                        r: 1
                    }, VWV, VWV, VWV, VWV, VWV, VWV, {
                        v: 85,
                        b: 71,
                        V: 33,
                        r: 2
                    }, Vvn, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, {
                        v: 0,
                        b: 71,
                        V: 23,
                        r: 0
                    }, nNW, {
                        v: 62,
                        b: 71,
                        V: 39,
                        r: 3
                    }, {
                        v: 62,
                        b: 71,
                        V: 39,
                        r: 3
                    }, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 3
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 2
                    }, nNW, {
                        v: 84,
                        b: 71,
                        V: 26,
                        r: 2
                    }, VWV, {
                        v: 84,
                        b: 71,
                        V: 16,
                        r: 2
                    }, MWn, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 1
                    }],
                    [nN, nN, nN, nN, nN, nN, nN, nN, nN, MWn, {
                        v: 84,
                        b: 71,
                        V: 10,
                        r: 2
                    }, VWV, VWV, VWV, MWn, MWn, {
                        v: 84,
                        b: 149,
                        V: -1,
                        r: 2
                    }, {
                        v: 85,
                        b: 150,
                        V: -1,
                        r: 0
                    }, {
                        v: 85,
                        b: 150,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 149,
                        V: -1,
                        r: 2
                    }, MWn, MWn, VWV, VWV, Vvn, MWn, Vvn, Vvn, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nNW, nNW, nNW, nNW, {
                        v: 0,
                        b: 52,
                        V: -1,
                        r: 0
                    }, nNW, nNW, MWn, MWn, MWn, MWn],
                    [nN, nN, nN, nN, nN, nN, nN, nN, nN, MWn, MWn, MWn, {
                        v: 84,
                        b: 71,
                        V: 33,
                        r: 0
                    }, VWV, MWn, {
                        v: 84,
                        b: 71,
                        V: 32,
                        r: 0
                    }, {
                        v: 84,
                        b: 142,
                        V: -1,
                        r: 3
                    }, {
                        v: 84,
                        b: 140,
                        V: -1,
                        r: 1
                    }, {
                        v: 85,
                        b: 146,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 142,
                        V: -1,
                        r: 2
                    }, {
                        v: 84,
                        b: 151,
                        V: -1,
                        r: 2
                    }, {
                        v: 84,
                        b: 150,
                        V: -1,
                        r: 1
                    }, VWV, {
                        v: 84,
                        b: 71,
                        V: 33,
                        r: 2
                    }, Vvn, {
                        v: 0,
                        b: 71,
                        V: 37,
                        r: 1
                    }, {
                        v: 0,
                        b: 71,
                        V: 38,
                        r: 1
                    }, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 0
                    }, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 0
                    }, VWV, VWV, {
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 0
                    }],
                    [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, MWn, {
                        v: 84,
                        b: 71,
                        V: 22,
                        r: 0
                    }, VWV, MWn, VWV, {
                        v: 84,
                        b: 71,
                        V: 34,
                        r: 3
                    }, Wnm, {
                        v: 85,
                        b: 140,
                        V: -1,
                        r: 2
                    }, {
                        v: 84,
                        b: 71,
                        V: 34,
                        r: 3
                    }, VWV, MWn, VWV, {
                        v: 84,
                        b: 71,
                        V: 38,
                        r: 0
                    }, Vvn, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 32,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 24,
                        r: 0
                    }],
                    [nN, nN, nN, nN, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 0
                    }, {
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 26,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 24,
                        r: 0
                    }, nN, MWn, vNM, {
                        v: 84,
                        b: 32,
                        V: -1,
                        r: 0
                    }, MWn, {
                        v: 84,
                        b: 142,
                        V: -1,
                        r: 0
                    }, {
                        v: 85,
                        b: 148,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 146,
                        V: -1,
                        r: 1
                    }, {
                        v: 85,
                        b: 146,
                        V: -1,
                        r: 0
                    }, {
                        v: 85,
                        b: 148,
                        V: -1,
                        r: 0
                    }, {
                        v: 85,
                        b: 142,
                        V: -1,
                        r: 1
                    }, MWn, {
                        v: 84,
                        b: 32,
                        V: -1,
                        r: 0
                    }, vNM, Vvn, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 35,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 31,
                        r: 0
                    }],
                    [nN, nN, nN, Vvn, Vvn, Vvn, Vvn, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, {
                        v: 0,
                        b: 70,
                        V: -1,
                        r: 3
                    }, Wnm, Wnm, MWn, {
                        v: 84,
                        b: 140,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 71,
                        V: 34,
                        r: 1
                    }, {
                        v: 85,
                        b: 140,
                        V: -1,
                        r: 2
                    }, Wnm, {
                        v: 84,
                        b: 71,
                        V: 34,
                        r: 1
                    }, {
                        v: 84,
                        b: 140,
                        V: -1,
                        r: 2
                    }, MWn, Wnm, Wnm, {
                        v: 0,
                        b: 70,
                        V: -1,
                        r: 1
                    }, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 71,
                        V: 23,
                        r: 0
                    }, nN, nN, nN, vw],
                    [nN, nN, nN, Vvn, {
                        v: 85,
                        b: 71,
                        V: 33,
                        r: 1
                    }, {
                        v: 85,
                        b: 71,
                        V: 33,
                        r: 1
                    }, Vvn, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, {
                        v: 0,
                        b: 70,
                        V: -1,
                        r: 3
                    }, {
                        v: 85,
                        b: 70,
                        V: -1,
                        r: 2
                    }, VWV, {
                        v: 84,
                        b: 144,
                        V: -1,
                        r: 1
                    }, {
                        v: 0,
                        b: 149,
                        V: -1,
                        r: 1
                    }, {
                        v: 84,
                        b: 145,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 142,
                        V: -1,
                        r: 0
                    }, {
                        v: 85,
                        b: 146,
                        V: -1,
                        r: 0
                    }, {
                        v: 85,
                        b: 147,
                        V: -1,
                        r: 3
                    }, {
                        v: 84,
                        b: 142,
                        V: -1,
                        r: 1
                    }, {
                        v: 84,
                        b: 146,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 149,
                        V: -1,
                        r: 3
                    }, {
                        v: 84,
                        b: 144,
                        V: -1,
                        r: 1
                    }, VWV, {
                        v: 85,
                        b: 70,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 70,
                        V: -1,
                        r: 1
                    }, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, mNV, mNV, {
                        v: 67,
                        b: 30,
                        V: -1,
                        r: 2
                    }, mNV, mNV, vw, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }],
                    [nN, nN, nN, MWn, VWV, VWV, MWn, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, {
                        v: 0,
                        b: 32,
                        V: -1,
                        r: 3
                    }, Wnm, Wnm, Wnm, MWn, {
                        v: 0,
                        b: 149,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 149,
                        V: -1,
                        r: 0
                    }, {
                        v: 85,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 85,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 149,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 149,
                        V: -1,
                        r: 0
                    }, MWn, Wnm, Wnm, Wnm, {
                        v: 0,
                        b: 32,
                        V: -1,
                        r: 1
                    }, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 0
                    }, mNV, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 6,
                        r: 1
                    }, mNV, vw, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 1
                    }, wV, wV, nN, nN, nN, nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 3
                    }],
                    [nN, nN, nN, {
                        v: 84,
                        b: 71,
                        V: 41,
                        r: 1
                    }, VWV, VWV, {
                        v: 84,
                        b: 71,
                        V: 41,
                        r: 3
                    }, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, {
                        v: 0,
                        b: 70,
                        V: -1,
                        r: 3
                    }, {
                        v: 85,
                        b: 70,
                        V: -1,
                        r: 0
                    }, VWV, VWV, VWV, {
                        v: 84,
                        b: 144,
                        V: -1,
                        r: 1
                    }, {
                        v: 84,
                        b: 144,
                        V: -1,
                        r: 1
                    }, VWV, VWV, {
                        v: 84,
                        b: 144,
                        V: -1,
                        r: 1
                    }, {
                        v: 84,
                        b: 144,
                        V: -1,
                        r: 1
                    }, VWV, VWV, VWV, {
                        v: 85,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 70,
                        V: -1,
                        r: 1
                    }, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, {
                        v: 67,
                        b: 30,
                        V: -1,
                        r: 1
                    }, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 19,
                        r: 2
                    }, wNM, vw, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 1
                    }, wV, wV, nN, nN, nN, nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 3
                    }],
                    [nN, nN, nN, Vvn, {
                        v: 85,
                        b: 71,
                        V: 36,
                        r: 2
                    }, {
                        v: 85,
                        b: 71,
                        V: 37,
                        r: 3
                    }, Vvn, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, {
                        v: 0,
                        b: 70,
                        V: -1,
                        r: 3
                    }, {
                        v: 85,
                        b: 71,
                        V: 39,
                        r: 0
                    }, Wnm, Wnm, Wnm, Wnm, Wnm, Wnm, Wnm, Wnm, Wnm, Wnm, {
                        v: 85,
                        b: 71,
                        V: 35,
                        r: 1
                    }, {
                        v: 0,
                        b: 70,
                        V: -1,
                        r: 1
                    }, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, mNV, {
                        v: 67,
                        b: 71,
                        V: 8,
                        r: 3
                    }, wV, {
                        v: 67,
                        b: 71,
                        V: 0,
                        r: 1
                    }, mNV, vw, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 1
                    }, {
                        v: 67,
                        b: 71,
                        V: 23,
                        r: 1
                    }, {
                        v: 67,
                        b: 71,
                        V: 23,
                        r: 1
                    }, nN, nN, nN, nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 3
                    }],
                    [nN, nN, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 1
                    }, Vvn, Vvn, Vvn, Vvn, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, {
                        v: 0,
                        b: 70,
                        V: -1,
                        r: 3
                    }, {
                        v: 84,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 32,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 32,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 70,
                        V: -1,
                        r: 1
                    }, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, {
                        v: 0,
                        b: 71,
                        V: 23,
                        r: 0
                    }, mNV, mNV, mNV, mNV, mNV, vw, VVN, VVN, VVN, VVN, nN, nN, nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 3
                    }],
                    [nN, nN, nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, vw, vw, vw, vw, vw, vw, vw, VVN, vw, {
                        v: 62,
                        b: 71,
                        V: 21,
                        r: 1
                    }, MM, wV, wV, wV, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 3
                    }],
                    [{
                        v: 0,
                        b: 86,
                        V: 26,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 33,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 32,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 33,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 32,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 24,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 2
                    }, VVN, VVN, VVN, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 0
                    }, MM, MM, {
                        v: 67,
                        b: 51,
                        V: -1,
                        r: 2
                    }, VVN, VVN, VVN, VVN],
                    [{
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 28,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 0
                    }, VVN, {
                        v: 67,
                        b: 71,
                        V: 13,
                        r: 1
                    }, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 27,
                        r: 1
                    }, wV, wV, VVN, {
                        v: 67,
                        b: 71,
                        V: 23,
                        r: 3
                    }, wV, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 3
                    }],
                    [{
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 27,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, vw, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 1
                    }, wV, wV, wV, wV, wV, wV, VVN, wV, wV, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 3
                    }],
                    [{
                        v: 0,
                        b: 86,
                        V: 30,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 42,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 43,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 34,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 0
                    }, VVN, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 0
                    }, wV, wV, VVN, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 0
                    }, VVN, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 1
                    }],
                    [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 7,
                        r: 0
                    }, nN, nN, nN, nN, nN, nN, {
                        v: 84,
                        b: 71,
                        V: 23,
                        r: 0
                    }, {
                        v: 84,
                        b: 151,
                        V: -1,
                        r: 0
                    }, {
                        v: 84,
                        b: 71,
                        V: 23,
                        r: 0
                    }, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 0
                    }, VVN, {
                        v: 67,
                        b: 71,
                        V: 15,
                        r: 0
                    }, {
                        v: 67,
                        b: 71,
                        V: 4,
                        r: 0
                    }, {
                        v: 67,
                        b: 71,
                        V: 3,
                        r: 0
                    }, {
                        v: 67,
                        b: 71,
                        V: 14,
                        r: 0
                    }, wV, wV, wV, wV, wV, VVN, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 1
                    }],
                    [nN, nN, wNM, {
                        v: 62,
                        b: 71,
                        V: 26,
                        r: 1
                    }, vw, vw, wNM, {
                        v: 62,
                        b: 71,
                        V: 16,
                        r: 2
                    }, vw, vw, wNM, {
                        v: 0,
                        b: 31,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 31,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, nN, {
                        v: 0,
                        b: 86,
                        V: 15,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, nN, nN, nN, nN, nMv, nMv, nMv, {
                        v: 62,
                        b: 150,
                        V: -1,
                        r: 3
                    }, nMv, nMv, nMv, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 0
                    }, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 71,
                        V: 23,
                        r: 0
                    }, VVN, {
                        v: 67,
                        b: 71,
                        V: 4,
                        r: 3
                    }, {
                        v: 67,
                        b: 71,
                        V: 7,
                        r: 3
                    }, {
                        v: 67,
                        b: 71,
                        V: 7,
                        r: 3
                    }, {
                        v: 67,
                        b: 71,
                        V: 3,
                        r: 1
                    }, wV, vw, vw, vw, wV, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 3
                    }],
                    [nN, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 0
                    }, wNM, {
                        v: 62,
                        b: 71,
                        V: 17,
                        r: 1
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 22,
                        r: 1
                    }, wNM, {
                        v: 62,
                        b: 71,
                        V: 17,
                        r: 2
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 15,
                        r: 1
                    }, wNM, nN, nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 3
                    }, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, nN, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 0
                    }, nN, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 0
                    }, nMv, {
                        v: 62,
                        b: 71,
                        V: 16,
                        r: 2
                    }, {
                        v: 62,
                        b: 71,
                        V: 39,
                        r: 1
                    }, vw, vw, vw, nMv, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 0
                    }, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 148,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 3
                    }, wV, wV, wV, wV, wV, vw, vw, vw, wV, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 3
                    }],
                    [nN, nN, wNM, {
                        v: 62,
                        b: 71,
                        V: 10,
                        r: 0
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 0,
                        r: 1
                    }, wNM, {
                        v: 62,
                        b: 71,
                        V: 1,
                        r: 3
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 8,
                        r: 1
                    }, wNM, nN, nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 3
                    }, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, nN, vNM, MWn, MWn, nMv, vw, vw, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 27,
                        r: 2
                    }, nMv, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 140,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 3
                    }, {
                        v: 67,
                        b: 71,
                        V: 23,
                        r: 0
                    }, {
                        v: 67,
                        b: 71,
                        V: 27,
                        r: 3
                    }, {
                        v: 67,
                        b: 71,
                        V: 8,
                        r: 2
                    }, {
                        v: 67,
                        b: 71,
                        V: 27,
                        r: 3
                    }, wV, wV, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 12,
                        r: 2
                    }, VVN],
                    [nN, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 0
                    }, wNM, {
                        v: 62,
                        b: 71,
                        V: 9,
                        r: 2
                    }, vw, vw, wNM, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 12,
                        r: 2
                    }, Wmnvv, nN, nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 2
                    }, MWn, {
                        v: 84,
                        b: 71,
                        V: 16,
                        r: 1
                    }, {
                        v: 84,
                        b: 71,
                        V: 19,
                        r: 1
                    }, MWn, {
                        v: 62,
                        b: 32,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 70,
                        V: -1,
                        r: 0
                    }, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 39,
                        r: 2
                    }, nMv, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 148,
                        V: -1,
                        r: 0
                    }, VVN, VVN, VVN, VVN, VVN, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 0
                    }, VVN, VVN, VVN, VVN, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 1
                    }],
                    [nN, {
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 0
                    }, Wmnvv, wNM, wNM, wNM, wNM, wNM, wNM, Wmnvv, Wmnvv, nN, nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, {
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 0
                    }, MWn, VWV, VWV, MWn, wV, {
                        v: 67,
                        b: 70,
                        V: -1,
                        r: 3
                    }, vw, vw, vw, nMv, {
                        v: 84,
                        b: 71,
                        V: 23,
                        r: 0
                    }, VWV, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 140,
                        V: -1,
                        r: 0
                    }, VVN, {
                        v: 62,
                        b: 71,
                        V: 20,
                        r: 1
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 28,
                        r: 0
                    }, MM, vw, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 20,
                        r: 1
                    }, {
                        v: 62,
                        b: 71,
                        V: 13,
                        r: 1
                    }, MM],
                    [nN, nN, nN, MM, MM, MM, MM, MM, MM, vw, vw, vw, vw, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 3
                    }, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, nN, MWn, VWV, VWV, nNW, wV, {
                        v: 67,
                        b: 70,
                        V: -1,
                        r: 3
                    }, vw, vw, vw, {
                        v: 62,
                        b: 150,
                        V: -1,
                        r: 3
                    }, {
                        v: 84,
                        b: 151,
                        V: -1,
                        r: 0
                    }, VWV, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 140,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 1
                    }, vw, vw, vw, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 3
                    }, vw, vw, vw, vw, vw, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 1
                    }],
                    [nN, nN, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 0
                    }, MM, {
                        v: 62,
                        b: 71,
                        V: 6,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 14,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 15,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 5,
                        r: 0
                    }, MM, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 2
                    }, vw, vw, vw, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 3
                    }, nN, {
                        v: 0,
                        b: 86,
                        V: 16,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, nN, MWn, {
                        v: 84,
                        b: 71,
                        V: 18,
                        r: 3
                    }, VWV, {
                        v: 67,
                        b: 150,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 142,
                        V: -1,
                        r: 1
                    }, {
                        v: 67,
                        b: 71,
                        V: 40,
                        r: 2
                    }, vw, vw, vw, {
                        v: 62,
                        b: 150,
                        V: -1,
                        r: 3
                    }, {
                        v: 84,
                        b: 151,
                        V: -1,
                        r: 3
                    }, VWV, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 143,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 149,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 144,
                        V: -1,
                        r: 3
                    }, vw, vw, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 3
                    }, vw, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 12,
                        r: 3
                    }, {
                        v: 62,
                        b: 71,
                        V: 12,
                        r: 3
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 1
                    }],
                    [nN, nN, nN, MM, vw, vw, vw, vw, MM, VVN, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 2
                    }, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 2
                    }, VVN, VVN, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 13,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, nN, MWn, MWn, MWn, nNW, {
                        v: 67,
                        b: 144,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 70,
                        V: -1,
                        r: 3
                    }, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 39,
                        r: 2
                    }, nMv, {
                        v: 84,
                        b: 71,
                        V: 23,
                        r: 0
                    }, VWV, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 140,
                        V: -1,
                        r: 0
                    }, MM, MM, MM, MM, MM, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 2
                    }, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 2
                    }, VVN, VVN, VVN, VVN, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 1
                    }],
                    [nN, nN, nN, MM, {
                        v: 62,
                        b: 71,
                        V: 0,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 2,
                        r: 0
                    }, vw, vw, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 1
                    }, wV, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 23,
                        r: 0
                    }, VVN, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, nN, nN, nN, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 0
                    }, nNW, {
                        v: 67,
                        b: 148,
                        V: -1,
                        r: 1
                    }, {
                        v: 67,
                        b: 70,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 151,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 151,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 27,
                        r: 2
                    }, nMv, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 0
                    }, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 142,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 148,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 140,
                        V: -1,
                        r: 1
                    }, {
                        v: 0,
                        b: 148,
                        V: -1,
                        r: 0
                    }, VVN, {
                        v: 67,
                        b: 71,
                        V: 16,
                        r: 1
                    }, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 26,
                        r: 1
                    }, {
                        v: 67,
                        b: 71,
                        V: 23,
                        r: 2
                    }, {
                        v: 67,
                        b: 71,
                        V: 17,
                        r: 1
                    }, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 3
                    }],
                    [nN, nN, nN, MM, vw, vw, vw, vw, MM, {
                        v: 67,
                        b: 71,
                        V: 12,
                        r: 0
                    }, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 12,
                        r: 2
                    }, VVN, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, nN, nN, nN, nN, nNW, nNW, nNW, {
                        v: 62,
                        b: 150,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 150,
                        V: -1,
                        r: 3
                    }, nMv, nMv, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, nN, nN, vw, vw, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 1
                    }, wV, wV, wV, wV, wV, wV, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 3
                    }],
                    [nN, nN, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 0
                    }, MM, {
                        v: 62,
                        b: 71,
                        V: 1,
                        r: 2
                    }, {
                        v: 62,
                        b: 71,
                        V: 8,
                        r: 2
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 2
                    }, MM, {
                        v: 67,
                        b: 71,
                        V: 23,
                        r: 2
                    }, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 20,
                        r: 2
                    }, VVN, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, nN, nN, nN, nN, nN, nN, {
                        v: 84,
                        b: 71,
                        V: 23,
                        r: 0
                    }, VWV, VWV, {
                        v: 84,
                        b: 71,
                        V: 23,
                        r: 0
                    }, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, nN, nN, vw, vw, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 1
                    }, wV, wV, wV, wV, wV, wV, {
                        v: 67,
                        b: 31,
                        V: -1,
                        r: 3
                    }],
                    [nN, nN, nN, MM, MM, MM, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 0
                    }, MM, MM, VVN, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 0
                    }, VVN, VVN, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, nN, nN, nN, nN, nN, nN, VWV, VWV, VWV, VWV, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 21,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 20,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }],
                    [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 15,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 36,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 4,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 45,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 32,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 25,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 24,
                        r: 0
                    }],
                    [{
                        v: 0,
                        b: 86,
                        V: 17,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 4,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 5,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 3,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 37,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 35,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 29,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 31,
                        r: 0
                    }],
                    [{
                        v: 0,
                        b: 86,
                        V: 16,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 11,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 10,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 9,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 38,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 1,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 34,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, wV, wV, wV, {
                        v: 67,
                        b: 151,
                        V: -1,
                        r: 1
                    }, wV, wV, wV],
                    [{
                        v: 0,
                        b: 86,
                        V: 40,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 0,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 39,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, nN, nN, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, MM, MM, vWW, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 2
                    }, MM, MM, MM, {
                        v: 0,
                        b: 71,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 140,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 1
                    }],
                    [nN, nN, nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 1
                    }, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 1
                    }, nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 1
                    }, wV, wV, wV, MM, {
                        v: 62,
                        b: 71,
                        V: 27,
                        r: 1
                    }, {
                        v: 62,
                        b: 71,
                        V: 27,
                        r: 1
                    }, vw, vw, vw, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 3
                    }, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 3
                    }, nN, {
                        v: 0,
                        b: 111,
                        V: -1,
                        r: 1
                    }, {
                        v: 0,
                        b: 140,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 111,
                        V: -1,
                        r: 1
                    }, nN, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 1
                    }],
                    [nN, nNW, nNW, nNW, nNW, nNW, nNW, nNW, nNW, nMv, nMv, nMv, nMv, nMv, nMv, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 1
                    }, wV, wV, wV, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 1
                    }, vw, vw, vw, vw, vw, {
                        v: 62,
                        b: 69,
                        V: -1,
                        r: 3
                    }, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, {
                        v: 67,
                        b: 151,
                        V: -1,
                        r: 1
                    }, {
                        v: 0,
                        b: 140,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 140,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 148,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 140,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 140,
                        V: -1,
                        r: 3
                    }, {
                        v: 67,
                        b: 151,
                        V: -1,
                        r: 1
                    }],
                    [nN, nNW, {
                        v: 67,
                        b: 71,
                        V: 35,
                        r: 2
                    }, wV, {
                        v: 67,
                        b: 142,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 146,
                        V: -1,
                        r: 1
                    }, {
                        v: 67,
                        b: 146,
                        V: -1,
                        r: 1
                    }, {
                        v: 67,
                        b: 140,
                        V: -1,
                        r: 1
                    }, {
                        v: 67,
                        b: 140,
                        V: -1,
                        r: 1
                    }, {
                        v: 62,
                        b: 150,
                        V: -1,
                        r: 1
                    }, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 17,
                        r: 3
                    }, {
                        v: 62,
                        b: 71,
                        V: 16,
                        r: 1
                    }, nMv, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 1
                    }, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 3,
                        r: 1
                    }, MM, {
                        v: 62,
                        b: 71,
                        V: 22,
                        r: 2
                    }, {
                        v: 62,
                        b: 71,
                        V: 20,
                        r: 3
                    }, {
                        v: 62,
                        b: 71,
                        V: 11,
                        r: 2
                    }, vw, MM, MM, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 3
                    }, nN, {
                        v: 0,
                        b: 111,
                        V: -1,
                        r: 1
                    }, {
                        v: 0,
                        b: 140,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 111,
                        V: -1,
                        r: 1
                    }, nN, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 1
                    }],
                    [nN, nNW, wV, {
                        v: 67,
                        b: 70,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 149,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 149,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 149,
                        V: -1,
                        r: 2
                    }, vNM, vNM, nMv, vw, vw, vw, vw, nMv, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 1
                    }, {
                        v: 67,
                        b: 71,
                        V: 23,
                        r: 3
                    }, VVN, VVN, MM, MM, MM, MM, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 2
                    }, MM, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 3
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 140,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 69,
                        V: -1,
                        r: 1
                    }],
                    [{
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 1
                    }, nNW, wV, {
                        v: 67,
                        b: 70,
                        V: -1,
                        r: 3
                    }, {
                        v: 67,
                        b: 151,
                        V: -1,
                        r: 3
                    }, {
                        v: 67,
                        b: 151,
                        V: -1,
                        r: 3
                    }, {
                        v: 67,
                        b: 151,
                        V: -1,
                        r: 3
                    }, {
                        v: 67,
                        b: 142,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 146,
                        V: -1,
                        r: 1
                    }, {
                        v: 62,
                        b: 150,
                        V: -1,
                        r: 1
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 10,
                        r: 3
                    }, {
                        v: 62,
                        b: 71,
                        V: 7,
                        r: 3
                    }, vw, {
                        v: 62,
                        b: 32,
                        V: -1,
                        r: 3
                    }, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, {
                        v: 0,
                        b: 69,
                        V: -1,
                        r: 2
                    }, vWW, {
                        v: 62,
                        b: 71,
                        V: 14,
                        r: 0
                    }, {
                        v: 62,
                        b: 71,
                        V: 5,
                        r: 0
                    }, vw, vw, vw, vw, MM, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 3
                    }, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }, nN, wV, {
                        v: 67,
                        b: 71,
                        V: 45,
                        r: 0
                    }, {
                        v: 67,
                        b: 71,
                        V: 45,
                        r: 0
                    }, {
                        v: 67,
                        b: 151,
                        V: -1,
                        r: 1
                    }, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 24,
                        r: 1
                    }],
                    [nN, nNW, wV, {
                        v: 67,
                        b: 70,
                        V: -1,
                        r: 3
                    }, {
                        v: 67,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 70,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 140,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 142,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 149,
                        V: -1,
                        r: 1
                    }, {
                        v: 62,
                        b: 144,
                        V: -1,
                        r: 0
                    }, vw, {
                        v: 62,
                        b: 71,
                        V: 7,
                        r: 3
                    }, vw, {
                        v: 62,
                        b: 32,
                        V: -1,
                        r: 3
                    }, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, nN, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 0
                    }, MM, vw, vw, vw, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 13,
                        r: 2
                    }, MM, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }],
                    [{
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 1
                    }, nNW, wV, wV, {
                        v: 67,
                        b: 71,
                        V: 3,
                        r: 0
                    }, {
                        v: 67,
                        b: 148,
                        V: -1,
                        r: 3
                    }, nNW, {
                        v: 67,
                        b: 146,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 147,
                        V: -1,
                        r: 3
                    }, {
                        v: 62,
                        b: 149,
                        V: -1,
                        r: 1
                    }, {
                        v: 62,
                        b: 144,
                        V: -1,
                        r: 0
                    }, vw, vw, vw, nMv, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, nN, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 0
                    }, MM, {
                        v: 62,
                        b: 71,
                        V: 12,
                        r: 3
                    }, {
                        v: 62,
                        b: 71,
                        V: 23,
                        r: 3
                    }, vw, vw, {
                        v: 62,
                        b: 71,
                        V: 10,
                        r: 3
                    }, {
                        v: 62,
                        b: 71,
                        V: 9,
                        r: 1
                    }, MM, {
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 3
                    }, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }],
                    [{
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 1
                    }, nNW, wV, vw, vw, {
                        v: 67,
                        b: 146,
                        V: -1,
                        r: 0
                    }, nNW, {
                        v: 67,
                        b: 142,
                        V: -1,
                        r: 3
                    }, {
                        v: 67,
                        b: 142,
                        V: -1,
                        r: 1
                    }, vNM, {
                        v: 62,
                        b: 144,
                        V: -1,
                        r: 0
                    }, vw, {
                        v: 62,
                        b: 144,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 144,
                        V: -1,
                        r: 0
                    }, nMv, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, nN, nN, MM, MM, MM, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 31,
                        V: -1,
                        r: 0
                    }, MM, MM, MM, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 23,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 22,
                        r: 0
                    }],
                    [nN, nNW, wV, vw, vw, {
                        v: 67,
                        b: 71,
                        V: 10,
                        r: 0
                    }, nNW, {
                        v: 67,
                        b: 71,
                        V: 14,
                        r: 3
                    }, {
                        v: 67,
                        b: 140,
                        V: -1,
                        r: 0
                    }, nMv, {
                        v: 62,
                        b: 149,
                        V: -1,
                        r: 0
                    }, nMv, {
                        v: 62,
                        b: 149,
                        V: -1,
                        r: 0
                    }, {
                        v: 62,
                        b: 149,
                        V: -1,
                        r: 0
                    }, nMv, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 1
                    }, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }, nN, nN, nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 1
                    }, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 30,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 31,
                        r: 0
                    }],
                    [nN, nNW, {
                        v: 67,
                        b: 71,
                        V: 36,
                        r: 2
                    }, {
                        v: 67,
                        b: 151,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 71,
                        V: 12,
                        r: 3
                    }, {
                        v: 67,
                        b: 71,
                        V: 9,
                        r: 2
                    }, nNW, {
                        v: 67,
                        b: 71,
                        V: 16,
                        r: 2
                    }, {
                        v: 67,
                        b: 140,
                        V: -1,
                        r: 2
                    }, {
                        v: 67,
                        b: 71,
                        V: 17,
                        r: 3
                    }, {
                        v: 67,
                        b: 147,
                        V: -1,
                        r: 2
                    }, {
                        v: 67,
                        b: 142,
                        V: -1,
                        r: 0
                    }, {
                        v: 67,
                        b: 146,
                        V: -1,
                        r: 3
                    }, {
                        v: 67,
                        b: 142,
                        V: -1,
                        r: 2
                    }, vNM, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }],
                    [nN, nNW, nNW, {
                        v: 67,
                        b: 150,
                        V: -1,
                        r: 2
                    }, nNW, nNW, nNW, {
                        v: 67,
                        b: 71,
                        V: 23,
                        r: 2
                    }, {
                        v: 67,
                        b: 142,
                        V: -1,
                        r: 3
                    }, {
                        v: 67,
                        b: 140,
                        V: -1,
                        r: 3
                    }, {
                        v: 67,
                        b: 146,
                        V: -1,
                        r: 3
                    }, {
                        v: 67,
                        b: 142,
                        V: -1,
                        r: 2
                    }, wV, {
                        v: 67,
                        b: 71,
                        V: 23,
                        r: 2
                    }, vNM, {
                        v: 0,
                        b: 71,
                        V: 24,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }],
                    [nN, nN, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 2
                    }, {
                        v: 0,
                        b: 71,
                        V: 16,
                        r: 1
                    }, {
                        v: 0,
                        b: 71,
                        V: 17,
                        r: 1
                    }, {
                        v: 0,
                        b: 71,
                        V: 26,
                        r: 1
                    }, vNM, vNM, vNM, vNM, vNM, vNM, vNM, vNM, vNM, nN, {
                        v: 0,
                        b: 86,
                        V: 14,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 12,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 6,
                        r: 0
                    }],
                    [nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, nN, {
                        v: 0,
                        b: 86,
                        V: 40,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 1,
                        r: 0
                    }, {
                        v: 0,
                        b: 86,
                        V: 41,
                        r: 0
                    }]
                ]
            };
            nWW[vMW.vnMwV] = {
                width: 0,
                height: 0,
                nVv: 0,
                Nn: [
                    [nN],
                    [nN, nN, nN, nN, nN, nN, MN, MN, MN, nN, MN, MN, MN, MN, MN, MN, MN, MN],
                    [nN, nN, nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                    [nN, nN, nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                    [nN, nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                    [nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                    [nN, MN, MN, MN, MN, MN, MN, nN, nN, nN, nN, nN, nN, nN, nN, nN, MN, MN, MN, MN, MN, MN, MN],
                    [nN, MN, MN, MN, nN, nN, nN, nN, MN, MNm, MNm, {
                        v: 85,
                        b: 52,
                        V: -1,
                        r: 2
                    }, MNm, MNm, nN, nN, MN, MN, MN, MN, MN, MN, MN],
                    [nN, nN, nN, nN, nN, MN, MN, MN, MN, MNm, Wnm, Wnm, Wnm, MNm, MN, nN, nN, MN, MN, MN, MN, MN, MN],
                    [nN, nN, MN, MN, MN, MN, MNm, MNm, MNm, MNm, Wnm, Wnm, Wnm, MNm, MN, MN, nN, MN, MN, MN, MN, MN],
                    [nN, MN, MN, MN, MN, MN, MNm, {
                        v: 85,
                        b: 71,
                        V: 9,
                        r: 0
                    }, {
                        v: 85,
                        b: 71,
                        V: 58,
                        r: 0
                    }, MNm, {
                        v: 85,
                        b: 71,
                        V: 33,
                        r: 3
                    }, Wnm, {
                        v: 85,
                        b: 71,
                        V: 33,
                        r: 3
                    }, MNm, MN, MN, nN, MN, MN, MN, MN, MN, MN],
                    [nN, MN, MN, MN, MN, MN, MNm, {
                        v: 85,
                        b: 71,
                        V: 10,
                        r: 2
                    }, Wnm, MNm, MNm, VWV, vWNVw, vWNVw, MWVnn, MN, nN, nN, MN, MN, MN, MN, MN, MN],
                    [nN, MN, MN, MN, MN, MN, MNm, Wnm, Wnm, VWV, VWV, VWV, VWV, {
                        v: 84,
                        b: 71,
                        V: 51,
                        r: 1
                    }, vWNVw, MN, MN, nN, nN, MN, MN, MN, MN, MN],
                    [nN, MN, MN, MN, MN, MNm, MNm, MNm, MNm, MNm, VWV, VWV, VWV, VWV, vWNVw, MWVnn, MN, MN, nN, MN, MN, MN, MN, MN],
                    [nN, MN, MN, MN, MN, MNm, VWV, VWV, VWV, MNm, MNm, VWV, VWV, VWV, vWNVw, MNm, MNm, MN, nN, MN, MN, MN, MN],
                    [nN, MN, MN, MN, MN, MNm, VWV, MNm, VWV, VWV, VWV, VWV, MNm, Wnm, Wnm, {
                        v: 85,
                        b: 71,
                        V: 55,
                        r: 2
                    }, MNm, MN, nN, MN, MN, MN, MN],
                    [nN, MN, MN, MN, MN, MNm, VWV, MNm, MNm, MNm, MNm, VWV, MNm, {
                        v: 85,
                        b: 71,
                        V: 28,
                        r: 3
                    }, Wnm, {
                        v: 85,
                        b: 71,
                        V: 21,
                        r: 1
                    }, MNm, MN, nN, nN, MN, MN],
                    [nN, MN, MN, MN, MN, MNm, Wnm, {
                        v: 85,
                        b: 71,
                        V: 23,
                        r: 1
                    }, {
                        v: 85,
                        b: 71,
                        V: 53,
                        r: 3
                    }, {
                        v: 85,
                        b: 71,
                        V: 56,
                        r: 2
                    }, MNm, VWV, MNm, MNm, MNm, MNm, MNm, MN, nN, nN, MN, MN, MN],
                    [nN, nN, nN, MN, MN, MNm, Wnm, Wnm, Wnm, {
                        v: 85,
                        b: 71,
                        V: 53,
                        r: 2
                    }, MNm, VWV, VWV, Wnm, {
                        v: 85,
                        b: 71,
                        V: 51,
                        r: 0
                    }, {
                        v: 85,
                        b: 71,
                        V: 48,
                        r: 0
                    }, MNm, MN, MN],
                    [nN, MN, MN, MN, MN, MNm, Wnm, Wnm, Wnm, Wnm, MNm, MNm, MNm, Wnm, Wnm, Wnm, MNm, MN, MN, MN],
                    [nN, MN, MN, MN, MN, MNm, {
                        v: 85,
                        b: 71,
                        V: 20,
                        r: 3
                    }, {
                        v: 85,
                        b: 71,
                        V: 11,
                        r: 2
                    }, {
                        v: 85,
                        b: 71,
                        V: 49,
                        r: 3
                    }, Wnm, {
                        v: 85,
                        b: 71,
                        V: 54,
                        r: 2
                    }, MNm, MNm, {
                        v: 85,
                        b: 71,
                        V: 48,
                        r: 2
                    }, {
                        v: 85,
                        b: 71,
                        V: 50,
                        r: 2
                    }, {
                        v: 85,
                        b: 71,
                        V: 49,
                        r: 3
                    }, MNm, MN, MN, MN, MN, MN, MN],
                    [nN, nN, MN, MN, MN, MNm, MNm, MNm, MNm, MNm, MNm, MNm, MNm, MNm, MNm, MNm, MNm, MN, MN, MN, MN, MN, MN],
                    [nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                    [nN, nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                    [nN, nN, nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                    [nN, nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                    [nN, nN, nN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN, MN],
                    [nN, nN, nN, nN, MN, MN, MN, nN, nN, nN, nN, MN, MN, MN, MN, MN]
                ]
            };
        }
    } catch (vNn) {};
    for (var place = 0; place < nWW.length; place++) {
        var VnVmm = nWW[place];
        var vVNnW = nWW[place].Nn;
        VnVmm.height = vVNnW.length;
        for (var vv = 0; vv < vVNnW.length; vv++)
            VnVmm.width = win.Math.max(vVNnW[vv].length, VnVmm.width);
    }
    var VmwwM = [];
    VmwwM[station.firepart] = item.campfire;
    VmwwM[station.bbq] = item.campfirebbq;
    VmwwM[station.workbench] = item.workbench;
    VmwwM[station.researchbench] = item.researchbench;
    VmwwM[station.teslabench] = item.teslabench;
    VmwwM[station.smelter] = item.smelter;
    VmwwM[station.weavingmachine] = item.weavingmachine;
    VmwwM[station.composter] = item.composter;
    VmwwM[station.agitator] = item.agitator;
    VmwwM[station.extractor] = item.extractor;
    var NWVnn = null;
    var NMnWm = null;
    var NWwVV = null;
    var mwwnn = null;
    var MMNMn = null;
    var vNNVn = null;
    var VNVwN = null;
    var MwWmN = "#\x33\x38\x35\x31\x33\x44";
    var wwVWm = "#\x30\x42\x31\x44\x32\x33";
    var nNnVn = [{
        id: item.stone,
        nM: 50,
        health: 255
    }, {
        id: item.wood,
        nM: 100,
        health: 255
    }, {
        id: item.workbench,
        nM: 1,
        health: 255
    }];
    var mvv = [];
    Nw = 0;
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stone,
        nM: 20,
        health: 255
    }, {
        id: item.wood,
        nM: 40,
        health: 255
    }, {
        id: item.orange,
        nM: 1,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stone,
        nM: 20,
        health: 255
    }, {
        id: item.wood,
        nM: 40,
        health: 255
    }, {
        id: item.orange,
        nM: 3,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stone,
        nM: 30,
        health: 255
    }, {
        id: item.wood,
        nM: 50,
        health: 255
    }, {
        id: item.campfire,
        nM: 1,
        health: 255
    }, {
        id: item.orange,
        nM: 4,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stone,
        nM: 30,
        health: 255
    }, {
        id: item.wood,
        nM: 60,
        health: 255
    }, {
        id: item.campfire,
        nM: 1,
        health: 255
    }, {
        id: item.workbench,
        nM: 1,
        health: 255
    }, {
        id: item.orange,
        nM: 5,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stone,
        nM: 40,
        health: 255
    }, {
        id: item.wood,
        nM: 90,
        health: 255
    }, {
        id: item.campfire,
        nM: 1,
        health: 255
    }, {
        id: item.workbench,
        nM: 1,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 1,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stone,
        nM: 40,
        health: 255
    }, {
        id: item.wood,
        nM: 150,
        health: 255
    }, {
        id: item.campfire,
        nM: 1,
        health: 255
    }, {
        id: item.workbench,
        nM: 1,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 1,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stonepickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.campfire,
        nM: 1,
        health: 255
    }, {
        id: item.workbench,
        nM: 1,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 2,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stonepickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.campfire,
        nM: 1,
        health: 255
    }, {
        id: item.steel,
        nM: 6,
        health: 255
    }, {
        id: item.workbench,
        nM: 1,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 2,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stonepickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.campfirebbq,
        nM: 1,
        health: 255
    }, {
        id: item.spear,
        nM: 1,
        health: 255
    }, {
        id: item.workbench,
        nM: 1,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 3,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stonepickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.campfirebbq,
        nM: 1,
        health: 255
    }, {
        id: item.bow,
        nM: 1,
        health: 255
    }, {
        id: item.woodarrow,
        nM: 20,
        health: 255
    }, {
        id: item.workbench,
        nM: 1,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 4,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stonepickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.campfirebbq,
        nM: 1,
        health: 255
    }, {
        id: item.woodenwall,
        nM: 10,
        health: 255
    }, {
        id: item.wooddoor,
        nM: 2,
        health: 255
    }, {
        id: item.workbench,
        nM: 1,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 4,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stonepickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.campfirebbq,
        nM: 1,
        health: 255
    }, {
        id: item.woodenwall,
        nM: 16,
        health: 255
    }, {
        id: item.stonedoor,
        nM: 2,
        health: 255
    }, {
        id: item.workbench,
        nM: 2,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 4,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stonepickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.campfirebbq,
        nM: 1,
        health: 255
    }, {
        id: item.stonewall,
        nM: 14,
        health: 255
    }, {
        id: item.stonedoor,
        nM: 2,
        health: 255
    }, {
        id: item.workbench,
        nM: 2,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 4,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stonepickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.campfirebbq,
        nM: 1,
        health: 255
    }, {
        id: item.landmine,
        nM: 1,
        health: 255
    }, {
        id: item.stonewall,
        nM: 14,
        health: 255
    }, {
        id: item.stonedoor,
        nM: 2,
        health: 255
    }, {
        id: item.workbench,
        nM: 2,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 4,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stonepickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.campfirebbq,
        nM: 1,
        health: 255
    }, {
        id: item.metalhelmet,
        nM: 1,
        health: 255
    }, {
        id: item.stonewall,
        nM: 14,
        health: 255
    }, {
        id: item.stonedoor,
        nM: 2,
        health: 255
    }, {
        id: item.workbench,
        nM: 2,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 4,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.stonepickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.campfirebbq,
        nM: 1,
        health: 255
    }, {
        id: item.stonewall,
        nM: 16,
        health: 255
    }, {
        id: item.stonedoor,
        nM: 2,
        health: 255
    }, {
        id: item.chest,
        nM: 1,
        health: 255
    }, {
        id: item.workbench,
        nM: 2,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 4,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.steelpickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.campfirebbq,
        nM: 1,
        health: 255
    }, {
        id: item.stonewall,
        nM: 16,
        health: 255
    }, {
        id: item.stonedoor,
        nM: 2,
        health: 255
    }, {
        id: item.chest,
        nM: 1,
        health: 255
    }, {
        id: item.workbench,
        nM: 2,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 4,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.hachet,
        nM: 1,
        health: 255
    }, {
        id: item.steelpickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.campfirebbq,
        nM: 1,
        health: 255
    }, {
        id: item.stonewall,
        nM: 16,
        health: 255
    }, {
        id: item.stonedoor,
        nM: 2,
        health: 255
    }, {
        id: item.chest,
        nM: 1,
        health: 255
    }, {
        id: item.researchbench,
        nM: 1,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 4,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.stoneaxe,
        nM: 1,
        health: 255
    }, {
        id: item.steelpickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.campfirebbq,
        nM: 1,
        health: 255
    }, {
        id: item.stonewall,
        nM: 16,
        health: 255
    }, {
        id: item.stonedoor,
        nM: 2,
        health: 255
    }, {
        id: item.chest,
        nM: 1,
        health: 255
    }, {
        id: item.researchbench,
        nM: 1,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 4,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.stoneaxe,
        nM: 1,
        health: 255
    }, {
        id: item.steelpickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.campfirebbq,
        nM: 2,
        health: 255
    }, {
        id: item.stonewall,
        nM: 20,
        health: 255
    }, {
        id: item.stonedoor,
        nM: 4,
        health: 255
    }, {
        id: item.chest,
        nM: 2,
        health: 255
    }, {
        id: item.researchbench,
        nM: 1,
        health: 255
    }, {
        id: item.rawsteak,
        nM: 4,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.stoneaxe,
        nM: 1,
        health: 255
    }, {
        id: item.steelpickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.campfirebbq,
        nM: 2,
        health: 255
    }, {
        id: item.stonewall,
        nM: 26,
        health: 255
    }, {
        id: item.stonedoor,
        nM: 6,
        health: 255
    }, {
        id: item.chest,
        nM: 3,
        health: 255
    }, {
        id: item.researchbench,
        nM: 1,
        health: 255
    }, {
        id: item.seedorange,
        nM: 8,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.stoneaxe,
        nM: 1,
        health: 255
    }, {
        id: item.steelpickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.headscarf,
        nM: 1,
        health: 255
    }, {
        id: item.stonewall,
        nM: 26,
        health: 255
    }, {
        id: item.stonedoor,
        nM: 6,
        health: 255
    }, {
        id: item.chest,
        nM: 3,
        health: 255
    }, {
        id: item.researchbench,
        nM: 1,
        health: 255
    }, {
        id: item.seedorange,
        nM: 8,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.stoneaxe,
        nM: 1,
        health: 255
    }, {
        id: item.steelpickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.headscarf,
        nM: 1,
        health: 255
    }, {
        id: item.stonewall,
        nM: 26,
        health: 255
    }, {
        id: item.stonedoor,
        nM: 6,
        health: 255
    }, {
        id: item.chest,
        nM: 3,
        health: 255
    }, {
        id: item.pistol,
        nM: 1,
        health: 20
    }, {
        id: item.researchbench,
        nM: 1,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.sulfurpickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.stoneaxe,
        nM: 1,
        health: 255
    }, {
        id: item.headscarf,
        nM: 1,
        health: 255
    }, {
        id: item.stonewall,
        nM: 26,
        health: 255
    }, {
        id: item.stonedoor,
        nM: 6,
        health: 255
    }, {
        id: item.chest,
        nM: 3,
        health: 255
    }, {
        id: item.pistol,
        nM: 1,
        health: 20
    }, {
        id: item.researchbench,
        nM: 1,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.sulfurpickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.stoneaxe,
        nM: 1,
        health: 255
    }, {
        id: item.headscarf,
        nM: 1,
        health: 255
    }, {
        id: item.stonewall,
        nM: 26,
        health: 255
    }, {
        id: item.smelter,
        nM: 1,
        health: 255
    }, {
        id: item.chest,
        nM: 3,
        health: 255
    }, {
        id: item.pistol,
        nM: 1,
        health: 20
    }, {
        id: item.researchbench,
        nM: 1,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.sulfurpickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.sulfuraxe,
        nM: 1,
        health: 255
    }, {
        id: item.headscarf,
        nM: 1,
        health: 255
    }, {
        id: item.stonewall,
        nM: 26,
        health: 255
    }, {
        id: item.smelter,
        nM: 1,
        health: 255
    }, {
        id: item.chest,
        nM: 3,
        health: 255
    }, {
        id: item.pistol,
        nM: 1,
        health: 20
    }, {
        id: item.researchbench,
        nM: 1,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.sulfurpickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.sulfuraxe,
        nM: 1,
        health: 255
    }, {
        id: item.chapka,
        nM: 1,
        health: 255
    }, {
        id: item.stonewall,
        nM: 26,
        health: 255
    }, {
        id: item.smelter,
        nM: 1,
        health: 255
    }, {
        id: item.chest,
        nM: 3,
        health: 255
    }, {
        id: item.pistol,
        nM: 1,
        health: 20
    }, {
        id: item.researchbench,
        nM: 1,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.sulfurpickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.sulfuraxe,
        nM: 1,
        health: 255
    }, {
        id: item.chapka,
        nM: 1,
        health: 255
    }, {
        id: item.steelwall,
        nM: 14,
        health: 255
    }, {
        id: item.smelter,
        nM: 1,
        health: 255
    }, {
        id: item.chest,
        nM: 3,
        health: 255
    }, {
        id: item.pistol,
        nM: 1,
        health: 20
    }, {
        id: item.researchbench,
        nM: 1,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.sulfurpickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.sulfuraxe,
        nM: 1,
        health: 255
    }, {
        id: item.chapka,
        nM: 1,
        health: 255
    }, {
        id: item.steelwall,
        nM: 14,
        health: 255
    }, {
        id: item.smelter,
        nM: 1,
        health: 255
    }, {
        id: item.chest,
        nM: 3,
        health: 255
    }, {
        id: item.deserteagle,
        nM: 1,
        health: 7
    }, {
        id: item.researchbench,
        nM: 1,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.sulfurpickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.sulfuraxe,
        nM: 1,
        health: 255
    }, {
        id: item.chapka,
        nM: 1,
        health: 255
    }, {
        id: item.steelwall,
        nM: 14,
        health: 255
    }, {
        id: item.smelter,
        nM: 1,
        health: 255
    }, {
        id: item.dynamite,
        nM: 6,
        health: 255
    }, {
        id: item.deserteagle,
        nM: 1,
        health: 7
    }, {
        id: item.researchbench,
        nM: 1,
        health: 255
    }];
    mvv[Nw++] = [{
        id: item.sulfurpickaxe,
        nM: 1,
        health: 255
    }, {
        id: item.sulfuraxe,
        nM: 1,
        health: 255
    }, {
        id: item.chapka,
        nM: 1,
        health: 255
    }, {
        id: item.steelwall,
        nM: 20,
        health: 255
    }, {
        id: item.smelter,
        nM: 1,
        health: 255
    }, {
        id: item.landmine,
        nM: 6,
        health: 255
    }, {
        id: item.deserteagle,
        nM: 1,
        health: 7
    }, {
        id: item.researchbench,
        nM: 1,
        health: 255
    }];
    Nw = 0;
    var hostile = {
        yes: Nw++,
        no: Nw++
    };
    var VVv = [];
    VVv[creatures.normghoul] = {
        vmWVv: 700,
        WVVvW: 550,
        NNNMM: 0.5,
        Wnwvw: 1,
        mode: hostile.yes,
        vNWnv: ((2 * 8) * 60) * 1000,
        NM: Mw.MNN,
        Vw: 0.05,
        NVwvN: 6,
        mMM: {
            angle: 0,
            x: 28,
            y: -50,
            src: "img/day-ghoul-left-arm.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            angle: 0,
            x: 28,
            y: 50,
            src: "img/day-ghoul-right-arm.png",
            W: {
                m: 0
            }
        },
        head: {
            src: "img/day-ghoul.png",
            W: {
                m: 0
            }
        },
        Mmm: {
            src: "img/ghoul-hurt.png",
            W: {
                m: 0
            }
        },
        wmm: {
            src: "img/day-ghoul-death.png",
            W: {
                m: 0
            }
        },
        Wvm: 0,
        vWV: 30,
        WnW: 0,
        wwW: 38,
        health: 160,
        speed: [0.12, 0.22],
        MvnwW: [0.14, 0.25],
        loot: [
            [item.animalfat, 4, Mv.animalfat]
        ],
        mMW: 1,
        WnW: 0,
        mwM: 0,
        mMNNv: 0,
        WWv: 0,
        WNWwM: 40,
        NMWWm: 50,
        damage: [8, 20],
        Nwv: 20,
        WmW: ((2 * 8) * 60) * 1000,
        mW: 1200
    };
    VVv[creatures.speedghoul] = {
        vmWVv: 300,
        WVVvW: 150,
        NNNMM: 0.5,
        Wnwvw: 2,
        mode: hostile.yes,
        vNWnv: (((2 * 2) * 8) * 60) * 1000,
        NM: Mw.MNN,
        Vw: 0.05,
        NVwvN: 6,
        mMM: {
            angle: 0,
            x: 28,
            y: -40,
            src: "img/day-ghoul3-left-arm.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            angle: 0,
            x: 28,
            y: 40,
            src: "img/day-ghoul3-right-arm.png",
            W: {
                m: 0
            }
        },
        head: {
            src: "img/day-ghoul3.png",
            W: {
                m: 0
            }
        },
        Mmm: {
            src: "img/ghoul3-hurt.png",
            W: {
                m: 0
            }
        },
        wmm: {
            src: "img/day-ghoul3-death.png",
            W: {
                m: 0
            }
        },
        Wvm: 0,
        vWV: 18,
        WnW: 0,
        wwW: 38,
        health: 100,
        speed: [0.18, 0.28],
        MvnwW: [0.22, 0.38],
        loot: [
            [item.ghoulblood, 4, Mv.ghoulblood]
        ],
        mMW: 1,
        WnW: 0,
        mwM: 0,
        mMNNv: 0,
        WWv: 0,
        WNWwM: 40,
        NMWWm: 50,
        damage: [7, 14],
        Nwv: 20,
        WmW: ((2 * 8) * 60) * 1000,
        mW: 1000
    };
    VVv[creatures.bombghoul] = {
        vmWVv: 500,
        WVVvW: 350,
        NNNMM: 0.5,
        Wnwvw: 4,
        mode: hostile.yes,
        vNWnv: (((3 * 2) * 8) * 60) * 1000,
        NM: Mw.MNN,
        Vw: 0.05,
        NVwvN: 6,
        mMM: {
            angle: 0,
            x: 28,
            y: -48,
            src: "img/day-ghoul4-left-arm.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            angle: 0,
            x: 28,
            y: 48,
            src: "img/day-ghoul4-right-arm.png",
            W: {
                m: 0
            }
        },
        head: {
            src: "img/day-ghoul4.png",
            W: {
                m: 0
            }
        },
        Mmm: {
            src: "img/ghoul4-hurt.png",
            W: {
                m: 0
            }
        },
        wmm: {
            src: "img/day-ghoul4-death.png",
            W: {
                m: 0
            }
        },
        Wvm: 0,
        vWV: 14,
        WnW: 0,
        wwW: 38,
        health: 100,
        speed: [0.12, 0.23],
        MvnwW: [0.14, 0.26],
        loot: [
            [item.sulfur, 4, Mv.sulfur],
            [item.animalfat, 4, Mv.animalfat],
            [item.junk, 4, Mv.junk]
        ],
        mMW: 1,
        WnW: 0,
        mwM: 1,
        mMNNv: 120,
        WWv: 500,
        WNWwM: 40,
        NMWWm: 50,
        damage: [6, 20],
        Nwv: 20,
        WmW: ((2 * 8) * 60) * 1000,
        mW: 500
    };
    VVv[creatures.radghoul] = {
        vmWVv: 500,
        WVVvW: 350,
        NNNMM: 0.5,
        Wnwvw: 8,
        mode: hostile.yes,
        vNWnv: (((4 * 2) * 8) * 60) * 1000,
        NM: Mw.MNN,
        Vw: 0.05,
        NVwvN: 6,
        mMM: {
            angle: 0,
            x: 28,
            y: -40,
            src: "img/day-ghoul2-left-arm.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            angle: 0,
            x: 28,
            y: 40,
            src: "img/day-ghoul2-right-arm.png",
            W: {
                m: 0
            }
        },
        head: {
            src: "img/day-ghoul2.png",
            W: {
                m: 0
            }
        },
        Mmm: {
            src: "img/ghoul2-hurt.png",
            W: {
                m: 0
            }
        },
        wmm: {
            src: "img/day-ghoul2-death.png",
            W: {
                m: 0
            }
        },
        Wvm: 0,
        vWV: 10,
        WnW: 0,
        wwW: 38,
        health: 160,
        speed: [0.12, 0.23],
        MvnwW: [0.14, 0.26],
        loot: [
            [item.uranium, 4, Mv.uranium]
        ],
        mMW: 1,
        WnW: WMWwm,
        mwM: 0,
        mMNNv: 0,
        WWv: 0,
        WNWwM: 40,
        NMWWm: 50,
        damage: [5, 15],
        Nwv: 20,
        WmW: ((2 * 8) * 60) * 1000,
        mW: 1500
    };
    VVv[creatures.armoredghoul] = {
        vmWVv: 700,
        WVVvW: 550,
        NNNMM: 0.5,
        Wnwvw: 16,
        mode: hostile.yes,
        vNWnv: (((5 * 2) * 8) * 60) * 1000,
        NM: Mw.MNN,
        Vw: 0.05,
        NVwvN: 6,
        mMM: {
            angle: 0,
            x: 28,
            y: -50,
            src: "img/day-ghoul1-left-arm.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            angle: 0,
            x: 28,
            y: 50,
            src: "img/day-ghoul1-right-arm.png",
            W: {
                m: 0
            }
        },
        head: {
            src: "img/day-ghoul1.png",
            W: {
                m: 0
            }
        },
        Mmm: {
            src: "img/ghoul1-hurt.png",
            W: {
                m: 0
            }
        },
        wmm: {
            src: "img/day-ghoul1-death.png",
            W: {
                m: 0
            }
        },
        Wvm: 0,
        vWV: 14,
        WnW: 0,
        wwW: 38,
        health: 800,
        speed: [0.11, 0.21],
        MvnwW: [0.14, 0.24],
        loot: [
            [item.alloys, 4, Mv.alloys],
            [item.shapedmetal, 12, Mv.shapedmetal]
        ],
        mMW: 1,
        WnW: 0,
        mwM: 0,
        mMNNv: 0,
        WWv: 0,
        WNWwM: 40,
        NMWWm: 50,
        damage: [20, 50],
        Nwv: 20,
        WmW: ((4 * 8) * 60) * 1000,
        mW: 5000
    };
    VVv[creatures.pumpkinghoul] = {
        vmWVv: 700,
        WVVvW: 550,
        NNNMM: 0.5,
        Wnwvw: 32,
        mode: hostile.yes,
        vNWnv: ((2 * 8) * 60) * 1000,
        NM: Mw.MNN,
        Vw: 0.05,
        NVwvN: 6,
        mMM: {
            angle: 0,
            x: 28,
            y: -50,
            src: "img/day-ghoul5-left-arm.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            angle: 0,
            x: 28,
            y: 50,
            src: "img/day-ghoul5-right-arm.png",
            W: {
                m: 0
            }
        },
        head: {
            src: "img/day-ghoul5.png",
            W: {
                m: 0
            }
        },
        Mmm: {
            src: "img/ghoul5-hurt.png",
            W: {
                m: 0
            }
        },
        wmm: {
            src: "img/day-ghoul5-death.png",
            W: {
                m: 0
            }
        },
        Wvm: 0,
        vWV: 0,
        WnW: 0,
        wwW: 38,
        health: 160,
        speed: [0.04, 0.04],
        loot: [
            [item.pumpkin, 4, Mv.pumpkin]
        ],
        mMW: 0,
        WnW: 0,
        mwM: 0,
        mMNNv: 0,
        WWv: 0,
        WNWwM: 40,
        NMWWm: 50,
        damage: [20, 30],
        Nwv: 20,
        WmW: ((2 * 8) * 60) * 1000,
        mW: 100
    };
    VVv[creatures.lapabot] = {
        vmWVv: 700,
        WVVvW: 550,
        NNNMM: 0.5,
        Wnwvw: 0,
        mode: hostile.no,
        vNWnv: 0,
        NM: Mw.MNN,
        Vw: 0.05,
        NVwvN: 6,
        mMM: {
            angle: 0,
            x: 28,
            y: -50,
            src: "img/day-lapabot-left-arm.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            angle: 0,
            x: 28,
            y: 50,
            src: "img/day-lapabot-right-arm.png",
            W: {
                m: 0
            }
        },
        head: {
            src: "img/day-lapabot.png",
            W: {
                m: 0
            }
        },
        Mmm: {
            src: "img/lapabot-hurt.png",
            W: {
                m: 0
            }
        },
        wmm: {
            src: "img/day-lapabot-death.png",
            W: {
                m: 0
            }
        },
        Wvm: 0,
        vWV: 0,
        WnW: 0,
        wwW: 38,
        health: 600,
        speed: [0.08, 0.08],
        loot: [
            [item.shapedmetal, 4, Mv.shapedmetal]
        ],
        mMW: 0,
        WnW: 0,
        mwM: 0,
        mMNNv: 0,
        WWv: 0,
        WNWwM: 40,
        NMWWm: 50,
        damage: [30, 30],
        Nwv: 20,
        WmW: ((2 * 8) * 60) * 1000,
        mW: 100
    };
    VVv[creatures.halbot] = {
        vmWVv: 550,
        WVVvW: 400,
        NNNMM: 0.5,
        Wnwvw: 0,
        mode: hostile.yes,
        vNWnv: 0,
        NM: Mw.MNN,
        Vw: 0.05,
        NVwvN: 6,
        mMM: {
            angle: 0,
            x: 8,
            y: -45,
            src: "img/day-hal-bot-left-arm.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            angle: 0,
            x: 8,
            y: 45,
            src: "img/day-hal-bot-right-arm.png",
            W: {
                m: 0
            }
        },
        head: {
            src: "img/day-hal-bot.png",
            W: {
                m: 0
            }
        },
        Mmm: {
            src: "img/hal-bot-hurt.png",
            W: {
                m: 0
            }
        },
        wmm: {
            src: "img/day-hal-bot-death.png",
            W: {
                m: 0
            }
        },
        Wvm: 0,
        vWV: 0,
        WnW: 0,
        wwW: 38,
        health: 800,
        speed: [0.12, 0.12],
        loot: [
            [item.shapedmetal, 4, Mv.shapedmetal]
        ],
        mMW: 0,
        WnW: 0,
        mwM: 0,
        mMNNv: 0,
        WWv: 0,
        WNWwM: 40,
        NMWWm: 50,
        damage: [30, 30],
        Nwv: 20,
        WmW: ((2 * 8) * 60) * 1000,
        mW: 500
    };
    VVv[creatures.teslabot] = {
        vmWVv: 700,
        WVVvW: 550,
        NNNMM: 0.5,
        Wnwvw: 0,
        mode: hostile.yes,
        vNWnv: 0,
        NM: Mw.MNN,
        Vw: 0.05,
        NVwvN: 6,
        mMM: {
            angle: 0,
            x: 18,
            y: -60,
            src: "img/day-tesla-bot-left-arm.png",
            W: {
                m: 0
            }
        },
        Mmv: {
            angle: 0,
            x: 18,
            y: 60,
            src: "img/day-tesla-bot-right-arm.png",
            W: {
                m: 0
            }
        },
        head: {
            src: "img/day-tesla-bot.png",
            W: {
                m: 0
            }
        },
        Mmm: {
            src: "img/tesla-bot-hurt.png",
            W: {
                m: 0
            }
        },
        wmm: {
            src: "img/day-tesla-bot-death.png",
            W: {
                m: 0
            }
        },
        Wvm: 0,
        vWV: 0,
        WnW: 0,
        wwW: 38,
        health: 3000,
        speed: [0.1, 0.1],
        loot: [
            [item.shapeduranium, 4, Mv.shapeduranium],
            [item.alloys, 4, Mv.alloys]
        ],
        mMW: 0,
        WnW: 0,
        mwM: 1,
        mMNNv: 100,
        WWv: 100,
        WNWwM: 40,
        NMWWm: 50,
        damage: [80, 80],
        Nwv: 40,
        WmW: ((2 * 8) * 60) * 1000,
        mW: 3000
    };
    try {
        if (VwM !== win.undefined) {
            VwM.item = item;
            VwM.nW = nW;
            VwM.nWW = nWW;
            VwM.vMW = vMW;
            VwM.items = items;
            VwM.VNN = VNN;
            VwM.Mv = Mv;
            VwM.object = object;
            VwM.nnv = nnv;
            VwM.station = station;
            VwM.Ww = Ww;
            VwM.mvv = mvv;
            VwM.nNnVn = nNnVn;
            VwM.VVv = VVv;
            VwM.creatures = creatures;
            VwM.vWN = vWN;
            for (var nMm = 0; nMm < 3; nMm++) {
                for (var place = 1; place < items.length; place++) {
                    var wv = items[place];
                    var WVn = wv.detail.WVn;
                    if (WVn === win.undefined) continue;
                    for (var vv = 0; vv < WVn.length; vv++) {
                        var wwM = items[WVn[vv][0]];
                        if (vv === 0) wv.mW = 0;
                        wv.mW += wwM.mW * WVn[vv][1];
                        WVn[vv][2] = wwM.loot;
                    }
                    wv.mW = win.Math.floor(wv.mW / 4);
                }
            }
            for (var place = 0; place < VV.length; place++) {
                var wv = VV[place];
                var WVn = wv.detail.WVn;
                if (WVn === win.undefined) continue;
                for (var vv = 0; vv < WVn.length; vv++) {
                    var wwM = items[WVn[vv][0]];
                    if (vv === 0) wv.mW = 0;
                    wv.mW += wwM.mW * WVn[vv][1];
                    WVn[vv][2] = wwM.loot;
                }
                wv.mW = win.Math.floor(wv.mW / 4);
            }
        }
    } catch (vNn) {
        for (var place = 0; place < karma.length; place++) karma[place].W = wN.wvv(karma[place].src, karma[place].W);
        NWVnn = win.JSON.parse(win.JSON.stringify(items));
        NWwVV = win.JSON.parse(win.JSON.stringify(VNw));
        mwwnn = win.JSON.parse(win.JSON.stringify(VNN));
        NMnWm = win.JSON.parse(win.JSON.stringify(VVM));
        MMNMn = win.JSON.parse(win.JSON.stringify(nnv));
        vNNVn = win.JSON.parse(win.JSON.stringify(NWWWW));
        VNVwN = win.JSON.parse(win.JSON.stringify(VVv));

        function MMNMN(vNWwm, wnvNw, NvV, nWnNV) {
            for (var WmVNW in wnvNw) {
                var MmmVN = wnvNw[WmVNW];
                var nVW = vNWwm[WmVNW];
                if (nVW === win.undefined) {
                    vNWwm[WmVNW] = MmmVN;
                    continue;
                }
                if (typeof nVW === "object") MMNMN(nVW, MmmVN, NvV, nWnNV);
                else if (typeof nVW === "string") vNWwm[WmVNW] = nVW.replace(NvV, nWnNV);
            }
        };;
        MMNMN(MMNMn, nnv, "day", "night");
        MMNMN(NWVnn, items, "day", "night");
        MMNMN(NWwVV, VNw, "day", "night");
        MMNMN(mwwnn, VNN, "day", "night");
        MMNMN(NMnWm, VVM, "day", "night");
        MMNMN(vNNVn, NWWWW, "day", "night");
        MMNMN(VNVwN, VVv, "day", "night");

        function VnwWm(vNWwm) {
            for (var WmVNW in vNWwm) {
                var nVW = vNWwm[WmVNW];
                if ((typeof nVW === "object") && (nVW !== null)) {
                    if (nVW.MWw !== win.undefined) {
                        var wVn = VVM[mnW].mVNvN[nVW.nwm];
                        wVn.MWw = nVW.MWw;
                        wVn.wNV = nVW.wNV;
                        wVn.NVw = nVW.NVw;
                        wVn = NMnWm[mnW].mVNvN[nVW.nwm];
                        wVn.MWw = nVW.MWw;
                        wVn.wNV = nVW.wNV;
                        wVn.NVw = nVW.NVw;
                    } else VnwWm(nVW);
                }
            }
        };;
        VnwWm(items);
    }

    
    var vWn = (function() {
        var wwwvv = [237225, 303931, 166687, 229213, 217292, 205860, 182041, 273065];
        var wMw = [];
        var WvwmM = win.Math.floor(win.Math.random() * wwwvv.length);
        var mvnmN = 0;
        var mWWVV = 0;
        var vmwnm = 0;
        var mvVWW = 0.45;
        var VNWVM = 0;
        var NNwwM = 0;
        audio.wMm.end = new audio.mmn("audio/end.mp3", 0, true);
        audio.wMm.title = new audio.mmn("audio/title.mp3", 0, true);
        audio.wMm.vwMNW = new audio.mmn("audio/geiger.mp3", 0, true);
        audio.wMm.NvWWW = new audio.mmn("audio/ambient1.mp3", 0, true);
        audio.wMm.mWNVV = new audio.mmn("audio/ambient2.mp3", 0, true);
        audio.wMm.MWvmM = new audio.mmn("audio/ambient3.mp3", 0, true);
        audio.wMm.VWmmW = new audio.mmn("audio/ambient4.mp3", 0, true);
        audio.wMm.wNWMw = new audio.mmn("audio/ambient5.mp3", 0, true);
        audio.wMm.Nmwnw = new audio.mmn("audio/ambient6.mp3", 0, true);
        audio.wMm.wnMvV = new audio.mmn("audio/ambient7.mp3", 0, true);
        audio.wMm.MmmnV = new audio.mmn("audio/ambient8.mp3", 0, true);
        wMw.push(audio.wMm.NvWWW);
        wMw.push(audio.wMm.mWNVV);
        wMw.push(audio.wMm.MWvmM);
        wMw.push(audio.wMm.VWmmW);
        wMw.push(audio.wMm.wNWMw);
        wMw.push(audio.wMm.Nmwnw);
        wMw.push(audio.wMm.wnMvV);
        wMw.push(audio.wMm.MmmnV);
        audio.ww.open = new audio.mmn("audio/open.mp3", 1, false, 1);
        audio.ww.mmM = new audio.mmn("audio/drag.mp3", 1, false, 1);
        audio.ww.play = new audio.mmn("audio/play.mp3", 1, false, 1);
        audio.ww.nwVvN = new audio.mmn("audio/skill.mp3", 1, false, 1);
        audio.ww.nvV = new audio.mmn("audio/craft.mp3", 1, false, 1);
        audio.ww.button = new audio.mmn("audio/button.mp3", 1, false, 1);
        audio.ww.wWwnM = new audio.mmn("audio/throwLoot.mp3", 1, false, 1);
        audio.ww.nNwmw = new audio.mmn("audio/levelup.mp3", 1, false, 1);
        audio.ww.mwM = new audio.mmn("audio/explosion.mp3", 1, false, 1);
        audio.ww.NwMWW = new audio.mmn("audio/zipper-on.mp3", 0.7, false, 1);
        audio.ww.NwmVN = new audio.mmn("audio/zipper-off.mp3", 0.7, false, 1);
        audio.ww.WmnwN = [new audio.mmn("audio/eat-1s-0.mp3", 1, false, 1), new audio.mmn("audio/eat-1s-1.mp3", 1, false, 1), new audio.mmn("audio/eat-1s-2.mp3", 1, false, 1)];
        audio.ww.damage = [];
        for (var place = 1; place < audiodes.length; place++) audio.ww.damage[place] = new audio.mmn(audiodes[place], 1, false, 1);
        audio.ww.Nnn = [];
        var mNMNW = VVM[mnW].mNMNW;
        for (var place = 0; place < mNMNW.length; place++) {
            var nV = mNMNW[place];
            if (nV.Nww === win.undefined) audio.ww.Nnn[place] = 0;
            else if (typeof nV.Nww === "number") audio.ww.Nnn[place] = nV.Nww;
            else {
                audio.ww.Nnn[place] = [];
                for (var vv = 0; vv < nV.Nww.length; vv++) audio.ww.Nnn[place][vv] = new audio.mmn(nV.Nww[vv], 1, false, 1);
            }
        }
        if (audio.options.nNmMV === 1) {
            audio.vmv(wMw[WvwmM]);
            audio.vmv(audio.wMm.title);
        }
        for (var place = 0; place < audio.ww.Nnn.length; place++) {
            var Nww = audio.ww.Nnn[place];
            if (Nww === 1) audio.ww.Nnn[place] = audio.ww.WmnwN;
        }
        if (audio.options.VWVWW === 1) {
            audio.vmv(audio.ww.open);
            audio.vmv(audio.ww.play);
            audio.vmv(audio.ww.mmM);
            audio.vmv(audio.ww.nwVvN);
            audio.vmv(audio.ww.nvV);
            audio.vmv(audio.ww.button);
            audio.vmv(audio.ww.nNwmw);
            audio.vmv(audio.ww.mwM);
            for (var place = 0; place < audio.ww.WmnwN.length; place++) audio.vmv(audio.ww.WmnwN[place]);
            for (var place = 1; place < audio.ww.damage.length; place++) audio.vmv(audio.ww.damage[place]);
            for (var place = 0; place < audio.ww.Nnn.length; place++) {
                var Nww = audio.ww.Nnn[place];
                if (Nww !== 0) {
                    for (var vv = 0; vv < Nww.length; vv++) audio.vmv(Nww[vv]);
                }
            }
        }

        function nwwnv() {
            audio.MMwVn(audio.wMm.title);
            audio.MMwVn(audio.wMm.end);
            for (var place = 0; place < wMw.length; place++) audio.MMwVn(wMw[place]);
            if (audio.options.VWVWW === 1) {
                var wmNWn = audio.options.nNmMV;
                audio.options.nNmMV = 1;
                audio.MMwVn(audio.wMm.vwMNW);
                audio.options.nNmMV = wmNWn;
            }
            if ((NNwwM !== vWn.vwMNW) && (mWWVV === 1)) {
                if (VNWVM === 0) {
                    VNWVM = 1000;
                    var NWN = vWn.vwMNW - NNwwM;
                    audio.MmwVw(audio.wMm.vwMNW, 250, NWN);
                    NNwwM = vWn.vwMNW;
                }
                VNWVM = win.Math.max(0, VNWVM - mV);
            }
            if ((mvnmN === 0) && (mWWVV === 1)) {
                audio.MmwVw(wMw[WvwmM], 5000, -mvVWW);
                WvwmM = (WvwmM + 1) % wMw.length;
                mvnmN = wwwvv[WvwmM] - 5000;
                audio.MmwVw(wMw[WvwmM], 5000, mvVWW);
            }
            mvnmN = win.Math.max(0, mvnmN - mV);
        };;

        function NvwNv() {
            mWWVV = 0;
            vmwnm = 1;
            audio.MmwVw(audio.wMm.vwMNW, 250, -NNwwM);
            NNwwM = 0;
            vWn.vwMNW = 0;
            audio.MmwVw(wMw[WvwmM], 500, -mvVWW);
            audio.MmwVw(audio.wMm.end, 1000, vWn.mvVWW);
        };;

        function MWwnM() {
            if (vmwnm === 0) audio.MmwVw(audio.wMm.title, 500, -mvVWW);
            else audio.MmwVw(audio.wMm.end, 500, -mvVWW);
        };;

        function nMvWM() {
            mWWVV = 1;
            MWwnM();
            if (mvnmN === 0) WvwmM = (WvwmM + 1) % wMw.length;
            mvnmN = wwwvv[WvwmM] - 5000;
            audio.MmwVw(wMw[WvwmM], 5000, mvVWW);
        };;
        return {
            nMvWM: nMvWM,
            NvwNv: NvwNv,
            nwwnv: nwwnv,
            MWwnM: MWwnM,
            mvVWW: mvVWW,
            vwMNW: 0
        };
    })();
    try {
        wwwMN;
    } catch (vNn) {
        wwwMN = win.undefined;
    }
    if (wwwMN === win.undefined) {
        win.aiptag = win.aiptag || ({});
        win.aiptag["consented"] = true;
        win.aiptag["cmd"] = win.aiptag["cmd"] || ([]);
        win.aiptag["cmd"]["display"] = win.aiptag["cmd"]["display"] || ([]);
        win.aiptag["cmd"]["player"] = win.aiptag["cmd"]["player"] || ([]);
    }

    function NmwmN() {
        try {
            if (win.self !== win.top) {
                mVmvN = clint.getItem("inIframe");
                if (mVmvN === "1") clint.setItem("inIframe", "0");
                else {
                    clint.setItem("inIframe", "1");
                    win.location.href = win.location.href + "";
                }
            }
        } catch (vNn) {}
    };
    NmwmN();
    var mMwwv = [30, 1758];
    try {
        wwwMN;
    } catch (vNn) {
        wwwMN = win.undefined;
    }
    nNM.vnV(600, 30000, 5000);
    nv.vnV("json/servers.json", 30, 15000, 2000, 3, 60000, 10000, vwnNv, NVVvn, datatosrv);

    function mWVmN() {
        vVnmv = ((((((((true && (win.document.getElementById("nickname") !== null)) && (win.document.getElementById("terms") !== null)) && (win.document.getElementById("serverList") !== null)) && (win.document.getElementById("changelog") !== null)) && (win.document.getElementById("howtoplay") !== null)) && (win.document.getElementById("featuredVideo") !== null)) && (win.document.getElementById("trevda") !== null)) && (win.document.getElementById("preroll") !== null)) && (win.document.getElementById("chat") !== null);
        if (vVnmv === true) {
            Vnw.vnV();
            wmw.vnV();
            windowobjects.vnV();
            nmmVv.vnV();
            WvvMV.vnV();
            mapeditor.vnV();
            wN.vwnNn(Vnw, wVmNW, "can", "bod", 1280, win.undefined, true);
            Vnw.mnN();
        } else win.setTimeout(mWVmN, 100);
    };;
    win.onbeforeunload = function() {
        if (nv.state & nv.nMV.mWWwm) return "Are you sure you want quit?";
    };
    mWVmN();
})();
